%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Online_themes_2_07.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 1/15/2019
%%BoundingBox: 0 0 600 450
%%HiResBoundingBox: 0 0 600 450
%%CropBox: 0 0 600 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 12930 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7C4FD63FFA9FFAFFFA9FFAFFF
%A9FFAFFFA9B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7C4FD62FFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFFD0FB7C4FD63FFAFAFA9FFAFAFA9FFAFAFA9FFAFB7B7
%B2B7B7B7B2B7B7B7B2B7B7B7B2C4FD62FFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFB7B7B8B7B7B7B8B7B7B7B8B7B7B7B8C4FD63FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2CBFD62FFAFAFA9AFA9AFA9AF
%A9AFA9AFA9AFFD0FB7FD64FFA9FFAFAFA9FFAFAFA9FFAFAFA9B2B7B7B7B2
%B7B7B7B2B7B7B7B2B7BDFD65FFA9AFA9AFA9AFA9AFA9AFA9AFB8B7B7B7B8
%B7B7B7B8B7B7B7B8B7FD67FFAFFFA9FFAFFFA9FFAFFFA9B2B7B7B7B2B7B7
%B7B2B7B7B7B2C4FD67FFAFA9AFA9AFA9AFA9AFA9AFFD0CB7BEFD6AFFAFAF
%A9FFAFAFA9FFAFB7B7B2B7B7B7B2B7B7B7B2B7CAFD45FF7E5A53FD21FFAF
%FFA9AFA9AFA9AFA9AFB7B7B8B7B7B7B8B7B7B7BECBFD45FFA9FFAFA92F84
%FD22FFAFFFAFFFA9FFAFB7B7B2B7B7B7B2B7B7C4CAFD46FFAF8484A9AF7E
%2F84FD25FFAFFFFD07B7BEFD49FFA92F062F84FFA97E2FFD26FFBEBEBDBE
%BECBCBFD49FFA97E060606292FA9A8AF2F5AFD75FF5A2F062F062F065AA9
%FF845A84FD72FFA95A062806290628062F59AFA8842FA9FD5DFFA9FD12FF
%AF2F2F0629062F0629062F2FA9A9FF5A5AA9FD5AFFA9A95AFD11FF7E2F06
%290606062906060629065384FFA85459FD5AFFAFFF8485FD0EFFAF5A062F
%062F062F062F062F062F062F59AFA9A92F84FD57FFA9AFA9FFA98484FD0C
%FFAF2F280629062806290628062906280629067EA9FF7E2FA8FD26FFA85A
%535A597E535A7E84537E535A53A8A9537D7EA9597D5A7E537D537E597E5A
%7EA87D7E2F7E537E2F7EFD04FFA9FFAFAFA9FFAFAF5AFD0BFFA95A062906
%2F0629062F0629062F0629062F065384FFA97E53FD25FFA928532F532F06
%7E2F59532F292F062FA9592F28FF065306592F59287E067E067E06592829
%2F062F2F53FD04FFAFA9AFA9AFA9AFA9AF8484FD08FFA9A929290606065A
%2F060629060606290606062906062FA9A9A92F7EFD23FFA8532F2F532F29
%532F532F592F532F59A9535384FF53A859532F532F592F532F592F532F06
%5329592F53FD04FFA9FFFFFFA9FFAFFFA9FF84AFFD08FF5A2F062F062F59
%AF7E2F062F062F062F062F062F062F067EA9FF84547EFD22FFA8A8A8FFA8
%FFA8AFA8A9A8FFA8A9A8FFA8FFA8FFA8FFA8AFA8FFA8AFA8A8A8AFA8A984
%A9A8A9A8FFA8FFFFFFAFAFA9FFA9FFA9AFA9AFA9A9A8FD07FFA95A062906
%2806A82F7EA95906280629062806290628062906297EFFA87E2FFD4EFFAF
%AFA9FFAFFFFFFFAFFF84FD09FF2F29062F06297EFF7E532F2F0629062F06
%29062F0629062F06292FA9AFAF535AFD1FFFA8FD0AFFAFA8FFFFFFA8FD0B
%FFA8FFAFFFFFFFA8FFA8FFA9FD05FFAFFFA9AFA9AFA9FFA9AFA97EFD08FF
%A92F06060629060628A9A82906290606062906060629060606290606065A
%84AF84305AFD1EFF84A984A9A9A984A984AF84A97EA984A9A9A984A9A8AF
%84A984A984A984A984AF84A97EA984A984A9FD06FFAFFFAFFFA9FFAFFF7E
%FD07FFAF852F2F062F062F062F065A062F062F062F062F062F062F062F06
%2F062F062F5AFFAF852FA9FD1BFF7EA9A8A984AF84A884A9A8A88484A8A9
%84FF84A97EA9A8A984A984A884A984A9A8A9848484A9848484FD07FFA8AF
%A9AFA9AFA97895FD06FFAF5A2F062806297E5A0629062806290628062906
%280629062806290628062906282884A9AF595AA8FD1AFFA8FFFFFFA9FFA9
%FD07FFA9FD20FFCBB7CBAFAFA9AF9CCB95C4FD04FFAF5A062F0629065AA9
%A92F2F0629062F0629062F0629062F0629062F0629062F0629065984FFA8
%5A5AFD18FF7E84A8A87EFD04847E84A87E847EA97E845A847E84FD1AFFC4
%B7B2BEA2AF7EB7B7C49BBEFFFFA9AF2F0606290606062959A92F29060606
%29062806290606062906060629060606290606062953A9A87E2FFD17FFAF
%A8FFA9AFA8FFA9FFA8FFA9AFA8AFA9FFA8AF84AFA8FD1AFFBEB7B8FFBEB7
%B8B7B7B7C495FFFFFF852F062F062F062F062F282F062F282F062F95532F
%2F062F062F062F062F062F062F062F062F28AFAF53A8FD46FFB7B7B2BEB7
%FFFD06B7FFFFA98407280629062806290628062953AF5329062828FF062F
%0629062806290628062906280629062853FF5984FD46FFC4FD05B7C4C4B7
%B7C495FFFFFF5A2F0629062F0629062F0629065A53A984530629065A5A4D
%062F0629062F0629062F0629062F0653A97EA8FD17FFCAC4C4BEC4C4C4BE
%C4C4C4BEC4C4C4BEC4C4FD1DFFCAC4B7B7B2B7B7B7B2B79BC4FFFFA95A06
%29060606290606062906067EFF595A848528060629952906290606062906
%0606290606062953AF28FD17FFC4B7B7B7B8B7B7B7B8B7B7B7BEB7B7B7B8
%B7B7B7FD1FFFBDB8B7B7B7B8B7C4C4FFFFFF2F2F062F062F062F062F062F
%298453FFA95A7EFF5A2F062F062F062F062F062F062F062F062F06A9A859
%FD17FFB2FD04B7CBFFFFBDCBBDFFC4CBFFBEB2B7B7B7CAFD1FFFCABEB7B7
%B2B79BCBFFFF7E2F0629062806290628062906297EAF537EA8A92F84A85A
%0628062906280629062806290628062984A953FD17FFFD05B7C4FFC4B7C4
%BECBCBC4FFFD05B7CBFD1CFFAFFD04FFC4B7B7BDBEFFFFA97E2929062F06
%29062F0629062F06292FAFA9597EFF7E5A84A92F29062F0629062F062906
%2F062906FF7EA8FD17FFC4B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2C4
%FD1AFFA9AFA9AFA9FD05FFBDC4A2FFFFAF2F290606062906060629060606
%290606065AA8842FA9064D53AF5A2F062906060629060606290653A953A8
%FD18FFCBCBCACBCACBCACBCACBCACBCACBCACBCAFD1BFFAFFFAFFFA9FFAF
%FD09FFA95A062F062F062F062F062F062F062F062F062F7EFF7E2F95B74D
%84592F062F062F062F062F062F5AFF2FFD46FFA9AFA9AFA9AFFD09FFAF2F
%2F0628062906280629062806290628062906282885A9294CB77129062906
%280629062806290684A859FD47FFA1CACAFFA9FD09FFAF852F2F0629062F
%0629062F0629062F0629062F0629062F062928950629062F0629062F0629
%062FAFA97EFD47FFCACACAC9FD07FFA9AFA9AFA9A92F2F06060629060606
%29060606290606062906060629060606290606062906060629060628AF59
%A8FD45FFCBB7B7CAC3CACAFD05FFAFFFA9857EAFA9FF845A2F2F062F062F
%062F062F062F062F062F062F062F062F062F062F062F062F062F067EAF53
%FD45FFCAB7B7B7CACACABEC4FFAFAFA9AFFD055AAFA9AFA97E2F2F062806
%2906280629062806290628062906280629062806290628062906287EAF2F
%FD36FFAFFD0EFFBEB7B7B7BECACBB7B7A8FFA985FD055A855A5A84FFAFAF
%5A5A0629062F0629062F0629062F0629062F0629062F0629062F0629062F
%06AFA87EFD33FFAFFFA9AFA9AFA9FD0AFFCBB7B7B2B7B7B7B2B7B7BE7E5A
%365A3085365A30855A7E5AAFA9AF845A2F06062906060629060606290606
%0629060606292F5A06290606062FA9847EFD32FFAFFFAFA9545A85FFA9FD
%09FFBEB78FB8B7B7B7B8B7B7955B5A855A5B5A855A855A5A5A855AA9A9FF
%AF852F2F062F062F062F062F062F062F062F062F84FFA9AF5A2F062F53FF
%53FD32FFA9AFA95A2F5A305A2FA9A9AFAFFD06FFCAB78FB2B7B7B78FB7B7
%B75A5A365A5A5A36FD055A30855A5A84AFA9AF5A5A062806290628062906
%280629067EA9AFA9AFA9AFA954067EA82FFD31FF84FFAFAF5A5A5A85365A
%85AFAFFD07FFCACAFD06B7B2B7B77E5A855A5A5A855A5A36855A5A5A8584
%5A5AAFAFFFA95A2F2F062F0629062F062953AFAFAFA9FFAFAFA9FFAF857E
%AF53FD31FF5A7EFFA9AF845A3685A9FFA9A92FFD06FFCAC3BEB7B7B2B78F
%B7B2B7535A365A36FD095A71B7957E7EAFA9AFA9A92F2F06290606065384
%AFA9AFA9AFA9AFA9AFA9AFA9AF7E7EFD31FF5A5A2FAFFFFFAFFFAFFFA984
%5A5AFD06FFA8CAB7B7B7B8B7B7B7BE9B7E5A855A5A5A5B5A5A7E5B5AA2B7
%B8B7B7B79CA9FFA9FFAFFF7E5A2F2F2F85AFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFA9A9FD31FF5A302F5AA8FFAFFF53305384FFFFFF5AA8AFA9CAC3B7
%B7B7B2B7B7C3C3A836FD045A845A855A5A53BEB7B7B2B7B7B7B2B79CAFA9
%AFA9AFA97E5AAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A97EFD30
%FF7E5A2F302F5A2F302F84A8FFFFFF5A5A2FFFA8CAFD05B7C4C9CA5A5A5A
%855A855A5A5A8595FD0CB7A3A9FFAFAF84AFAFAFA9FFAFAFA9FFAFAFA9FF
%AFAFA9FFAFAFA9FFAF85FD2EFFA9597E595A2F362F5A537E597E7EFF845A
%365A2F7EC3B7B2B7B7C3C3CA9BAF845A365A305A5A9C8FB7B7B7B2B7B7B7
%B2B7B7B7B2B7B79C7EAF7E5A3085A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AF845A2FFD2EFFA9847E847E7E59FD047E847EA9A9AF5A5A5A5B5A5A9B
%B8B7C4C9C4B7BEA9FFA9855A617EB7B7B8B7B7B7B8B7B7B7B8B7C4BDB8B7
%B7B7B89C85292F2985A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFAF5A5A2F30FD
%30FFA8597E597E597E597E7EAFA9AF845A365A305A362FA8CAC3BDB2B795
%AFA9AFA9A995B7B7B7B2B7B7B7B2B7B7B7BDFFFFFFC4BEB7B7B2B7772F06
%29062F5AAFA9AFA9AFA9AFA9AFA9AFA985FD052FFD32FF847E7E7E59A8AF
%84FFFFAFAF365A5A5A365A2FCAC9CBB7B7B79CAFAFA9C4FD0BB7BECAFD06
%FFC4B7B7B79C292F2F2F06293085AFAFA9FFAFAFA9FF855A2F362F2F0736
%FD33FFA8A87EA9FFFF5384A8FFA95A305A365A305AA8FFFFFF530684AFA9
%958FB7B7B7B2B7B7B7B2B7B7C4FD0AFFBDB7712F2F2F06300606065A84AF
%A9AFA9A9592F2F2F06FD042FFD3AFF365A84FFAFFD045A5B2FFFA9FF7E2F
%59FFAFFFA2B78FB7B7B8B7B7B7B8BEFD0DFFB79C2F2F2F7E7E5A2F2F062F
%5AAFA9852F5A2F2F295A2F30295AFD3BFF592F2F840629295A305AAFA92F
%2F59AFA9FFFFCB9BB78FB7B2B7B7B7B2B7C4FD09FFCAC4B7B7712F062F29
%2F847E2F2F06295A5A2F2F29FD042F302F2F2FFD3CFFA95A2F29062F0630
%2F5A065384FFAFFFFFFF95B79BC495B28FFD05B7BDCBFD06FFC4FD04B79C
%292F292F2F2F53A82F5A2F542F30292F2F362F302F362F30FD3CFFA8592F
%060628290606067EA9AFA9FD05FF9C8F95BE95958EB7B7B7B2B7B7BECAFF
%FFCBFD04B7B2C47E2F2F5A2F06062F0653285A292F06FD0A2FFD3CFF7E84
%592F062F062F2FFFAFFFA9FD07FFCB9C8FBE9BBE8FB7B7B8B7B7B7BEC4C4
%B7B8B7B7BDCBBDA22930FD042F06FD042F542F2F2F302F5A2F2F2F5A2F30
%FD3BFFA97E597E06282829062F84FFA9AFA9AFFD04FFA87E597E6B9595BE
%958F8FB7B7B7B2B7B7B7B2B7C4C4B7CB7E2F2F2F53A82F3606292F5A2F2F
%06302F2F0629FD052FFD3DFFA97E2F0653062F2F3059FFFFFFA9FFAFFFFF
%FF7E7E597E77958FBE9BB78FFD06B7C4C4BEC4FFCAA229292F2F28847E5A
%2F2F06542F2F2F30295A4D7E2F302936FD3FFF06292F060653532F2F7EAF
%FFA9AFA9FFAFFF7E7E597E59778E959BBD8EB28FB7BDCBB7C4CACBC4B753
%2F292F062F292F7E2F2F2F292F072F065A5A77FD052FFD3FFF59065A062F
%537E7E5A2F3084FFAFFFA9FFFFFFA8847E7E5A7E71B795C495B7C4C4BEFF
%CBCBB7772F5A2F2F305A292F2F2F287E2F54FD042F7E5A2F5A2F30295AFD
%3FFF2F2953290653597E597E2F2F2FAFFFAFA9AFA9FFA9A9595A597E5395
%8FBE9BC4C4FFC4BE957E53FD052F292F2F280630062F2930292F2F5A2F2F
%2F302F2F2FFD2FFFCBC4C4BDC4C4FD0AFFA806A22F2953847E7E597E5953
%2F7EFFFFA9FFAFAFA9AF7E7E597E5A788FB7C4CBBEB7777E597E5A5A292F
%2F2F845A2F2F062F36542F2F2F302F362F302F362F30FD2DFFCABEB7B7B2
%FD04B7CBFD08FFBDC49B59067EA8A8597E597E59592F2F7EFFA9AFA9AFA9
%AF847E535A595A71CAB777535A595A7EAF7E2F062F2F2953842F2F062929
%2F06FD0A2FFD2DFFBEB7FFB7B8B7B7BDB8BDFD08FFB7B7CBC47EA2FFFFFF
%7E847E7E7E8453302FAFFFFFA9FFAFFFA9A95A7E5A7E7E7E5A7E5A84A9FF
%AF8529302F2F2F54287E535A2F302F2F2F302F5A2F302F5A2F30FD2CFFCB
%B2B7CAC4C4CBCACAB7C4FD07FFCBB7BEFFBEB7BEFD04FFA87E597E597E59
%2F2F5AA8FFA9AFA9AFA9AF7E5A597E595A59A9A9AFA9FF7E2F2F5A2F2F06
%2F29294D532F2F06302F2F2F30FD052FFD2CFFCACBB7CBC4BEB7B7B7C4B7
%FD08FFCBFFCBB7B8CBFD06FFA97E7E597E7E7E2F367EFFAFFFAFAFA9FFA9
%84597E84AFA9FFFFFF5930292F294D2F30062F2F2F28542F2F2F362F302F
%362F302936FD2DFFBDC4FD04B7BDC4BDCAFD0AFFCAB7C4FD09FF7E7E597E
%597E2F2F2F84A8FFA9AFA9AFA9AFA9AFA9FFA984062F2F2F292F22954C2F
%2F29065A292F07FD0A2FFD2DFFC4B7FD04C4BEB79C84FD17FFA9847E7E7E
%847E5A2F5AA9FFAFFFAFFFA9FFAFFF842F285A7E7E2F2F065A294D71532F
%2F06542F2F2F5A2F302F5A2F30295AFD2DFFA87E77BD959B777E59A9FD10
%FFA9AFAFFD06FFA97D7E597E597E2F2F53FFAFFFA9AFA9FF2F282F7E597E
%592F2F2F062F2F284C592F302930292F2F302F2F2F302F2F2FFD2EFF847E
%59FD047EAFFD10FFAFAFA9FFAFFD07FFA87E597E7E7E59542F84A8FFA97E
%062F597E597E7E7E29302F5AFD042F06532F542F2F2F302F362F302F362F
%30FD09FFA9AFA9AFA9FD21FFA8A884A9A8FD10FFAF5AA9A9AFA97E59FD07
%FFA884597E597E59592F2F062F0659597E597E7DA984FD072F062F062F29
%2F06FD072F072F2FFD0AFFAFFFA9FFAFFD35FFA95B5A85842F067EFD0AFF
%7E7E7E847E7E595A597E7E847E84A8FFFFA9292F2F2F5A842F5A062F3054
%2F2F2F302F5A2F30292F2F30FD09FFA9AFA9AFA9AFA9FD34FFAF5AFF362F
%062959FD0BFFA87E597E597E597E597E59A8A9FFFFFFA95A292F2F2F2884
%592F2F2F292F0630FD042F292F2F305AFD09FFAFA9FFAFAFA9FFAFFD33FF
%A95A845A2F290684FD0DFFA8597E7E7E597E7EFD07FFA95A292F2F302853
%592F2F542F2F2F362F2F2F362F5AA9FD0AFFA9AFA9AFA9AFA9AFA9FD33FF
%A85A302F28A8FD10FF7E7E597EA8FD09FFAF852F2F292F2F29282F292F07
%2F06FD042F84FD0DFFA9FFAFFFA9FFAFFD34FFA97E7E537E84FD1FFFA884
%5A5AFD052F542F2F2F5A2F5A53847E84A8FD0AFFA9AFA9AFA9AFA9AFA9FD
%33FF847E597E5984A8FD1DFF7D7E597E595A292F072F29302F2F2F5A597E
%597E597EFD0BFFAFAFA9FFAFAFA9FFAFFD33FFA9847EFD1FFFAFA87E7E59
%7E7E7E5A54295A2F362F7E597E7E7E5984A9FD0AFFA9AFA9AFA9AFA9AFA9
%FD58FFA97D7E597E597E595A302F537E597E597E7DA8FD0DFFAFFFA9FFAF
%FFA9FFAFFD59FFA8847E7E7E847E7E59847E7E7E84A8FD0EFFA9AFA9AFA9
%AFA9AFA9FD5BFFA8A8597E597E597E597E5984A8FD0FFFAFA9FFAFAFA9FF
%AFAFAFFD5DFF7E7E59FD047EFD12FFA9AFA9AFA9AFA9AFA9FD5FFFA87E59
%7E84FD14FFA9FFAFFFA9FFAFFD78FFA9AFA9AFA9AFA9AFAFFD78FFAFAFA9
%FFAFAFAFFD78FFA9AFA9AFA9AFA9FD78FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 7 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Online_themes</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-01-15T16:18:12+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-01-15T16:18:12+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-01-15T16:18:12+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>236</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA7AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Jc7TTALvU7mGzgB4rJP&#xA;Ika8iDtyYgdAcyZy4hUd3HhDhNlc3mzysiqz6zYqrLzVjcwgFTtyHxdNsp8KXcW7jj3q9pr2h3kw&#xA;gtNRtbiZqhYopo3Y0HI/CrE9N8BhIcwokD1R2RZOxVC3tm05VkIDDah6Uy3Hk4WrJj4lO7tJpXjC&#xA;gUVQC1dsljyAAscmMkhpdY0WGMI2oWwEYoSZox9nY138crMZE8m0EAc1S21jSLqRY7a+t55HHJEi&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2488e288-b0b7-7343-b44c-d217e0c035c6</stRef:instanceID>
            <stRef:documentID>xmp.did:2488e288-b0b7-7343-b44c-d217e0c035c6</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</stEvt:instanceID>
                  <stEvt:when>2019-01-15T16:18:12+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=61 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=105 G=157 B=209</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>209</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=0 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
600 450 li
600 0 li
cp
clp
.000244141 72.1194 mo
3.41528 72.7043 6.92603 73.0129 10.5081 73.0129 cv
44.6536 73.0129 72.3333 45.3333 72.3333 11.1877 cv
72.3333 7.36743 71.9846 3.62915 71.3206 .000244141 cv
.000244141 .000244141 li
.000244141 72.1194 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 .912535 0 0 cmyk
f
27.8958 450 mo
38.3586 441.744 45.0823 428.96 45.0823 414.598 cv
45.0823 389.699 24.8987 369.516 .000244141 369.516 cv
.000244141 450 li
27.8958 450 li
cp
.147219 .0154116 0 0 cmyk
f
149.833 187.948 mo
76.0042 187.948 li
70.3147 187.948 65.7024 183.335 65.7024 177.646 cv
65.7024 171.956 70.3147 167.344 76.0042 167.344 cv
149.833 167.344 li
155.523 167.344 160.135 171.956 160.135 177.646 cv
160.135 183.335 155.523 187.948 149.833 187.948 cv
cp
0 .912535 0 0 cmyk
f
90.4065 182.232 mo
90.4065 174.706 li
88.9475 174.706 li
88.9475 173.536 li
93.4006 173.536 li
93.4006 174.706 li
91.9905 174.706 li
91.9905 182.232 li
90.4065 182.232 li
cp
0 0 0 0 cmyk
f
95.677 177.249 mo
96.0598 177.249 li
96.5276 177.249 96.8616 177.15 97.0588 176.95 cv
97.2561 176.751 97.3557 176.41 97.3557 175.928 cv
97.3557 175.463 97.2698 175.13 97.0979 174.929 cv
96.926 174.728 96.6116 174.627 96.1545 174.627 cv
95.677 174.627 li
95.677 177.249 li
cp
94.093 182.232 mo
94.093 173.536 li
96.0862 173.536 li
96.5432 173.536 96.9377 173.573 97.2659 173.649 cv
97.594 173.724 97.8801 173.85 98.1233 174.027 cv
98.3665 174.203 98.5481 174.443 98.6682 174.745 cv
98.7893 175.048 98.8499 175.417 98.8499 175.855 cv
98.8499 176.4 98.7678 176.846 98.6057 177.192 cv
98.4436 177.538 98.175 177.789 97.801 177.947 cv
99.0071 182.232 li
97.4182 182.232 li
96.3792 178.262 li
95.677 178.262 li
95.677 182.232 li
94.093 182.232 li
cp
f
101.256 182.232 mo
101.256 178.922 li
99.4846 173.536 li
100.963 173.536 li
102.038 176.997 li
103.067 173.536 li
104.53 173.536 li
102.768 178.922 li
102.768 182.232 li
101.256 182.232 li
cp
f
107.953 182.232 mo
107.953 173.536 li
109.516 173.536 li
109.516 182.232 li
107.953 182.232 li
cp
f
111.703 182.232 mo
111.703 174.706 li
110.245 174.706 li
110.245 173.536 li
114.698 173.536 li
114.698 174.706 li
113.287 174.706 li
113.287 182.232 li
111.703 182.232 li
cp
f
118.012 182.232 mo
118.012 173.536 li
119.104 173.536 li
121.233 178.461 li
121.233 173.536 li
122.543 173.536 li
122.543 182.232 li
121.505 182.232 li
119.355 177.055 li
119.355 182.232 li
118.012 182.232 li
cp
f
125.814 181.094 mo
125.924 181.139 126.056 181.161 126.209 181.161 cv
126.364 181.161 126.494 181.139 126.603 181.094 cv
126.711 181.048 126.798 180.989 126.863 180.915 cv
126.928 180.842 126.978 180.745 127.015 180.627 cv
127.051 180.508 127.076 180.389 127.088 180.27 cv
127.1 180.152 127.107 180.01 127.107 179.845 cv
127.107 175.897 li
127.107 175.687 127.096 175.512 127.074 175.372 cv
127.054 175.232 127.013 175.1 126.951 174.976 cv
126.891 174.852 126.799 174.759 126.676 174.698 cv
126.554 174.637 126.399 174.606 126.209 174.606 cv
126.021 174.606 125.865 174.637 125.74 174.698 cv
125.615 174.759 125.524 174.852 125.465 174.976 cv
125.406 175.1 125.365 175.232 125.344 175.372 cv
125.323 175.512 125.313 175.687 125.313 175.897 cv
125.313 179.845 li
125.313 180.01 125.319 180.152 125.331 180.27 cv
125.344 180.389 125.367 180.508 125.405 180.627 cv
125.442 180.745 125.49 180.842 125.554 180.915 cv
125.617 180.989 125.703 181.048 125.814 181.094 cv
cp
126.209 182.336 mo
125.315 182.336 124.673 182.094 124.285 181.608 cv
123.897 181.121 123.703 180.41 123.703 179.473 cv
123.703 176.264 li
123.703 175.802 123.746 175.402 123.834 175.063 cv
123.921 174.723 124.063 174.43 124.256 174.181 cv
124.449 173.933 124.709 173.747 125.035 173.623 cv
125.36 173.499 125.752 173.437 126.209 173.437 cv
127.102 173.437 127.742 173.676 128.131 174.156 cv
128.522 174.634 128.717 175.337 128.717 176.264 cv
128.717 179.473 li
128.717 179.928 128.672 180.327 128.582 180.671 cv
128.493 181.016 128.352 181.315 128.158 181.569 cv
127.964 181.822 127.704 182.013 127.379 182.143 cv
127.054 182.272 126.664 182.336 126.209 182.336 cv
cp
f
130.82 182.232 mo
129.576 173.536 li
130.908 173.536 li
131.622 179.143 li
132.551 173.536 li
133.615 173.536 li
134.565 179.148 li
135.278 173.536 li
136.583 173.536 li
135.34 182.232 li
134.076 182.232 li
133.096 176.426 li
132.12 182.232 li
130.82 182.232 li
cp
f
65.303 117.499 mo
65.303 104.327 li
70.8157 104.327 li
70.8157 106.02 li
67.7014 106.02 li
67.7014 109.801 li
70.1643 109.801 li
70.1643 111.493 li
67.7014 111.493 li
67.7014 115.839 li
70.8557 115.839 li
70.8557 117.499 li
65.303 117.499 li
cp
1 .866484 .240818 .0951247 cmyk
f
74.637 115.815 mo
75.3206 115.815 li
75.5588 115.815 75.7678 115.794 75.9485 115.751 cv
76.1282 115.709 76.2795 115.659 76.4006 115.601 cv
76.5227 115.542 76.6243 115.448 76.7073 115.315 cv
76.7893 115.182 76.8508 115.061 76.8938 114.949 cv
76.9358 114.838 76.968 114.67 76.9885 114.445 cv
77.01 114.22 77.0237 114.028 77.0286 113.868 cv
77.0334 113.71 77.0364 113.474 77.0364 113.161 cv
77.0364 108.348 li
77.0364 108.035 77.0315 107.783 77.0208 107.593 cv
77.01 107.403 76.9846 107.21 76.9456 107.017 cv
76.9055 106.823 76.8469 106.674 76.7708 106.568 cv
76.6936 106.462 76.592 106.365 76.4641 106.279 cv
76.3372 106.191 76.179 106.13 75.9875 106.095 cv
75.7971 106.061 75.5667 106.044 75.2971 106.044 cv
74.637 106.044 li
74.637 115.815 li
cp
72.2385 117.499 mo
72.2385 104.327 li
75.3049 104.327 li
76.0989 104.327 76.7639 104.407 77.2991 104.566 cv
77.8333 104.725 78.2629 104.977 78.5852 105.321 cv
78.9084 105.665 79.1379 106.087 79.2727 106.588 cv
79.4075 107.088 79.4758 107.704 79.4758 108.435 cv
79.4758 113.186 li
79.4758 113.938 79.4065 114.575 79.2688 115.1 cv
79.1311 115.624 78.9045 116.07 78.5901 116.435 cv
78.2747 116.8 77.8547 117.069 77.3303 117.241 cv
76.8059 117.413 76.1624 117.499 75.3997 117.499 cv
72.2385 117.499 li
cp
f
84.8459 117.658 mo
84.2581 117.658 83.7483 117.589 83.3167 117.451 cv
82.885 117.314 82.5305 117.12 82.2522 116.871 cv
81.9739 116.622 81.7512 116.304 81.5852 115.914 cv
81.4182 115.525 81.301 115.104 81.2356 114.652 cv
81.1692 114.198 81.136 113.673 81.136 113.074 cv
81.136 104.327 li
83.4631 104.327 li
83.4631 113.321 li
83.4631 113.628 83.4719 113.89 83.4875 114.107 cv
83.5032 114.324 83.5374 114.552 83.5911 114.79 cv
83.6438 115.029 83.719 115.219 83.8167 115.363 cv
83.9153 115.505 84.05 115.624 84.2219 115.72 cv
84.3948 115.815 84.6018 115.863 84.8459 115.863 cv
85.0891 115.863 85.2971 115.815 85.47 115.72 cv
85.6418 115.624 85.7737 115.505 85.8665 115.363 cv
85.9592 115.219 86.0334 115.029 86.0891 114.79 cv
86.1448 114.552 86.179 114.325 86.1926 114.111 cv
86.2053 113.897 86.2122 113.633 86.2122 113.321 cv
86.2122 104.327 li
88.5403 104.327 li
88.5403 113.074 li
88.5403 113.673 88.5071 114.198 88.4407 114.652 cv
88.3743 115.104 88.2581 115.525 88.0911 115.914 cv
87.9241 116.304 87.7034 116.622 87.428 116.871 cv
87.1526 117.12 86.7991 117.314 86.3674 117.451 cv
85.9358 117.589 85.428 117.658 84.8459 117.658 cv
cp
f
93.9426 117.658 mo
93.3752 117.658 92.8752 117.586 92.4407 117.444 cv
92.0061 117.301 91.6477 117.102 91.3645 116.848 cv
91.0813 116.594 90.8508 116.279 90.6731 115.903 cv
90.4954 115.527 90.3713 115.122 90.3 114.691 cv
90.2288 114.259 90.1926 113.774 90.1926 113.234 cv
90.1926 108.642 li
90.1926 108.07 90.2297 107.563 90.304 107.12 cv
90.3782 106.678 90.5022 106.268 90.677 105.889 cv
90.8518 105.51 91.0813 105.199 91.3645 104.955 cv
91.6477 104.712 92.0051 104.521 92.4368 104.383 cv
92.8684 104.245 93.3704 104.177 93.9426 104.177 cv
94.5989 104.177 95.1604 104.264 95.6262 104.439 cv
96.092 104.614 96.4602 104.87 96.7307 105.209 cv
97.0012 105.549 97.1965 105.945 97.3186 106.398 cv
97.4407 106.85 97.5012 107.378 97.5012 107.982 cv
97.5012 109.111 li
95.1897 109.111 li
95.1897 107.99 li
95.1897 107.333 95.1555 106.891 95.0862 106.663 cv
94.9485 106.219 94.6125 105.98 94.0774 105.948 cv
93.9504 105.948 li
93.7493 105.948 93.5725 105.972 93.4221 106.02 cv
93.2708 106.068 93.1477 106.143 93.053 106.246 cv
92.9573 106.35 92.8801 106.459 92.8225 106.576 cv
92.7639 106.693 92.72 106.845 92.6907 107.032 cv
92.6624 107.221 92.6438 107.394 92.636 107.553 cv
92.6272 107.712 92.6233 107.913 92.6233 108.156 cv
92.6233 113.734 li
92.6233 114.507 92.72 115.058 92.9133 115.386 cv
93.1067 115.714 93.4524 115.878 93.9504 115.878 cv
94.1194 115.878 94.2698 115.859 94.3987 115.819 cv
94.5286 115.78 94.6379 115.729 94.7249 115.668 cv
94.8118 115.608 94.886 115.52 94.9475 115.406 cv
95.0081 115.292 95.0549 115.186 95.0862 115.088 cv
95.1184 114.99 95.1418 114.854 95.1575 114.679 cv
95.1741 114.504 95.1829 114.356 95.1858 114.235 cv
95.1877 114.113 95.1897 113.946 95.1897 113.734 cv
95.1897 112.558 li
97.5012 112.558 li
97.5012 113.638 li
97.5012 114.131 97.467 114.573 97.3977 114.965 cv
97.3293 115.357 97.2112 115.725 97.0442 116.07 cv
96.8782 116.413 96.6624 116.699 96.3967 116.927 cv
96.1321 117.156 95.7932 117.334 95.3801 117.463 cv
94.967 117.593 94.4875 117.658 93.9426 117.658 cv
cp
f
101.537 112.876 mo
103.301 112.876 li
102.419 107.466 li
101.537 112.876 li
cp
98.4788 117.499 mo
101.156 104.327 li
103.658 104.327 li
106.327 117.499 li
104.095 117.499 li
103.563 114.441 li
101.283 114.441 li
100.743 117.499 li
98.4788 117.499 li
cp
f
108.449 117.499 mo
108.449 106.1 li
106.24 106.1 li
106.24 104.327 li
112.986 104.327 li
112.986 106.1 li
110.848 106.1 li
110.848 117.499 li
108.449 117.499 li
cp
f
114.106 117.499 mo
114.106 104.327 li
116.473 104.327 li
116.473 117.499 li
114.106 117.499 li
cp
f
121.482 115.776 mo
121.649 115.844 121.849 115.878 122.082 115.878 cv
122.315 115.878 122.513 115.844 122.678 115.776 cv
122.842 115.706 122.973 115.616 123.071 115.505 cv
123.169 115.394 123.245 115.248 123.301 115.069 cv
123.357 114.888 123.394 114.708 123.412 114.529 cv
123.431 114.348 123.441 114.134 123.441 113.885 cv
123.441 107.903 li
123.441 107.585 123.424 107.321 123.393 107.109 cv
123.361 106.897 123.298 106.697 123.206 106.508 cv
123.114 106.321 122.974 106.18 122.789 106.087 cv
122.604 105.994 122.367 105.948 122.082 105.948 cv
121.796 105.948 121.559 105.994 121.37 106.087 cv
121.183 106.18 121.044 106.321 120.953 106.508 cv
120.864 106.697 120.803 106.897 120.771 107.109 cv
120.74 107.321 120.723 107.585 120.723 107.903 cv
120.723 113.885 li
120.723 114.134 120.733 114.348 120.751 114.529 cv
120.77 114.708 120.807 114.888 120.863 115.069 cv
120.918 115.248 120.993 115.394 121.089 115.505 cv
121.184 115.616 121.316 115.706 121.482 115.776 cv
cp
122.082 117.658 mo
120.726 117.658 119.754 117.29 119.166 116.554 cv
118.578 115.818 118.284 114.74 118.284 113.321 cv
118.284 108.459 li
118.284 107.76 118.351 107.154 118.483 106.64 cv
118.615 106.126 118.828 105.681 119.122 105.305 cv
119.416 104.929 119.81 104.647 120.302 104.459 cv
120.795 104.271 121.388 104.177 122.082 104.177 cv
123.432 104.177 124.403 104.539 124.993 105.265 cv
125.584 105.99 125.879 107.055 125.879 108.459 cv
125.879 113.321 li
125.879 114.009 125.812 114.615 125.677 115.136 cv
125.541 115.657 125.327 116.111 125.033 116.494 cv
124.74 116.878 124.346 117.168 123.854 117.365 cv
123.361 117.56 122.77 117.658 122.082 117.658 cv
cp
f
127.635 117.499 mo
127.635 104.327 li
129.287 104.327 li
132.513 111.787 li
132.513 104.327 li
134.498 104.327 li
134.498 117.499 li
132.926 117.499 li
129.668 109.658 li
129.668 117.499 li
127.635 117.499 li
cp
f
143.423 115.776 mo
143.59 115.844 143.79 115.878 144.024 115.878 cv
144.256 115.878 144.454 115.844 144.619 115.776 cv
144.783 115.706 144.914 115.616 145.012 115.505 cv
145.111 115.394 145.187 115.248 145.242 115.069 cv
145.298 114.888 145.335 114.708 145.354 114.529 cv
145.372 114.348 145.382 114.134 145.382 113.885 cv
145.382 107.903 li
145.382 107.585 145.365 107.321 145.334 107.109 cv
145.302 106.897 145.24 106.697 145.148 106.508 cv
145.055 106.321 144.915 106.18 144.731 106.087 cv
144.545 105.994 144.309 105.948 144.024 105.948 cv
143.738 105.948 143.5 105.994 143.312 106.087 cv
143.124 106.18 142.986 106.321 142.895 106.508 cv
142.805 106.697 142.744 106.897 142.712 107.109 cv
142.681 107.321 142.664 107.585 142.664 107.903 cv
142.664 113.885 li
142.664 114.134 142.674 114.348 142.693 114.529 cv
142.711 114.708 142.748 114.888 142.804 115.069 cv
142.86 115.248 142.935 115.394 143.031 115.505 cv
143.125 115.616 143.257 115.706 143.423 115.776 cv
cp
144.024 117.658 mo
142.667 117.658 141.696 117.29 141.108 116.554 cv
140.52 115.818 140.226 114.74 140.226 113.321 cv
140.226 108.459 li
140.226 107.76 140.292 107.154 140.424 106.64 cv
140.557 106.126 140.77 105.681 141.064 105.305 cv
141.358 104.929 141.751 104.647 142.243 104.459 cv
142.737 104.271 143.329 104.177 144.024 104.177 cv
145.373 104.177 146.344 104.539 146.935 105.265 cv
147.526 105.99 147.821 107.055 147.821 108.459 cv
147.821 113.321 li
147.821 114.009 147.753 114.615 147.618 115.136 cv
147.483 115.657 147.269 116.111 146.975 116.494 cv
146.681 116.878 146.287 117.168 145.795 117.365 cv
145.302 117.56 144.711 117.658 144.024 117.658 cv
cp
f
149.576 117.499 mo
149.576 104.327 li
154.987 104.327 li
154.987 105.989 li
151.975 105.989 li
151.975 109.818 li
154.382 109.818 li
154.382 111.509 li
151.975 111.509 li
151.975 117.499 li
149.576 117.499 li
cp
f
162.619 109.928 mo
163.391 109.928 li
164.069 109.928 164.527 109.795 164.765 109.528 cv
165.003 109.26 165.122 108.769 165.122 108.054 cv
165.122 107.646 165.107 107.33 165.074 107.109 cv
165.043 106.886 164.969 106.683 164.852 106.5 cv
164.736 106.318 164.562 106.192 164.331 106.123 cv
164.102 106.054 163.79 106.02 163.399 106.02 cv
162.619 106.02 li
162.619 109.928 li
cp
160.221 117.499 mo
160.221 104.327 li
164.01 104.327 li
166.255 104.327 167.378 105.575 167.378 108.07 cv
167.378 109.293 167.072 110.19 166.457 110.759 cv
165.842 111.328 164.977 111.613 163.859 111.613 cv
162.619 111.613 li
162.619 117.499 li
160.221 117.499 li
cp
f
171.056 109.952 mo
171.636 109.952 li
172.346 109.952 172.851 109.801 173.15 109.499 cv
173.448 109.198 173.599 108.681 173.599 107.95 cv
173.599 107.246 173.469 106.741 173.209 106.437 cv
172.949 106.132 172.473 105.98 171.78 105.98 cv
171.056 105.98 li
171.056 109.952 li
cp
168.657 117.499 mo
168.657 104.327 li
171.676 104.327 li
172.369 104.327 172.965 104.385 173.463 104.498 cv
173.961 104.613 174.394 104.803 174.762 105.071 cv
175.13 105.338 175.406 105.7 175.588 106.159 cv
175.771 106.617 175.863 107.177 175.863 107.839 cv
175.863 108.665 175.74 109.341 175.493 109.865 cv
175.247 110.389 174.84 110.771 174.274 111.009 cv
176.101 117.499 li
173.694 117.499 li
172.121 111.486 li
171.056 111.486 li
171.056 117.499 li
168.657 117.499 li
cp
f
180.664 115.776 mo
180.831 115.844 181.031 115.878 181.265 115.878 cv
181.497 115.878 181.696 115.844 181.861 115.776 cv
182.025 115.706 182.156 115.616 182.253 115.505 cv
182.352 115.394 182.428 115.248 182.484 115.069 cv
182.539 114.888 182.576 114.708 182.595 114.529 cv
182.614 114.348 182.623 114.134 182.623 113.885 cv
182.623 107.903 li
182.623 107.585 182.607 107.321 182.575 107.109 cv
182.543 106.897 182.481 106.697 182.389 106.508 cv
182.296 106.321 182.156 106.18 181.972 106.087 cv
181.786 105.994 181.55 105.948 181.265 105.948 cv
180.979 105.948 180.741 105.994 180.553 106.087 cv
180.365 106.18 180.227 106.321 180.136 106.508 cv
180.046 106.697 179.986 106.897 179.953 107.109 cv
179.922 107.321 179.906 107.585 179.906 107.903 cv
179.906 113.885 li
179.906 114.134 179.915 114.348 179.934 114.529 cv
179.952 114.708 179.99 114.888 180.045 115.069 cv
180.101 115.248 180.176 115.394 180.272 115.505 cv
180.366 115.616 180.498 115.706 180.664 115.776 cv
cp
181.265 117.658 mo
179.908 117.658 178.937 117.29 178.349 116.554 cv
177.761 115.818 177.467 114.74 177.467 113.321 cv
177.467 108.459 li
177.467 107.76 177.533 107.154 177.665 106.64 cv
177.798 106.126 178.011 105.681 178.305 105.305 cv
178.599 104.929 178.992 104.647 179.485 104.459 cv
179.978 104.271 180.571 104.177 181.265 104.177 cv
182.615 104.177 183.585 104.539 184.176 105.265 cv
184.767 105.99 185.062 107.055 185.062 108.459 cv
185.062 113.321 li
185.062 114.009 184.994 114.615 184.86 115.136 cv
184.724 115.657 184.51 116.111 184.216 116.494 cv
183.922 116.878 183.529 117.168 183.036 117.365 cv
182.543 117.56 181.952 117.658 181.265 117.658 cv
cp
f
190.115 117.674 mo
188.869 117.674 187.973 117.284 187.425 116.506 cv
186.877 115.728 186.603 114.594 186.603 113.106 cv
186.603 108.817 li
186.603 108.059 186.662 107.406 186.781 106.858 cv
186.901 106.31 187.101 105.829 187.381 105.416 cv
187.662 105.003 188.049 104.694 188.541 104.487 cv
189.033 104.281 189.638 104.177 190.353 104.177 cv
191.656 104.177 192.59 104.496 193.156 105.134 cv
193.724 105.773 194.007 106.74 194.007 108.037 cv
194.007 108.681 li
191.711 108.681 li
191.711 107.998 li
191.711 107.707 191.704 107.468 191.691 107.283 cv
191.678 107.098 191.646 106.911 191.596 106.723 cv
191.545 106.535 191.473 106.391 191.377 106.29 cv
191.282 106.19 191.153 106.108 190.989 106.044 cv
190.823 105.98 190.622 105.948 190.384 105.948 cv
190.204 105.948 190.044 105.971 189.904 106.016 cv
189.763 106.061 189.646 106.116 189.55 106.183 cv
189.454 106.249 189.374 106.343 189.308 106.465 cv
189.241 106.587 189.192 106.704 189.156 106.819 cv
189.122 106.932 189.096 107.079 189.077 107.259 cv
189.059 107.44 189.047 107.598 189.041 107.736 cv
189.036 107.873 189.033 108.051 189.033 108.268 cv
189.033 113.583 li
189.033 114.377 189.132 114.958 189.327 115.326 cv
189.524 115.695 189.897 115.878 190.448 115.878 cv
190.734 115.878 190.974 115.824 191.167 115.716 cv
191.36 115.608 191.511 115.443 191.619 115.223 cv
191.728 115.003 191.805 114.752 191.85 114.469 cv
191.895 114.186 191.917 113.842 191.917 113.44 cv
191.917 112.36 li
190.495 112.36 li
190.495 110.81 li
194.078 110.81 li
194.078 117.499 li
192.522 117.499 li
192.347 116.164 li
191.949 117.171 191.205 117.674 190.115 117.674 cv
cp
f
198.288 109.952 mo
198.868 109.952 li
199.578 109.952 200.083 109.801 200.382 109.499 cv
200.681 109.198 200.831 108.681 200.831 107.95 cv
200.831 107.246 200.701 106.741 200.442 106.437 cv
200.182 106.132 199.705 105.98 199.012 105.98 cv
198.288 105.98 li
198.288 109.952 li
cp
195.89 117.499 mo
195.89 104.327 li
198.908 104.327 li
199.602 104.327 200.198 104.385 200.696 104.498 cv
201.194 104.613 201.626 104.803 201.994 105.071 cv
202.363 105.338 202.638 105.7 202.821 106.159 cv
203.003 106.617 203.095 107.177 203.095 107.839 cv
203.095 108.665 202.972 109.341 202.726 109.865 cv
202.48 110.389 202.073 110.771 201.506 111.009 cv
203.333 117.499 li
200.926 117.499 li
199.354 111.486 li
198.288 111.486 li
198.288 117.499 li
195.89 117.499 li
cp
f
207.289 112.876 mo
209.053 112.876 li
208.171 107.466 li
207.289 112.876 li
cp
204.231 117.499 mo
206.908 104.327 li
209.41 104.327 li
212.079 117.499 li
209.847 117.499 li
209.315 114.441 li
207.035 114.441 li
206.495 117.499 li
204.231 117.499 li
cp
f
213.351 117.499 mo
213.566 104.327 li
216.029 104.327 li
217.935 113.583 li
219.897 104.327 li
222.304 104.327 li
222.527 117.499 li
220.715 117.499 li
220.557 108.427 li
218.657 117.499 li
217.252 117.499 li
215.329 108.395 li
215.186 117.499 li
213.351 117.499 li
cp
f
224.448 117.499 mo
224.663 104.327 li
227.126 104.327 li
229.032 113.583 li
230.994 104.327 li
233.402 104.327 li
233.624 117.499 li
231.813 117.499 li
231.655 108.427 li
229.755 117.499 li
228.35 117.499 li
226.427 108.395 li
226.283 117.499 li
224.448 117.499 li
cp
f
235.642 117.499 mo
235.642 104.327 li
238.009 104.327 li
238.009 117.499 li
235.642 117.499 li
cp
f
240.035 117.499 mo
240.035 104.327 li
241.688 104.327 li
244.913 111.787 li
244.913 104.327 li
246.899 104.327 li
246.899 117.499 li
245.326 117.499 li
242.069 109.658 li
242.069 117.499 li
240.035 117.499 li
cp
f
252.166 117.674 mo
250.921 117.674 250.025 117.284 249.477 116.506 cv
248.929 115.728 248.655 114.594 248.655 113.106 cv
248.655 108.817 li
248.655 108.059 248.714 107.406 248.833 106.858 cv
248.952 106.31 249.153 105.829 249.433 105.416 cv
249.714 105.003 250.101 104.694 250.593 104.487 cv
251.085 104.281 251.69 104.177 252.405 104.177 cv
253.707 104.177 254.642 104.496 255.208 105.134 cv
255.776 105.773 256.059 106.74 256.059 108.037 cv
256.059 108.681 li
253.763 108.681 li
253.763 107.998 li
253.763 107.707 253.756 107.468 253.742 107.283 cv
253.73 107.098 253.698 106.911 253.648 106.723 cv
253.597 106.535 253.525 106.391 253.429 106.29 cv
253.334 106.19 253.204 106.108 253.04 106.044 cv
252.875 105.98 252.674 105.948 252.436 105.948 cv
252.256 105.948 252.096 105.971 251.955 106.016 cv
251.815 106.061 251.698 106.116 251.602 106.183 cv
251.506 106.249 251.426 106.343 251.36 106.465 cv
251.293 106.587 251.243 106.704 251.208 106.819 cv
251.174 106.932 251.148 107.079 251.129 107.259 cv
251.111 107.44 251.099 107.598 251.093 107.736 cv
251.088 107.873 251.085 108.051 251.085 108.268 cv
251.085 113.583 li
251.085 114.377 251.184 114.958 251.379 115.326 cv
251.575 115.695 251.948 115.878 252.499 115.878 cv
252.785 115.878 253.026 115.824 253.219 115.716 cv
253.411 115.608 253.563 115.443 253.671 115.223 cv
253.78 115.003 253.857 114.752 253.902 114.469 cv
253.947 114.186 253.969 113.842 253.969 113.44 cv
253.969 112.36 li
252.547 112.36 li
252.547 110.81 li
256.13 110.81 li
256.13 117.499 li
254.573 117.499 li
254.399 116.164 li
254.001 117.171 253.257 117.674 252.166 117.674 cv
cp
f
69.1906 138.775 mo
65.7893 138.775 li
65.7893 129.807 li
66.6379 129.807 li
66.6379 138.142 li
69.1906 138.142 li
69.1906 138.775 li
.472602 .264286 .0650339 0 cmyk
f
71.4513 138.877 mo
71.1233 138.877 70.848 138.824 70.6233 138.72 cv
70.4007 138.615 70.2249 138.457 70.097 138.244 cv
69.969 138.031 69.8772 137.781 69.8234 137.495 cv
69.7698 137.208 69.7425 136.864 69.7425 136.459 cv
69.7425 134.686 li
69.7425 133.871 69.8683 133.265 70.1213 132.868 cv
70.3733 132.472 70.8166 132.274 71.4513 132.274 cv
72.0902 132.274 72.5334 132.471 72.7854 132.865 cv
73.0354 133.261 73.1604 133.867 73.1604 134.686 cv
73.1604 136.459 li
73.1604 136.864 73.133 137.208 73.0794 137.495 cv
73.0256 137.781 72.9339 138.031 72.8069 138.244 cv
72.6779 138.457 72.5022 138.615 72.2796 138.72 cv
72.0549 138.824 71.7795 138.877 71.4513 138.877 cv
71.4513 132.879 mo
71.3147 132.879 71.1955 132.898 71.094 132.933 cv
70.9934 132.969 70.9105 133.028 70.846 133.109 cv
70.7814 133.191 70.7287 133.277 70.6888 133.368 cv
70.6487 133.46 70.6194 133.58 70.5998 133.729 cv
70.5803 133.876 70.5666 134.016 70.5618 134.148 cv
70.5569 134.279 70.553 134.445 70.553 134.643 cv
70.553 136.503 li
70.553 136.701 70.5569 136.866 70.5618 136.997 cv
70.5666 137.129 70.5803 137.269 70.5998 137.417 cv
70.6194 137.565 70.6487 137.685 70.6888 137.777 cv
70.7287 137.868 70.7814 137.955 70.846 138.036 cv
70.9105 138.117 70.9934 138.176 71.094 138.212 cv
71.1955 138.248 71.3147 138.266 71.4513 138.266 cv
71.6136 138.266 71.7502 138.237 71.8626 138.177 cv
71.9748 138.117 72.0618 138.042 72.1253 137.952 cv
72.1878 137.863 72.2355 137.735 72.2678 137.569 cv
72.301 137.403 72.3215 137.243 72.3303 137.092 cv
72.339 136.941 72.344 136.744 72.344 136.503 cv
72.344 134.643 li
72.344 134.401 72.339 134.204 72.3303 134.053 cv
72.3215 133.902 72.301 133.742 72.2678 133.577 cv
72.2355 133.411 72.1878 133.283 72.1253 133.193 cv
72.0618 133.103 71.9748 133.028 71.8626 132.968 cv
71.7502 132.909 71.6136 132.879 71.4513 132.879 cv
f
75.1506 138.775 mo
74.3401 138.775 li
74.3401 132.371 li
75.1506 132.371 li
75.1506 133.252 li
75.346 132.928 75.5735 132.688 75.8343 132.534 cv
76.0959 132.378 76.3596 132.301 76.6272 132.301 cv
76.7678 132.306 li
76.7678 133.182 li
76.6526 133.135 76.5227 133.111 76.3782 133.111 cv
75.8597 133.111 75.4495 133.361 75.1506 133.859 cv
75.1506 138.775 li
f
79.1858 138.877 mo
78.5725 138.877 78.1311 138.688 77.8605 138.309 cv
77.59 137.931 77.4553 137.283 77.4553 136.367 cv
77.4553 134.75 li
77.4553 134.127 77.5188 133.632 77.6468 133.266 cv
77.7746 132.9 77.9622 132.643 78.2092 132.495 cv
78.4562 132.348 78.7834 132.274 79.1916 132.274 cv
79.4611 132.274 79.6917 132.309 79.883 132.379 cv
80.0744 132.449 80.2327 132.549 80.3596 132.679 cv
80.4846 132.809 80.5852 132.985 80.6594 133.206 cv
80.7327 133.428 80.7844 133.673 80.8128 133.942 cv
80.8421 134.21 80.8567 134.534 80.8567 134.912 cv
80.8518 135.491 li
78.2659 135.491 li
78.2659 136.448 li
78.2659 137.112 78.3304 137.581 78.4582 137.855 cv
78.5862 138.129 78.8263 138.266 79.1799 138.266 cv
79.4611 138.266 79.678 138.177 79.8294 137.998 cv
79.9807 137.82 80.0568 137.496 80.0568 137.028 cv
80.0568 136.584 li
80.8518 136.584 li
80.8518 136.941 li
80.8518 137.561 80.721 138.039 80.4622 138.374 cv
80.2024 138.709 79.7765 138.877 79.1858 138.877 cv
79.1858 132.879 mo
78.843 132.879 78.6037 132.998 78.469 133.237 cv
78.3343 133.474 78.2659 133.927 78.2659 134.594 cv
78.2659 135.027 li
80.0568 135.027 li
80.0568 134.496 li
80.0568 134.273 80.051 134.087 80.0403 133.94 cv
80.0295 133.791 80.006 133.645 79.9728 133.498 cv
79.9377 133.353 79.8908 133.239 79.8294 133.156 cv
79.7678 133.072 79.6839 133.005 79.5745 132.955 cv
79.467 132.905 79.3372 132.879 79.1858 132.879 cv
f
87.8928 138.775 mo
87.1253 138.775 li
87.1253 133.744 li
87.1253 133.395 87.0706 133.152 86.9632 133.015 cv
86.8547 132.877 86.6994 132.809 86.4983 132.809 cv
86.09 132.817 85.6878 133.038 85.2913 133.474 cv
85.2991 133.582 85.303 133.665 85.303 133.723 cv
85.303 138.775 li
84.5452 138.775 li
84.5452 133.744 li
84.5452 133.395 84.4895 133.152 84.3771 133.015 cv
84.2658 132.877 84.1096 132.809 83.9065 132.809 cv
83.5002 132.817 83.1017 133.038 82.7112 133.474 cv
82.7112 138.775 li
81.9495 138.775 li
81.9495 132.371 li
82.7112 132.371 li
82.7112 133.02 li
83.1408 132.512 83.6438 132.257 84.2209 132.257 cv
84.7541 132.257 85.0901 132.538 85.2268 133.101 cv
85.6741 132.538 86.2004 132.257 86.8059 132.257 cv
87.1233 132.257 87.3841 132.371 87.5882 132.601 cv
87.7913 132.829 87.8928 133.203 87.8928 133.723 cv
87.8928 138.775 li
f
92.2463 138.775 mo
91.4358 138.775 li
91.4358 132.371 li
92.2463 132.371 li
92.2463 138.775 li
92.2522 131.489 mo
91.4358 131.489 li
91.4358 130.386 li
92.2522 130.386 li
92.2522 131.489 li
f
94.4211 140.884 mo
93.6096 140.884 li
93.6096 132.371 li
94.4211 132.371 li
94.4211 132.906 li
94.7639 132.485 95.173 132.274 95.6487 132.274 cv
95.8869 132.274 96.095 132.322 96.2737 132.419 cv
96.4514 132.517 96.592 132.643 96.6955 132.798 cv
96.7981 132.953 96.8811 133.146 96.9436 133.377 cv
97.007 133.608 97.0491 133.836 97.0686 134.061 cv
97.0881 134.286 97.0979 134.541 97.0979 134.826 cv
97.0979 136.178 li
97.0979 136.518 97.0842 136.82 97.0549 137.087 cv
97.0256 137.354 96.9758 137.602 96.9035 137.83 cv
96.8323 138.06 96.7365 138.249 96.6193 138.399 cv
96.5022 138.548 96.3557 138.665 96.1789 138.75 cv
96.0022 138.835 95.7971 138.877 95.5628 138.877 cv
95.1476 138.877 94.7678 138.673 94.4211 138.266 cv
94.4211 140.884 li
95.4162 132.911 mo
95.0882 132.911 94.7561 133.075 94.4211 133.403 cv
94.4211 137.769 li
94.717 138.078 95.0539 138.234 95.4329 138.234 cv
95.5765 138.234 95.6995 138.203 95.801 138.145 cv
95.9006 138.085 95.9826 138.004 96.0471 137.901 cv
96.1095 137.798 96.1585 137.658 96.1956 137.482 cv
96.2308 137.305 96.2561 137.116 96.2679 136.916 cv
96.2815 136.716 96.2874 136.474 96.2874 136.189 cv
96.2874 134.826 li
96.2874 134.141 96.2288 133.651 96.1134 133.355 cv
95.9982 133.06 95.7659 132.911 95.4162 132.911 cv
f
99.6936 138.877 mo
99.1857 138.877 98.7796 138.713 98.4748 138.385 cv
98.1702 138.057 97.9964 137.614 97.9533 137.055 cv
98.634 136.849 li
98.678 137.336 98.7893 137.694 98.969 137.922 cv
99.1497 138.152 99.4026 138.266 99.7268 138.266 cv
100.008 138.266 100.23 138.183 100.392 138.017 cv
100.547 137.859 100.625 137.646 100.625 137.379 cv
100.625 137.341 li
100.614 136.916 100.354 136.49 99.846 136.065 cv
98.9748 135.324 li
98.6683 135.068 98.4455 134.818 98.3049 134.573 cv
98.1672 134.334 98.0988 134.057 98.0988 133.74 cv
98.0988 133.271 98.2394 132.908 98.5208 132.653 cv
98.7952 132.4 99.1642 132.274 99.6291 132.274 cv
100.102 132.274 100.465 132.425 100.719 132.728 cv
100.973 133.031 101.116 133.44 101.144 133.955 cv
100.571 134.145 li
100.545 133.716 100.457 133.398 100.309 133.191 cv
100.158 132.983 99.9436 132.879 99.6623 132.879 cv
99.4094 132.879 99.2072 132.949 99.0559 133.09 cv
98.9084 133.227 98.8342 133.411 98.8342 133.642 cv
98.8342 133.851 98.8722 134.03 98.9475 134.18 cv
99.0237 134.329 99.1623 134.491 99.3645 134.664 cv
100.268 135.475 li
100.43 135.616 100.563 135.739 100.665 135.846 cv
100.768 135.952 100.877 136.083 100.992 136.241 cv
101.108 136.398 101.194 136.567 101.249 136.749 cv
101.305 136.931 101.334 137.127 101.338 137.336 cv
101.338 137.826 101.191 138.205 100.895 138.474 cv
100.6 138.742 100.199 138.877 99.6936 138.877 cv
f
103.188 138.871 mo
102.867 138.871 102.622 138.753 102.453 138.515 cv
102.283 138.277 102.199 137.94 102.199 137.503 cv
102.199 132.371 li
103.016 132.371 li
103.016 137.336 li
103.016 137.66 103.064 137.891 103.161 138.028 cv
103.258 138.165 103.412 138.234 103.621 138.234 cv
103.985 138.234 104.364 138.025 104.756 137.606 cv
104.756 132.371 li
105.569 132.371 li
105.569 138.775 li
104.756 138.775 li
104.756 138.066 li
104.28 138.603 103.758 138.871 103.188 138.871 cv
f
112.75 138.775 mo
111.983 138.775 li
111.983 133.744 li
111.983 133.395 111.928 133.152 111.821 133.015 cv
111.711 132.877 111.557 132.809 111.355 132.809 cv
110.948 132.817 110.545 133.038 110.149 133.474 cv
110.156 133.582 110.159 133.665 110.159 133.723 cv
110.159 138.775 li
109.403 138.775 li
109.403 133.744 li
109.403 133.395 109.346 133.152 109.235 133.015 cv
109.123 132.877 108.966 132.809 108.764 132.809 cv
108.357 132.817 107.958 133.038 107.569 133.474 cv
107.569 138.775 li
106.807 138.775 li
106.807 132.371 li
107.569 132.371 li
107.569 133.02 li
107.998 132.512 108.5 132.257 109.078 132.257 cv
109.612 132.257 109.946 132.538 110.084 133.101 cv
110.532 132.538 111.057 132.257 111.662 132.257 cv
111.981 132.257 112.241 132.371 112.445 132.601 cv
112.649 132.829 112.75 133.203 112.75 133.723 cv
112.75 138.775 li
f
117.629 138.877 mo
117.076 138.877 116.682 138.67 116.442 138.255 cv
116.201 137.841 116.082 137.152 116.082 136.189 cv
116.082 135.005 li
116.082 134.652 116.094 134.341 116.119 134.074 cv
116.145 133.808 116.192 133.557 116.26 133.323 cv
116.328 133.088 116.418 132.898 116.531 132.749 cv
116.643 132.602 116.787 132.486 116.963 132.401 cv
117.14 132.316 117.35 132.274 117.59 132.274 cv
118.012 132.278 118.389 132.463 118.721 132.83 cv
118.721 129.807 li
119.532 129.807 li
119.532 138.775 li
118.721 138.775 li
118.721 138.321 li
118.397 138.688 118.033 138.873 117.629 138.877 cv
117.77 132.911 mo
117.426 132.911 117.196 133.055 117.074 133.342 cv
116.953 133.628 116.893 134.096 116.893 134.745 cv
116.893 136.254 li
116.893 136.953 116.954 137.458 117.076 137.769 cv
117.2 138.078 117.438 138.234 117.791 138.234 cv
118.105 138.234 118.414 138.093 118.721 137.812 cv
118.721 133.366 li
118.397 133.063 118.079 132.911 117.77 132.911 cv
f
122.362 138.877 mo
122.034 138.877 121.757 138.824 121.533 138.72 cv
121.311 138.615 121.135 138.457 121.006 138.244 cv
120.878 138.031 120.787 137.781 120.733 137.495 cv
120.679 137.208 120.653 136.864 120.653 136.459 cv
120.653 134.686 li
120.653 133.871 120.778 133.265 121.03 132.868 cv
121.283 132.472 121.727 132.274 122.362 132.274 cv
122.999 132.274 123.444 132.471 123.695 132.865 cv
123.946 133.261 124.071 133.867 124.071 134.686 cv
124.071 136.459 li
124.071 136.864 124.043 137.208 123.989 137.495 cv
123.935 137.781 123.844 138.031 123.716 138.244 cv
123.588 138.457 123.412 138.615 123.189 138.72 cv
122.965 138.824 122.69 138.877 122.362 138.877 cv
122.362 132.879 mo
122.224 132.879 122.106 132.898 122.004 132.933 cv
121.903 132.969 121.821 133.028 121.756 133.109 cv
121.691 133.191 121.639 133.277 121.598 133.368 cv
121.559 133.46 121.53 133.58 121.51 133.729 cv
121.489 133.876 121.477 134.016 121.471 134.148 cv
121.466 134.279 121.463 134.445 121.463 134.643 cv
121.463 136.503 li
121.463 136.701 121.466 136.866 121.471 136.997 cv
121.477 137.129 121.489 137.269 121.51 137.417 cv
121.53 137.565 121.559 137.685 121.598 137.777 cv
121.639 137.868 121.691 137.955 121.756 138.036 cv
121.821 138.117 121.903 138.176 122.004 138.212 cv
122.106 138.248 122.224 138.266 122.362 138.266 cv
122.524 138.266 122.66 138.237 122.772 138.177 cv
122.884 138.117 122.971 138.042 123.034 137.952 cv
123.098 137.863 123.145 137.735 123.178 137.569 cv
123.21 137.403 123.231 137.243 123.24 137.092 cv
123.248 136.941 123.254 136.744 123.254 136.503 cv
123.254 134.643 li
123.254 134.401 123.248 134.204 123.24 134.053 cv
123.231 133.902 123.21 133.742 123.178 133.577 cv
123.145 133.411 123.098 133.283 123.034 133.193 cv
122.971 133.103 122.884 133.028 122.772 132.968 cv
122.66 132.909 122.524 132.879 122.362 132.879 cv
f
126.115 138.775 mo
125.297 138.775 li
125.297 129.807 li
126.115 129.807 li
126.115 138.775 li
f
129.014 138.877 mo
128.686 138.877 128.409 138.824 128.186 138.72 cv
127.963 138.615 127.787 138.457 127.659 138.244 cv
127.531 138.031 127.44 137.781 127.385 137.495 cv
127.331 137.208 127.305 136.864 127.305 136.459 cv
127.305 134.686 li
127.305 133.871 127.43 133.265 127.683 132.868 cv
127.936 132.472 128.379 132.274 129.014 132.274 cv
129.652 132.274 130.096 132.471 130.347 132.865 cv
130.598 133.261 130.723 133.867 130.723 134.686 cv
130.723 136.459 li
130.723 136.864 130.696 137.208 130.641 137.495 cv
130.587 137.781 130.496 138.031 130.368 138.244 cv
130.24 138.457 130.065 138.615 129.841 138.72 cv
129.617 138.824 129.342 138.877 129.014 138.877 cv
129.014 132.879 mo
128.876 132.879 128.758 132.898 128.656 132.933 cv
128.555 132.969 128.473 133.028 128.408 133.109 cv
128.343 133.191 128.291 133.277 128.25 133.368 cv
128.211 133.46 128.182 133.58 128.162 133.729 cv
128.142 133.876 128.129 134.016 128.123 134.148 cv
128.118 134.279 128.115 134.445 128.115 134.643 cv
128.115 136.503 li
128.115 136.701 128.118 136.866 128.123 136.997 cv
128.129 137.129 128.142 137.269 128.162 137.417 cv
128.182 137.565 128.211 137.685 128.25 137.777 cv
128.291 137.868 128.343 137.955 128.408 138.036 cv
128.473 138.117 128.555 138.176 128.656 138.212 cv
128.758 138.248 128.876 138.266 129.014 138.266 cv
129.176 138.266 129.313 138.237 129.424 138.177 cv
129.536 138.117 129.623 138.042 129.687 137.952 cv
129.75 137.863 129.797 137.735 129.83 137.569 cv
129.863 137.403 129.883 137.243 129.893 137.092 cv
129.901 136.941 129.906 136.744 129.906 136.503 cv
129.906 134.643 li
129.906 134.401 129.901 134.204 129.893 134.053 cv
129.883 133.902 129.863 133.742 129.83 133.577 cv
129.797 133.411 129.75 133.283 129.687 133.193 cv
129.623 133.103 129.536 133.028 129.424 132.968 cv
129.313 132.909 129.176 132.879 129.014 132.879 cv
f
132.713 138.775 mo
131.902 138.775 li
131.902 132.371 li
132.713 132.371 li
132.713 133.252 li
132.908 132.928 133.135 132.688 133.397 132.534 cv
133.658 132.378 133.922 132.301 134.19 132.301 cv
134.33 132.306 li
134.33 133.182 li
134.215 133.135 134.084 133.111 133.94 133.111 cv
133.421 133.111 133.012 133.361 132.713 133.859 cv
132.713 138.775 li
f
138.862 138.877 mo
138.354 138.877 137.947 138.713 137.643 138.385 cv
137.338 138.057 137.164 137.614 137.121 137.055 cv
137.802 136.849 li
137.846 137.336 137.957 137.694 138.137 137.922 cv
138.318 138.152 138.57 138.266 138.895 138.266 cv
139.176 138.266 139.398 138.183 139.56 138.017 cv
139.715 137.859 139.793 137.646 139.793 137.379 cv
139.793 137.341 li
139.781 136.916 139.522 136.49 139.014 136.065 cv
138.143 135.324 li
137.836 135.068 137.614 134.818 137.473 134.573 cv
137.335 134.334 137.267 134.057 137.267 133.74 cv
137.267 133.271 137.407 132.908 137.689 132.653 cv
137.963 132.4 138.332 132.274 138.797 132.274 cv
139.27 132.274 139.633 132.425 139.887 132.728 cv
140.141 133.031 140.283 133.44 140.312 133.955 cv
139.738 134.145 li
139.713 133.716 139.625 133.398 139.477 133.191 cv
139.326 132.983 139.112 132.879 138.83 132.879 cv
138.577 132.879 138.375 132.949 138.224 133.09 cv
138.076 133.227 138.002 133.411 138.002 133.642 cv
138.002 133.851 138.04 134.03 138.116 134.18 cv
138.192 134.329 138.33 134.491 138.533 134.664 cv
139.436 135.475 li
139.598 135.616 139.731 135.739 139.833 135.846 cv
139.936 135.952 140.045 136.083 140.16 136.241 cv
140.276 136.398 140.362 136.567 140.417 136.749 cv
140.473 136.931 140.502 137.127 140.506 137.336 cv
140.506 137.826 140.359 138.205 140.063 138.474 cv
139.768 138.742 139.367 138.877 138.862 138.877 cv
f
142.319 138.775 mo
141.507 138.775 li
141.507 132.371 li
142.319 132.371 li
142.319 138.775 li
142.324 131.489 mo
141.507 131.489 li
141.507 130.386 li
142.324 130.386 li
142.324 131.489 li
f
145.196 138.856 mo
144.76 138.856 144.458 138.736 144.292 138.496 cv
144.127 138.256 144.041 137.906 144.038 137.444 cv
144.038 132.911 li
143.265 132.911 li
143.265 132.371 li
144.038 132.371 li
144.038 130.392 li
144.85 130.392 li
144.85 132.371 li
145.914 132.371 li
145.914 132.911 li
144.85 132.911 li
144.85 137.368 li
144.85 137.693 144.887 137.915 144.963 138.036 cv
145.039 138.157 145.192 138.217 145.422 138.217 cv
145.571 138.217 145.722 138.203 145.877 138.174 cv
145.877 138.785 li
145.635 138.832 145.408 138.856 145.196 138.856 cv
f
150.145 138.877 mo
149.77 138.877 149.461 138.739 149.219 138.463 cv
148.979 138.188 148.858 137.846 148.858 137.439 cv
148.858 137.226 148.875 137.035 148.911 136.868 cv
148.947 136.7 149.015 136.542 149.113 136.395 cv
149.213 136.247 149.321 136.116 149.439 136.002 cv
149.556 135.889 149.723 135.768 149.939 135.64 cv
150.156 135.512 150.371 135.394 150.588 135.286 cv
150.805 135.178 151.087 135.046 151.438 134.891 cv
151.438 134.432 li
151.438 133.844 151.381 133.439 151.27 133.217 cv
151.157 132.995 150.948 132.885 150.642 132.885 cv
150.051 132.885 149.755 133.25 149.755 133.983 cv
149.755 134.215 li
148.955 134.188 li
148.955 134.083 148.956 134.019 148.96 133.993 cv
148.985 133.391 149.142 132.954 149.43 132.682 cv
149.719 132.409 150.137 132.274 150.686 132.274 cv
151.251 132.274 151.654 132.442 151.891 132.777 cv
152.129 133.111 152.248 133.649 152.248 134.388 cv
152.248 137.503 li
152.248 138.019 152.268 138.443 152.308 138.775 cv
151.588 138.775 li
151.469 137.887 li
151.372 138.168 151.207 138.404 150.975 138.593 cv
150.742 138.782 150.465 138.877 150.145 138.877 cv
151.438 135.427 mo
151.334 135.481 li
151.157 135.574 151.022 135.647 150.928 135.698 cv
150.834 135.747 150.723 135.811 150.59 135.886 cv
150.459 135.962 150.361 136.026 150.296 136.075 cv
150.071 136.259 li
149.887 136.462 li
149.772 136.681 li
149.732 136.764 149.704 136.852 149.69 136.944 cv
149.676 137.035 149.668 137.138 149.668 137.249 cv
149.668 137.563 149.738 137.796 149.879 137.949 cv
150.02 138.103 150.197 138.18 150.409 138.18 cv
150.625 138.18 150.824 138.105 151.007 137.955 cv
151.19 137.806 151.332 137.628 151.438 137.422 cv
151.438 135.427 li
f
159.377 138.775 mo
158.609 138.775 li
158.609 133.744 li
158.609 133.395 158.555 133.152 158.447 133.015 cv
158.338 132.877 158.183 132.809 157.981 132.809 cv
157.574 132.817 157.172 133.038 156.776 133.474 cv
156.782 133.582 156.785 133.665 156.785 133.723 cv
156.785 138.775 li
156.029 138.775 li
156.029 133.744 li
156.029 133.395 155.973 133.152 155.862 133.015 cv
155.749 132.877 155.592 132.809 155.391 132.809 cv
154.983 132.817 154.584 133.038 154.196 133.474 cv
154.196 138.775 li
153.433 138.775 li
153.433 132.371 li
154.196 132.371 li
154.196 133.02 li
154.624 132.512 155.127 132.257 155.704 132.257 cv
156.239 132.257 156.573 132.538 156.71 133.101 cv
157.157 132.538 157.684 132.257 158.289 132.257 cv
158.607 132.257 158.867 132.371 159.071 132.601 cv
159.275 132.829 159.377 133.203 159.377 133.723 cv
159.377 138.775 li
f
162.178 138.877 mo
161.565 138.877 161.123 138.688 160.854 138.309 cv
160.582 137.931 160.448 137.283 160.448 136.367 cv
160.448 134.75 li
160.448 134.127 160.512 133.632 160.639 133.266 cv
160.768 132.9 160.955 132.643 161.201 132.495 cv
161.449 132.348 161.776 132.274 162.184 132.274 cv
162.453 132.274 162.685 132.309 162.875 132.379 cv
163.067 132.449 163.225 132.549 163.352 132.679 cv
163.478 132.809 163.578 132.985 163.653 133.206 cv
163.726 133.428 163.778 133.673 163.806 133.942 cv
163.834 134.21 163.85 134.534 163.85 134.912 cv
163.844 135.491 li
161.258 135.491 li
161.258 136.448 li
161.258 137.112 161.322 137.581 161.451 137.855 cv
161.578 138.129 161.82 138.266 162.172 138.266 cv
162.453 138.266 162.67 138.177 162.823 137.998 cv
162.973 137.82 163.049 137.496 163.049 137.028 cv
163.049 136.584 li
163.844 136.584 li
163.844 136.941 li
163.844 137.561 163.714 138.039 163.455 138.374 cv
163.196 138.709 162.77 138.877 162.178 138.877 cv
162.178 132.879 mo
161.836 132.879 161.597 132.998 161.461 133.237 cv
161.326 133.474 161.258 133.927 161.258 134.594 cv
161.258 135.027 li
163.049 135.027 li
163.049 134.496 li
163.049 134.273 163.043 134.087 163.033 133.94 cv
163.022 133.791 162.999 133.645 162.965 133.498 cv
162.931 133.353 162.883 133.239 162.823 133.156 cv
162.76 133.072 162.676 133.005 162.568 132.955 cv
162.459 132.905 162.33 132.879 162.178 132.879 cv
f
166.461 138.856 mo
166.026 138.856 165.725 138.736 165.559 138.496 cv
165.393 138.256 165.308 137.906 165.305 137.444 cv
165.305 132.911 li
164.531 132.911 li
164.531 132.371 li
165.305 132.371 li
165.305 130.392 li
166.115 130.392 li
166.115 132.371 li
167.181 132.371 li
167.181 132.911 li
166.115 132.911 li
166.115 137.368 li
166.115 137.693 166.154 137.915 166.229 138.036 cv
166.305 138.157 166.458 138.217 166.689 138.217 cv
166.836 138.217 166.988 138.203 167.143 138.174 cv
167.143 138.785 li
166.902 138.832 166.674 138.856 166.461 138.856 cv
f
168.139 140.067 mo
167.971 139.71 li
168.162 139.602 168.298 139.476 168.379 139.331 cv
168.46 139.187 168.5 139.001 168.5 138.775 cv
168.014 138.775 li
168.014 137.569 li
168.922 137.569 li
168.922 138.688 li
168.922 139.048 168.863 139.332 168.744 139.539 cv
168.625 139.747 168.423 139.923 168.139 140.067 cv
f
173.899 138.877 mo
173.606 138.877 173.356 138.834 173.147 138.747 cv
172.938 138.66 172.772 138.548 172.649 138.409 cv
172.526 138.271 172.43 138.087 172.36 137.861 cv
172.289 137.633 172.242 137.404 172.219 137.171 cv
172.196 136.939 172.184 136.663 172.184 136.346 cv
172.184 134.854 li
172.184 134.388 172.209 134.001 172.26 133.694 cv
172.31 133.385 172.399 133.121 172.528 132.901 cv
172.655 132.681 172.83 132.522 173.052 132.422 cv
173.274 132.324 173.554 132.274 173.893 132.274 cv
174.16 132.274 174.391 132.306 174.585 132.371 cv
174.78 132.436 174.938 132.525 175.059 132.639 cv
175.179 132.752 175.275 132.898 175.345 133.073 cv
175.415 133.25 175.464 133.437 175.49 133.634 cv
175.518 133.83 175.531 134.06 175.531 134.323 cv
175.531 134.626 li
174.78 134.626 li
174.78 134.323 li
174.78 133.776 174.715 133.398 174.585 133.191 cv
174.455 132.983 174.229 132.879 173.904 132.879 cv
173.535 132.879 173.293 133.01 173.174 133.272 cv
173.055 133.533 172.994 134.015 172.994 134.718 cv
172.994 136.514 li
172.994 137.17 173.059 137.626 173.188 137.882 cv
173.315 138.138 173.556 138.266 173.908 138.266 cv
174.061 138.266 174.189 138.244 174.293 138.201 cv
174.398 138.157 174.482 138.098 174.545 138.023 cv
174.608 137.947 174.657 137.842 174.694 137.709 cv
174.729 137.575 174.752 137.434 174.764 137.284 cv
174.775 137.135 174.78 136.947 174.78 136.719 cv
174.78 136.367 li
175.531 136.367 li
175.531 136.681 li
175.531 136.962 175.52 137.206 175.496 137.411 cv
175.473 137.617 175.426 137.817 175.356 138.009 cv
175.285 138.202 175.192 138.359 175.075 138.48 cv
174.957 138.601 174.799 138.697 174.602 138.769 cv
174.403 138.841 174.168 138.877 173.899 138.877 cv
f
178.198 138.877 mo
177.869 138.877 177.594 138.824 177.37 138.72 cv
177.147 138.615 176.971 138.457 176.844 138.244 cv
176.715 138.031 176.624 137.781 176.571 137.495 cv
176.516 137.208 176.489 136.864 176.489 136.459 cv
176.489 134.686 li
176.489 133.871 176.615 133.265 176.867 132.868 cv
177.119 132.472 177.563 132.274 178.198 132.274 cv
178.836 132.274 179.281 132.471 179.532 132.865 cv
179.781 133.261 179.906 133.867 179.906 134.686 cv
179.906 136.459 li
179.906 136.864 179.88 137.208 179.826 137.495 cv
179.772 137.781 179.681 138.031 179.553 138.244 cv
179.425 138.457 179.249 138.615 179.026 138.72 cv
178.802 138.824 178.526 138.877 178.198 138.877 cv
178.198 132.879 mo
178.061 132.879 177.942 132.898 177.841 132.933 cv
177.74 132.969 177.657 133.028 177.592 133.109 cv
177.528 133.191 177.475 133.277 177.436 133.368 cv
177.396 133.46 177.365 133.58 177.346 133.729 cv
177.326 133.876 177.314 134.016 177.309 134.148 cv
177.303 134.279 177.3 134.445 177.3 134.643 cv
177.3 136.503 li
177.3 136.701 177.303 136.866 177.309 136.997 cv
177.314 137.129 177.326 137.269 177.346 137.417 cv
177.365 137.565 177.396 137.685 177.436 137.777 cv
177.475 137.868 177.528 137.955 177.592 138.036 cv
177.657 138.117 177.74 138.176 177.841 138.212 cv
177.942 138.248 178.061 138.266 178.198 138.266 cv
178.36 138.266 178.497 138.237 178.61 138.177 cv
178.721 138.117 178.809 138.042 178.871 137.952 cv
178.934 137.863 178.983 137.735 179.015 137.569 cv
179.047 137.403 179.069 137.243 179.076 137.092 cv
179.086 136.941 179.09 136.744 179.09 136.503 cv
179.09 134.643 li
179.09 134.401 179.086 134.204 179.076 134.053 cv
179.069 133.902 179.047 133.742 179.015 133.577 cv
178.983 133.411 178.934 133.283 178.871 133.193 cv
178.809 133.103 178.721 133.028 178.61 132.968 cv
178.497 132.909 178.36 132.879 178.198 132.879 cv
f
184.358 138.775 mo
183.547 138.775 li
183.547 133.81 li
183.547 133.485 183.497 133.254 183.399 133.117 cv
183.299 132.981 183.145 132.911 182.936 132.911 cv
182.586 132.911 182.218 133.109 181.832 133.501 cv
181.832 138.775 li
181.022 138.775 li
181.022 132.371 li
181.832 132.371 li
181.832 133.036 li
182.305 132.528 182.819 132.274 183.373 132.274 cv
183.692 132.274 183.934 132.392 184.104 132.628 cv
184.274 132.864 184.358 133.2 184.358 133.636 cv
184.358 138.775 li
f
187.019 138.877 mo
186.51 138.877 186.104 138.713 185.799 138.385 cv
185.494 138.057 185.321 137.614 185.278 137.055 cv
185.959 136.849 li
186.002 137.336 186.113 137.694 186.294 137.922 cv
186.475 138.152 186.727 138.266 187.051 138.266 cv
187.332 138.266 187.555 138.183 187.717 138.017 cv
187.871 137.859 187.949 137.646 187.949 137.379 cv
187.949 137.341 li
187.938 136.916 187.679 136.49 187.17 136.065 cv
186.299 135.324 li
185.993 135.068 185.77 134.818 185.629 134.573 cv
185.492 134.334 185.424 134.057 185.424 133.74 cv
185.424 133.271 185.565 132.908 185.846 132.653 cv
186.119 132.4 186.489 132.274 186.953 132.274 cv
187.426 132.274 187.789 132.425 188.043 132.728 cv
188.298 133.031 188.44 133.44 188.469 133.955 cv
187.895 134.145 li
187.869 133.716 187.783 133.398 187.633 133.191 cv
187.483 132.983 187.268 132.879 186.987 132.879 cv
186.735 132.879 186.533 132.949 186.381 133.09 cv
186.233 133.227 186.158 133.411 186.158 133.642 cv
186.158 133.851 186.198 134.03 186.273 134.18 cv
186.348 134.329 186.487 134.491 186.69 134.664 cv
187.592 135.475 li
187.754 135.616 187.887 135.739 187.99 135.846 cv
188.092 135.952 188.201 136.083 188.317 136.241 cv
188.432 136.398 188.518 136.567 188.574 136.749 cv
188.629 136.931 188.659 137.127 188.663 137.336 cv
188.663 137.826 188.516 138.205 188.219 138.474 cv
187.924 138.742 187.524 138.877 187.019 138.877 cv
f
191.184 138.877 mo
190.571 138.877 190.129 138.688 189.859 138.309 cv
189.588 137.931 189.453 137.283 189.453 136.367 cv
189.453 134.75 li
189.453 134.127 189.517 133.632 189.645 133.266 cv
189.773 132.9 189.96 132.643 190.207 132.495 cv
190.454 132.348 190.781 132.274 191.19 132.274 cv
191.459 132.274 191.69 132.309 191.881 132.379 cv
192.072 132.449 192.231 132.549 192.358 132.679 cv
192.483 132.809 192.583 132.985 192.658 133.206 cv
192.731 133.428 192.783 133.673 192.811 133.942 cv
192.84 134.21 192.855 134.534 192.855 134.912 cv
192.85 135.491 li
190.264 135.491 li
190.264 136.448 li
190.264 137.112 190.328 137.581 190.456 137.855 cv
190.584 138.129 190.824 138.266 191.178 138.266 cv
191.459 138.266 191.676 138.177 191.827 137.998 cv
191.979 137.82 192.055 137.496 192.055 137.028 cv
192.055 136.584 li
192.85 136.584 li
192.85 136.941 li
192.85 137.561 192.719 138.039 192.46 138.374 cv
192.2 138.709 191.775 138.877 191.184 138.877 cv
191.184 132.879 mo
190.841 132.879 190.602 132.998 190.467 133.237 cv
190.332 133.474 190.264 133.927 190.264 134.594 cv
190.264 135.027 li
192.055 135.027 li
192.055 134.496 li
192.055 134.273 192.049 134.087 192.038 133.94 cv
192.028 133.791 192.004 133.645 191.971 133.498 cv
191.936 133.353 191.889 133.239 191.827 133.156 cv
191.766 133.072 191.682 133.005 191.572 132.955 cv
191.465 132.905 191.335 132.879 191.184 132.879 cv
f
195.543 138.877 mo
195.25 138.877 195 138.834 194.791 138.747 cv
194.582 138.66 194.416 138.548 194.293 138.409 cv
194.17 138.271 194.074 138.087 194.004 137.861 cv
193.934 137.633 193.887 137.404 193.864 137.171 cv
193.84 136.939 193.828 136.663 193.828 136.346 cv
193.828 134.854 li
193.828 134.388 193.854 134.001 193.905 133.694 cv
193.954 133.385 194.043 133.121 194.172 132.901 cv
194.299 132.681 194.475 132.522 194.697 132.422 cv
194.918 132.324 195.199 132.274 195.537 132.274 cv
195.805 132.274 196.035 132.306 196.23 132.371 cv
196.424 132.436 196.582 132.525 196.703 132.639 cv
196.823 132.752 196.919 132.898 196.99 133.073 cv
197.06 133.25 197.109 133.437 197.135 133.634 cv
197.162 133.83 197.176 134.06 197.176 134.323 cv
197.176 134.626 li
196.424 134.626 li
196.424 134.323 li
196.424 133.776 196.36 133.398 196.23 133.191 cv
196.1 132.983 195.873 132.879 195.548 132.879 cv
195.18 132.879 194.938 133.01 194.819 133.272 cv
194.699 133.533 194.639 134.015 194.639 134.718 cv
194.639 136.514 li
194.639 137.17 194.703 137.626 194.832 137.882 cv
194.959 138.138 195.2 138.266 195.553 138.266 cv
195.705 138.266 195.833 138.244 195.938 138.201 cv
196.042 138.157 196.126 138.098 196.19 138.023 cv
196.252 137.947 196.302 137.842 196.338 137.709 cv
196.373 137.575 196.397 137.434 196.408 137.284 cv
196.419 137.135 196.424 136.947 196.424 136.719 cv
196.424 136.367 li
197.176 136.367 li
197.176 136.681 li
197.176 136.962 197.164 137.206 197.141 137.411 cv
197.117 137.617 197.071 137.817 197 138.009 cv
196.93 138.202 196.836 138.359 196.719 138.48 cv
196.602 138.601 196.444 138.697 196.246 138.769 cv
196.047 138.841 195.813 138.877 195.543 138.877 cv
f
199.772 138.856 mo
199.336 138.856 199.035 138.736 198.869 138.496 cv
198.703 138.256 198.618 137.906 198.616 137.444 cv
198.616 132.911 li
197.842 132.911 li
197.842 132.371 li
198.616 132.371 li
198.616 130.392 li
199.426 130.392 li
199.426 132.371 li
200.491 132.371 li
200.491 132.911 li
199.426 132.911 li
199.426 137.368 li
199.426 137.693 199.464 137.915 199.539 138.036 cv
199.615 138.157 199.769 138.217 199.999 138.217 cv
200.147 138.217 200.299 138.203 200.453 138.174 cv
200.453 138.785 li
200.212 138.832 199.985 138.856 199.772 138.856 cv
f
202.963 138.877 mo
202.35 138.877 201.908 138.688 201.639 138.309 cv
201.367 137.931 201.233 137.283 201.233 136.367 cv
201.233 134.75 li
201.233 134.127 201.297 133.632 201.424 133.266 cv
201.553 132.9 201.741 132.643 201.987 132.495 cv
202.235 132.348 202.561 132.274 202.969 132.274 cv
203.238 132.274 203.47 132.309 203.66 132.379 cv
203.852 132.449 204.01 132.549 204.137 132.679 cv
204.263 132.809 204.364 132.985 204.438 133.206 cv
204.511 133.428 204.563 133.673 204.591 133.942 cv
204.619 134.21 204.635 134.534 204.635 134.912 cv
204.629 135.491 li
202.043 135.491 li
202.043 136.448 li
202.043 137.112 202.108 137.581 202.237 137.855 cv
202.364 138.129 202.605 138.266 202.957 138.266 cv
203.238 138.266 203.455 138.177 203.608 137.998 cv
203.758 137.82 203.834 137.496 203.834 137.028 cv
203.834 136.584 li
204.629 136.584 li
204.629 136.941 li
204.629 137.561 204.499 138.039 204.24 138.374 cv
203.981 138.709 203.555 138.877 202.963 138.877 cv
202.963 132.879 mo
202.621 132.879 202.382 132.998 202.246 133.237 cv
202.112 133.474 202.043 133.927 202.043 134.594 cv
202.043 135.027 li
203.834 135.027 li
203.834 134.496 li
203.834 134.273 203.828 134.087 203.819 133.94 cv
203.807 133.791 203.784 133.645 203.75 133.498 cv
203.716 133.353 203.668 133.239 203.608 133.156 cv
203.545 133.072 203.461 133.005 203.353 132.955 cv
203.244 132.905 203.115 132.879 202.963 132.879 cv
f
207.246 138.856 mo
206.811 138.856 206.51 138.736 206.344 138.496 cv
206.178 138.256 206.093 137.906 206.09 137.444 cv
206.09 132.911 li
205.317 132.911 li
205.317 132.371 li
206.09 132.371 li
206.09 130.392 li
206.901 130.392 li
206.901 132.371 li
207.966 132.371 li
207.966 132.911 li
206.901 132.911 li
206.901 137.368 li
206.901 137.693 206.939 137.915 207.014 138.036 cv
207.09 138.157 207.243 138.217 207.474 138.217 cv
207.621 138.217 207.774 138.203 207.928 138.174 cv
207.928 138.785 li
207.687 138.832 207.459 138.856 207.246 138.856 cv
f
209.768 138.871 mo
209.447 138.871 209.201 138.753 209.032 138.515 cv
208.862 138.277 208.778 137.94 208.778 137.503 cv
208.778 132.371 li
209.594 132.371 li
209.594 137.336 li
209.594 137.66 209.643 137.891 209.741 138.028 cv
209.838 138.165 209.99 138.234 210.199 138.234 cv
210.565 138.234 210.943 138.025 211.336 137.606 cv
211.336 132.371 li
212.147 132.371 li
212.147 138.775 li
211.336 138.775 li
211.336 138.066 li
210.86 138.603 210.337 138.871 209.768 138.871 cv
f
214.262 138.775 mo
213.45 138.775 li
213.45 132.371 li
214.262 132.371 li
214.262 133.252 li
214.456 132.928 214.684 132.688 214.946 132.534 cv
215.207 132.378 215.471 132.301 215.738 132.301 cv
215.879 132.306 li
215.879 133.182 li
215.764 133.135 215.633 133.111 215.489 133.111 cv
214.97 133.111 214.561 133.361 214.262 133.859 cv
214.262 138.775 li
f
220.054 138.877 mo
219.679 138.877 219.371 138.739 219.129 138.463 cv
218.888 138.188 218.767 137.846 218.767 137.439 cv
218.767 137.226 218.785 137.035 218.82 136.868 cv
218.858 136.7 218.924 136.542 219.024 136.395 cv
219.123 136.247 219.231 136.116 219.348 136.002 cv
219.465 135.889 219.632 135.768 219.848 135.64 cv
220.065 135.512 220.282 135.394 220.498 135.286 cv
220.714 135.178 220.996 135.046 221.347 134.891 cv
221.347 134.432 li
221.347 133.844 221.291 133.439 221.179 133.217 cv
221.067 132.995 220.858 132.885 220.551 132.885 cv
219.96 132.885 219.664 133.25 219.664 133.983 cv
219.664 134.215 li
218.864 134.188 li
218.864 134.083 218.866 134.019 218.869 133.993 cv
218.895 133.391 219.051 132.954 219.34 132.682 cv
219.629 132.409 220.047 132.274 220.595 132.274 cv
221.16 132.274 221.563 132.442 221.801 132.777 cv
222.039 133.111 222.158 133.649 222.158 134.388 cv
222.158 137.503 li
222.158 138.019 222.178 138.443 222.217 138.775 cv
221.498 138.775 li
221.379 137.887 li
221.281 138.168 221.117 138.404 220.885 138.593 cv
220.652 138.782 220.375 138.877 220.054 138.877 cv
221.347 135.427 mo
221.244 135.481 li
221.067 135.574 220.932 135.647 220.838 135.698 cv
220.744 135.747 220.632 135.811 220.5 135.886 cv
220.369 135.962 220.27 136.026 220.205 136.075 cv
219.981 136.259 li
219.797 136.462 li
219.681 136.681 li
219.641 136.764 219.614 136.852 219.6 136.944 cv
219.585 137.035 219.578 137.138 219.578 137.249 cv
219.578 137.563 219.649 137.796 219.789 137.949 cv
219.93 138.103 220.106 138.18 220.319 138.18 cv
220.535 138.18 220.735 138.105 220.916 137.955 cv
221.099 137.806 221.242 137.628 221.347 137.422 cv
221.347 135.427 li
f
224.77 138.877 mo
224.219 138.877 223.823 138.67 223.583 138.255 cv
223.343 137.841 223.223 137.152 223.223 136.189 cv
223.223 135.005 li
223.223 134.652 223.237 134.341 223.262 134.074 cv
223.286 133.808 223.333 133.557 223.403 133.323 cv
223.471 133.088 223.561 132.898 223.672 132.749 cv
223.784 132.602 223.928 132.486 224.105 132.401 cv
224.281 132.316 224.491 132.274 224.733 132.274 cv
225.155 132.278 225.531 132.463 225.862 132.83 cv
225.862 129.807 li
226.674 129.807 li
226.674 138.775 li
225.862 138.775 li
225.862 138.321 li
225.538 138.688 225.174 138.873 224.77 138.877 cv
224.91 132.911 mo
224.569 132.911 224.336 133.055 224.216 133.342 cv
224.095 133.628 224.034 134.096 224.034 134.745 cv
224.034 136.254 li
224.034 136.953 224.096 137.458 224.219 137.769 cv
224.341 138.078 224.578 138.234 224.932 138.234 cv
225.246 138.234 225.557 138.093 225.862 137.812 cv
225.862 133.366 li
225.538 133.063 225.221 132.911 224.91 132.911 cv
f
228.816 138.775 mo
228.004 138.775 li
228.004 132.371 li
228.816 132.371 li
228.816 138.775 li
228.822 131.489 mo
228.004 131.489 li
228.004 130.386 li
228.822 130.386 li
228.822 131.489 li
f
230.99 140.884 mo
230.179 140.884 li
230.179 132.371 li
230.99 132.371 li
230.99 132.906 li
231.332 132.485 231.742 132.274 232.218 132.274 cv
232.455 132.274 232.664 132.322 232.842 132.419 cv
233.021 132.517 233.161 132.643 233.264 132.798 cv
233.367 132.953 233.449 133.146 233.513 133.377 cv
233.576 133.608 233.617 133.836 233.637 134.061 cv
233.657 134.286 233.667 134.541 233.667 134.826 cv
233.667 136.178 li
233.667 136.518 233.653 136.82 233.623 137.087 cv
233.595 137.354 233.545 137.602 233.473 137.83 cv
233.401 138.06 233.306 138.249 233.189 138.399 cv
233.072 138.548 232.924 138.665 232.748 138.75 cv
232.571 138.835 232.365 138.877 232.131 138.877 cv
231.717 138.877 231.336 138.673 230.99 138.266 cv
230.99 140.884 li
231.985 132.911 mo
231.656 132.911 231.325 133.075 230.99 133.403 cv
230.99 137.769 li
231.285 138.078 231.623 138.234 232.002 138.234 cv
232.146 138.234 232.268 138.203 232.369 138.145 cv
232.47 138.085 232.552 138.004 232.615 137.901 cv
232.678 137.798 232.728 137.658 232.764 137.482 cv
232.8 137.305 232.824 137.116 232.837 136.916 cv
232.85 136.716 232.856 136.474 232.856 136.189 cv
232.856 134.826 li
232.856 134.141 232.798 133.651 232.683 133.355 cv
232.568 133.06 232.334 132.911 231.985 132.911 cv
f
235.7 138.775 mo
234.889 138.775 li
234.889 132.371 li
235.7 132.371 li
235.7 138.775 li
235.706 131.489 mo
234.889 131.489 li
234.889 130.386 li
235.706 130.386 li
235.706 131.489 li
f
238.524 138.877 mo
238.016 138.877 237.61 138.713 237.305 138.385 cv
237 138.057 236.825 137.614 236.782 137.055 cv
237.463 136.849 li
237.507 137.336 237.619 137.694 237.799 137.922 cv
237.979 138.152 238.232 138.266 238.557 138.266 cv
238.838 138.266 239.059 138.183 239.221 138.017 cv
239.377 137.859 239.454 137.646 239.454 137.379 cv
239.454 137.341 li
239.444 136.916 239.184 136.49 238.676 136.065 cv
237.805 135.324 li
237.498 135.068 237.275 134.818 237.134 134.573 cv
236.996 134.334 236.928 134.057 236.928 133.74 cv
236.928 133.271 237.069 132.908 237.35 132.653 cv
237.624 132.4 237.994 132.274 238.459 132.274 cv
238.932 132.274 239.295 132.425 239.549 132.728 cv
239.803 133.031 239.945 133.44 239.973 133.955 cv
239.401 134.145 li
239.375 133.716 239.287 133.398 239.138 133.191 cv
238.988 132.983 238.773 132.879 238.491 132.879 cv
238.239 132.879 238.037 132.949 237.885 133.09 cv
237.738 133.227 237.664 133.411 237.664 133.642 cv
237.664 133.851 237.701 134.03 237.778 134.18 cv
237.854 134.329 237.992 134.491 238.194 134.664 cv
239.098 135.475 li
239.26 135.616 239.392 135.739 239.494 135.846 cv
239.598 135.952 239.706 136.083 239.823 136.241 cv
239.938 136.398 240.023 136.567 240.078 136.749 cv
240.135 136.931 240.164 137.127 240.168 137.336 cv
240.168 137.826 240.02 138.205 239.725 138.474 cv
239.429 138.742 239.029 138.877 238.524 138.877 cv
f
242.672 138.877 mo
242.38 138.877 242.129 138.834 241.92 138.747 cv
241.711 138.66 241.545 138.548 241.423 138.409 cv
241.3 138.271 241.203 138.087 241.133 137.861 cv
241.063 137.633 241.016 137.404 240.992 137.171 cv
240.969 136.939 240.957 136.663 240.957 136.346 cv
240.957 134.854 li
240.957 134.388 240.983 134.001 241.033 133.694 cv
241.084 133.385 241.173 133.121 241.301 132.901 cv
241.429 132.681 241.604 132.522 241.826 132.422 cv
242.047 132.324 242.328 132.274 242.666 132.274 cv
242.934 132.274 243.164 132.306 243.36 132.371 cv
243.554 132.436 243.711 132.525 243.832 132.639 cv
243.953 132.752 244.049 132.898 244.119 133.073 cv
244.19 133.25 244.239 133.437 244.265 133.634 cv
244.292 133.83 244.305 134.06 244.305 134.323 cv
244.305 134.626 li
243.554 134.626 li
243.554 134.323 li
243.554 133.776 243.488 133.398 243.36 133.191 cv
243.229 132.983 243.002 132.879 242.678 132.879 cv
242.31 132.879 242.067 133.01 241.948 133.272 cv
241.828 133.533 241.769 134.015 241.769 134.718 cv
241.769 136.514 li
241.769 137.17 241.833 137.626 241.961 137.882 cv
242.089 138.138 242.33 138.266 242.683 138.266 cv
242.834 138.266 242.963 138.244 243.067 138.201 cv
243.172 138.157 243.256 138.098 243.319 138.023 cv
243.381 137.947 243.432 137.842 243.467 137.709 cv
243.503 137.575 243.527 137.434 243.537 137.284 cv
243.549 137.135 243.554 136.947 243.554 136.719 cv
243.554 136.367 li
244.305 136.367 li
244.305 136.681 li
244.305 136.962 244.293 137.206 244.27 137.411 cv
244.246 137.617 244.2 137.817 244.129 138.009 cv
244.059 138.202 243.965 138.359 243.848 138.48 cv
243.731 138.601 243.573 138.697 243.375 138.769 cv
243.177 138.841 242.943 138.877 242.672 138.877 cv
f
246.285 138.775 mo
245.474 138.775 li
245.474 132.371 li
246.285 132.371 li
246.285 138.775 li
246.291 131.489 mo
245.474 131.489 li
245.474 130.386 li
246.291 130.386 li
246.291 131.489 li
f
250.98 138.775 mo
250.168 138.775 li
250.168 133.81 li
250.168 133.485 250.119 133.254 250.02 133.117 cv
249.92 132.981 249.766 132.911 249.557 132.911 cv
249.207 132.911 248.84 133.109 248.453 133.501 cv
248.453 138.775 li
247.643 138.775 li
247.643 132.371 li
248.453 132.371 li
248.453 133.036 li
248.926 132.528 249.44 132.274 249.995 132.274 cv
250.313 132.274 250.556 132.392 250.725 132.628 cv
250.895 132.864 250.98 133.2 250.98 133.636 cv
250.98 138.775 li
f
253.933 140.878 mo
253.594 140.878 253.295 140.861 253.037 140.824 cv
252.78 140.788 252.551 140.729 252.354 140.646 cv
252.155 140.563 252.004 140.45 251.899 140.308 cv
251.795 140.165 251.742 139.994 251.742 139.796 cv
251.742 139.487 251.845 139.202 252.051 138.945 cv
252.256 138.687 252.506 138.481 252.803 138.325 cv
252.608 138.272 252.44 138.193 252.299 138.09 cv
252.159 137.988 252.088 137.876 252.088 137.758 cv
252.088 137.419 252.342 136.988 252.851 136.465 cv
252.317 136.075 252.051 135.423 252.051 134.507 cv
252.051 134.197 252.086 133.909 252.159 133.645 cv
252.231 133.379 252.338 133.144 252.481 132.936 cv
252.623 132.729 252.809 132.567 253.04 132.449 cv
253.271 132.332 253.535 132.274 253.835 132.274 cv
254.481 132.274 254.94 132.538 255.215 133.069 cv
255.284 132.949 255.399 132.821 255.561 132.682 cv
255.723 132.543 255.896 132.434 256.08 132.355 cv
256.247 132.284 li
256.463 132.852 li
256.287 132.896 256.09 132.973 255.871 133.085 cv
255.654 133.197 255.499 133.305 255.408 133.409 cv
255.463 133.539 255.511 133.719 255.553 133.95 cv
255.594 134.181 255.615 134.374 255.615 134.529 cv
255.615 135.218 255.473 135.763 255.19 136.165 cv
254.906 136.567 254.459 136.768 253.846 136.768 cv
253.748 136.768 253.629 136.756 253.489 136.733 cv
253.348 136.709 253.251 136.687 253.197 136.665 cv
253.186 136.683 253.146 136.744 253.076 136.849 cv
253.005 136.953 252.953 137.033 252.918 137.09 cv
252.813 137.295 li
252.759 137.498 li
252.759 137.603 252.938 137.684 253.295 137.741 cv
253.37 137.763 253.551 137.794 253.835 137.836 cv
254.119 137.877 254.282 137.904 254.322 137.914 cv
254.848 138.008 255.246 138.172 255.518 138.406 cv
255.787 138.641 255.923 138.969 255.923 139.391 cv
255.923 139.9 255.744 140.275 255.387 140.516 cv
255.031 140.757 254.545 140.878 253.933 140.878 cv
253.251 138.434 mo
252.71 138.769 252.44 139.135 252.44 139.532 cv
252.44 139.777 252.555 139.954 252.785 140.065 cv
253.017 140.174 253.395 140.23 253.922 140.23 cv
254.34 140.23 254.67 140.161 254.914 140.027 cv
255.157 139.891 255.28 139.687 255.28 139.412 cv
255.28 139.178 255.197 138.996 255.031 138.866 cv
254.864 138.737 254.545 138.628 254.073 138.542 cv
253.251 138.434 li
253.852 132.852 mo
253.682 132.852 253.532 132.887 253.401 132.957 cv
253.268 133.028 253.164 133.117 253.086 133.226 cv
253.008 133.333 252.946 133.463 252.897 133.615 cv
252.848 133.766 252.816 133.913 252.799 134.056 cv
252.784 134.199 252.776 134.349 252.776 134.507 cv
252.776 135.625 253.132 136.184 253.846 136.184 cv
254.026 136.184 254.184 136.15 254.317 136.081 cv
254.449 136.013 254.553 135.926 254.625 135.821 cv
254.698 135.717 254.754 135.586 254.798 135.429 cv
254.841 135.273 254.869 135.124 254.881 134.986 cv
254.895 134.847 254.901 134.688 254.901 134.507 cv
254.901 133.403 254.551 132.852 253.852 132.852 cv
f
67.2386 152.168 mo
66.6253 152.168 66.1838 151.979 65.9133 151.601 cv
65.6428 151.222 65.5081 150.574 65.5081 149.659 cv
65.5081 148.042 li
65.5081 147.418 65.5715 146.923 65.6994 146.557 cv
65.8274 146.192 66.0149 145.935 66.2619 145.786 cv
66.509 145.639 66.8362 145.565 67.2444 145.565 cv
67.5139 145.565 67.7443 145.6 67.9358 145.67 cv
68.1272 145.74 68.2853 145.841 68.4124 145.97 cv
68.5374 146.1 68.6379 146.276 68.7122 146.497 cv
68.7854 146.719 68.8372 146.965 68.8654 147.234 cv
68.8947 147.502 68.9094 147.825 68.9094 148.204 cv
68.9045 148.782 li
66.3186 148.782 li
66.3186 149.74 li
66.3186 150.404 66.383 150.872 66.511 151.147 cv
66.639 151.42 66.8791 151.557 67.2327 151.557 cv
67.5139 151.557 67.7306 151.468 67.882 151.289 cv
68.0335 151.112 68.1096 150.787 68.1096 150.319 cv
68.1096 149.875 li
68.9045 149.875 li
68.9045 150.233 li
68.9045 150.853 68.7737 151.33 68.5149 151.665 cv
68.2551 152.001 67.8293 152.168 67.2386 152.168 cv
67.2386 146.17 mo
66.8958 146.17 66.6565 146.289 66.5217 146.528 cv
66.3869 146.766 66.3186 147.218 66.3186 147.885 cv
66.3186 148.318 li
68.1096 148.318 li
68.1096 147.787 li
68.1096 147.564 68.1037 147.378 68.0931 147.231 cv
68.0823 147.083 68.0588 146.936 68.0256 146.789 cv
67.9905 146.644 67.9436 146.529 67.882 146.447 cv
67.8206 146.364 67.7365 146.297 67.6272 146.246 cv
67.5198 146.196 67.3898 146.17 67.2386 146.17 cv
f
70.9319 152.066 mo
70.1154 152.066 li
70.1154 143.099 li
70.9319 143.099 li
70.9319 152.066 li
f
73.1447 152.066 mo
72.3332 152.066 li
72.3332 145.662 li
73.1447 145.662 li
73.1447 152.066 li
73.1506 144.781 mo
72.3332 144.781 li
72.3332 143.677 li
73.1506 143.677 li
73.1506 144.781 li
f
76.0217 152.147 mo
75.5862 152.147 75.2844 152.027 75.1184 151.787 cv
74.9533 151.547 74.8674 151.196 74.8646 150.736 cv
74.8646 146.203 li
74.091 146.203 li
74.091 145.662 li
74.8646 145.662 li
74.8646 143.683 li
75.676 143.683 li
75.676 145.662 li
76.7405 145.662 li
76.7405 146.203 li
75.676 146.203 li
75.676 150.659 li
75.676 150.984 75.7131 151.206 75.7894 151.327 cv
75.8655 151.449 76.0178 151.509 76.2482 151.509 cv
76.3968 151.509 76.548 151.494 76.7034 151.465 cv
76.7034 152.076 li
76.4612 152.123 76.2346 152.147 76.0217 152.147 cv
f
77.6985 153.359 mo
77.5314 153.001 li
77.7219 152.893 77.8577 152.767 77.9397 152.622 cv
78.0198 152.479 78.0608 152.293 78.0608 152.066 cv
77.5744 152.066 li
77.5744 150.86 li
78.4827 150.86 li
78.4827 151.979 li
78.4827 152.34 78.423 152.623 78.305 152.831 cv
78.1857 153.038 77.9827 153.214 77.6985 153.359 cv
f
83.3284 152.168 mo
82.8206 152.168 82.4143 152.004 82.1096 151.676 cv
81.8049 151.348 81.6301 150.904 81.5871 150.346 cv
82.2678 150.14 li
82.3118 150.627 82.424 150.985 82.6038 151.214 cv
82.7835 151.443 83.0364 151.557 83.3616 151.557 cv
83.6428 151.557 83.8636 151.475 84.0257 151.309 cv
84.1819 151.15 84.2591 150.937 84.2591 150.67 cv
84.2591 150.632 li
84.2483 150.207 83.9885 149.782 83.4807 149.356 cv
82.6097 148.616 li
82.303 148.36 82.0793 148.109 81.9387 147.863 cv
81.801 147.625 81.7326 147.348 81.7326 147.031 cv
81.7326 146.562 81.8732 146.199 82.1546 145.944 cv
82.429 145.691 82.7991 145.565 83.264 145.565 cv
83.7365 145.565 84.0999 145.716 84.3537 146.019 cv
84.6077 146.321 84.7493 146.732 84.7776 147.246 cv
84.2053 147.436 li
84.1799 147.007 84.092 146.689 83.9426 146.482 cv
83.7933 146.275 83.5774 146.17 83.2961 146.17 cv
83.0432 146.17 82.842 146.241 82.6897 146.381 cv
82.5431 146.519 82.4689 146.702 82.4689 146.933 cv
82.4689 147.142 82.506 147.322 82.5823 147.471 cv
82.6585 147.621 82.7971 147.783 82.9983 147.955 cv
83.9026 148.767 li
84.0647 148.908 84.1966 149.031 84.299 149.137 cv
84.4025 149.243 84.511 149.375 84.6272 149.531 cv
84.7424 149.689 84.8274 149.859 84.883 150.04 cv
84.9396 150.222 84.9689 150.418 84.9728 150.627 cv
84.9728 151.117 84.8244 151.497 84.5296 151.766 cv
84.2337 152.034 83.8332 152.168 83.3284 152.168 cv
f
87.4925 152.168 mo
86.8801 152.168 86.4387 151.979 86.1682 151.601 cv
85.8976 151.222 85.762 150.574 85.762 149.659 cv
85.762 148.042 li
85.762 147.418 85.8264 146.923 85.9544 146.557 cv
86.0822 146.192 86.2698 145.935 86.5168 145.786 cv
86.7639 145.639 87.091 145.565 87.4984 145.565 cv
87.7687 145.565 88.0002 145.6 88.1907 145.67 cv
88.382 145.74 88.5403 145.841 88.6662 145.97 cv
88.7933 146.1 88.8929 146.276 88.9671 146.497 cv
89.0413 146.719 89.092 146.965 89.1213 147.234 cv
89.1497 147.502 89.1643 147.825 89.1643 148.204 cv
89.1584 148.782 li
86.5736 148.782 li
86.5736 149.74 li
86.5736 150.404 86.638 150.872 86.7658 151.147 cv
86.8938 151.42 87.135 151.557 87.4875 151.557 cv
87.7687 151.557 87.9846 151.468 88.137 151.289 cv
88.2883 151.112 88.3635 150.787 88.3635 150.319 cv
88.3635 149.875 li
89.1584 149.875 li
89.1584 150.233 li
89.1584 150.853 89.0295 151.33 88.7698 151.665 cv
88.51 152.001 88.0842 152.168 87.4925 152.168 cv
87.4925 146.17 mo
87.1506 146.17 86.9124 146.289 86.7766 146.528 cv
86.6408 146.766 86.5736 147.218 86.5736 147.885 cv
86.5736 148.318 li
88.3635 148.318 li
88.3635 147.787 li
88.3635 147.564 88.3586 147.378 88.3479 147.231 cv
88.3362 147.083 88.3147 146.936 88.2796 146.789 cv
88.2464 146.644 88.1976 146.529 88.137 146.447 cv
88.0754 146.364 87.9904 146.297 87.883 146.246 cv
87.7737 146.196 87.6448 146.17 87.4925 146.17 cv
f
91.6848 152.168 mo
91.133 152.168 90.7375 151.961 90.4982 151.546 cv
90.2581 151.132 90.1379 150.444 90.1379 149.481 cv
90.1379 148.296 li
90.1379 147.943 90.1507 147.633 90.176 147.366 cv
90.2014 147.099 90.2483 146.849 90.3166 146.613 cv
90.385 146.38 90.4748 146.189 90.5863 146.04 cv
90.6985 145.893 90.8429 145.777 91.0197 145.692 cv
91.1956 145.608 91.4055 145.565 91.6467 145.565 cv
92.0686 145.569 92.4456 145.754 92.7776 146.122 cv
92.7776 143.099 li
93.5881 143.099 li
93.5881 152.066 li
92.7776 152.066 li
92.7776 151.611 li
92.4534 151.979 92.0881 152.165 91.6848 152.168 cv
91.8254 146.203 mo
91.4827 146.203 91.2512 146.346 91.131 146.633 cv
91.01 146.919 90.9494 147.387 90.9494 148.036 cv
90.9494 149.545 li
90.9494 150.245 91.01 150.749 91.133 151.06 cv
91.2562 151.369 91.4933 151.525 91.8469 151.525 cv
92.1604 151.525 92.471 151.384 92.7776 151.103 cv
92.7776 146.657 li
92.4534 146.355 92.135 146.203 91.8254 146.203 cv
f
98.5158 152.168 mo
97.9641 152.168 97.5686 151.961 97.3283 151.546 cv
97.0881 151.132 96.969 150.444 96.969 149.481 cv
96.969 148.296 li
96.969 147.943 96.9816 147.633 97.007 147.366 cv
97.0315 147.099 97.0784 146.849 97.1478 146.613 cv
97.2161 146.38 97.3059 146.189 97.4183 146.04 cv
97.5296 145.893 97.6741 145.777 97.8498 145.692 cv
98.0276 145.608 98.2366 145.565 98.4778 145.565 cv
98.8996 145.569 99.2766 145.754 99.6076 146.122 cv
99.6076 143.099 li
100.42 143.099 li
100.42 152.066 li
99.6076 152.066 li
99.6076 151.611 li
99.2835 151.979 98.9202 152.165 98.5158 152.168 cv
98.6565 146.203 mo
98.3138 146.203 98.0823 146.346 97.9611 146.633 cv
97.84 146.919 97.7795 147.387 97.7795 148.036 cv
97.7795 149.545 li
97.7795 150.245 97.842 150.749 97.9641 151.06 cv
98.0862 151.369 98.3244 151.525 98.678 151.525 cv
98.9924 151.525 99.302 151.384 99.6076 151.103 cv
99.6076 146.657 li
99.2835 146.355 98.967 146.203 98.6565 146.203 cv
f
103.248 152.168 mo
102.92 152.168 102.645 152.116 102.42 152.012 cv
102.197 151.907 102.022 151.748 101.894 151.535 cv
101.766 151.322 101.674 151.073 101.62 150.786 cv
101.567 150.5 101.539 150.155 101.539 149.751 cv
101.539 147.977 li
101.539 147.162 101.665 146.556 101.918 146.159 cv
102.17 145.763 102.614 145.565 103.248 145.565 cv
103.887 145.565 104.33 145.762 104.582 146.157 cv
104.832 146.552 104.957 147.158 104.957 147.977 cv
104.957 149.751 li
104.957 150.155 104.93 150.5 104.876 150.786 cv
104.823 151.073 104.731 151.322 104.604 151.535 cv
104.475 151.748 104.299 151.907 104.076 152.012 cv
103.852 152.116 103.576 152.168 103.248 152.168 cv
103.248 146.17 mo
103.112 146.17 102.992 146.189 102.891 146.225 cv
102.79 146.261 102.707 146.32 102.643 146.401 cv
102.578 146.482 102.526 146.568 102.486 146.66 cv
102.446 146.752 102.416 146.872 102.397 147.02 cv
102.377 147.167 102.364 147.307 102.359 147.439 cv
102.354 147.571 102.35 147.736 102.35 147.934 cv
102.35 149.794 li
102.35 149.992 102.354 150.158 102.359 150.289 cv
102.364 150.421 102.377 150.561 102.397 150.708 cv
102.416 150.856 102.446 150.976 102.486 151.068 cv
102.526 151.159 102.578 151.246 102.643 151.327 cv
102.707 151.408 102.79 151.467 102.891 151.503 cv
102.992 151.539 103.112 151.557 103.248 151.557 cv
103.41 151.557 103.547 151.528 103.659 151.468 cv
103.772 151.408 103.859 151.334 103.922 151.243 cv
103.985 151.154 104.032 151.026 104.065 150.86 cv
104.098 150.694 104.118 150.535 104.127 150.384 cv
104.136 150.233 104.141 150.035 104.141 149.794 cv
104.141 147.934 li
104.141 147.693 104.136 147.495 104.127 147.344 cv
104.118 147.193 104.098 147.034 104.065 146.868 cv
104.032 146.702 103.985 146.574 103.922 146.485 cv
103.859 146.394 103.772 146.32 103.659 146.26 cv
103.547 146.2 103.41 146.17 103.248 146.17 cv
f
109.944 152.168 mo
109.33 152.168 108.889 151.979 108.619 151.601 cv
108.348 151.222 108.213 150.574 108.213 149.659 cv
108.213 148.042 li
108.213 147.418 108.278 146.923 108.404 146.557 cv
108.534 146.192 108.721 145.935 108.967 145.786 cv
109.215 145.639 109.541 145.565 109.949 145.565 cv
110.219 145.565 110.45 145.6 110.641 145.67 cv
110.832 145.74 110.991 145.841 111.117 145.97 cv
111.243 146.1 111.344 146.276 111.418 146.497 cv
111.491 146.719 111.543 146.965 111.572 147.234 cv
111.6 147.502 111.616 147.825 111.616 148.204 cv
111.61 148.782 li
109.024 148.782 li
109.024 149.74 li
109.024 150.404 109.088 150.872 109.217 151.147 cv
109.344 151.42 109.585 151.557 109.938 151.557 cv
110.219 151.557 110.436 151.468 110.588 151.289 cv
110.738 151.112 110.815 150.787 110.815 150.319 cv
110.815 149.875 li
111.61 149.875 li
111.61 150.233 li
111.61 150.853 111.48 151.33 111.221 151.665 cv
110.961 152.001 110.535 152.168 109.944 152.168 cv
109.944 146.17 mo
109.602 146.17 109.362 146.289 109.227 146.528 cv
109.092 146.766 109.024 147.218 109.024 147.885 cv
109.024 148.318 li
110.815 148.318 li
110.815 147.787 li
110.815 147.564 110.809 147.378 110.799 147.231 cv
110.787 147.083 110.765 146.936 110.731 146.789 cv
110.697 146.644 110.649 146.529 110.588 146.447 cv
110.526 146.364 110.442 146.297 110.333 146.246 cv
110.225 146.196 110.096 146.17 109.944 146.17 cv
f
113.611 152.066 mo
112.799 152.066 li
112.799 145.662 li
113.611 145.662 li
113.611 152.066 li
113.616 144.781 mo
112.799 144.781 li
112.799 143.677 li
113.616 143.677 li
113.616 144.781 li
f
115.909 152.163 mo
115.588 152.163 115.344 152.044 115.174 151.806 cv
115.004 151.568 114.92 151.231 114.92 150.795 cv
114.92 145.662 li
115.737 145.662 li
115.737 150.627 li
115.737 150.951 115.785 151.182 115.883 151.32 cv
115.98 151.456 116.133 151.525 116.342 151.525 cv
116.706 151.525 117.084 151.316 117.478 150.898 cv
117.478 145.662 li
118.289 145.662 li
118.289 152.066 li
117.478 152.066 li
117.478 151.357 li
117.002 151.895 116.479 152.163 115.909 152.163 cv
f
120.992 152.168 mo
120.485 152.168 120.078 152.004 119.774 151.676 cv
119.469 151.348 119.295 150.904 119.252 150.346 cv
119.933 150.14 li
119.977 150.627 120.088 150.985 120.268 151.214 cv
120.448 151.443 120.701 151.557 121.026 151.557 cv
121.307 151.557 121.529 151.475 121.691 151.309 cv
121.846 151.15 121.924 150.937 121.924 150.67 cv
121.924 150.632 li
121.912 150.207 121.653 149.782 121.145 149.356 cv
120.274 148.616 li
119.967 148.36 119.744 148.109 119.604 147.863 cv
119.466 147.625 119.398 147.348 119.398 147.031 cv
119.398 146.562 119.538 146.199 119.82 145.944 cv
120.094 145.691 120.463 145.565 120.928 145.565 cv
121.401 145.565 121.764 145.716 122.018 146.019 cv
122.272 146.321 122.414 146.732 122.443 147.246 cv
121.869 147.436 li
121.844 147.007 121.756 146.689 121.608 146.482 cv
121.457 146.275 121.242 146.17 120.961 146.17 cv
120.708 146.17 120.506 146.241 120.355 146.381 cv
120.207 146.519 120.133 146.702 120.133 146.933 cv
120.133 147.142 120.171 147.322 120.246 147.471 cv
120.323 147.621 120.461 147.783 120.663 147.955 cv
121.567 148.767 li
121.729 148.908 121.862 149.031 121.964 149.137 cv
122.067 149.243 122.176 149.375 122.291 149.531 cv
122.406 149.689 122.492 149.859 122.548 150.04 cv
122.604 150.222 122.633 150.418 122.637 150.627 cv
122.637 151.117 122.49 151.497 122.194 151.766 cv
121.899 152.034 121.498 152.168 120.992 152.168 cv
f
129.491 152.066 mo
128.722 152.066 li
128.722 147.035 li
128.722 146.686 128.668 146.443 128.56 146.306 cv
128.451 146.169 128.296 146.1 128.094 146.1 cv
127.687 146.108 127.285 146.329 126.889 146.766 cv
126.896 146.873 126.899 146.956 126.899 147.014 cv
126.899 152.066 li
126.142 152.066 li
126.142 147.035 li
126.142 146.686 126.086 146.443 125.975 146.306 cv
125.863 146.169 125.705 146.1 125.504 146.1 cv
125.096 146.108 124.698 146.329 124.309 146.766 cv
124.309 152.066 li
123.546 152.066 li
123.546 145.662 li
124.309 145.662 li
124.309 146.311 li
124.737 145.803 125.241 145.548 125.818 145.548 cv
126.352 145.548 126.686 145.829 126.824 146.392 cv
127.271 145.829 127.797 145.548 128.403 145.548 cv
128.72 145.548 128.981 145.663 129.184 145.892 cv
129.388 146.121 129.491 146.495 129.491 147.014 cv
129.491 152.066 li
f
132.27 152.168 mo
131.942 152.168 131.666 152.116 131.442 152.012 cv
131.219 151.907 131.043 151.748 130.915 151.535 cv
130.787 151.322 130.696 151.073 130.642 150.786 cv
130.588 150.5 130.561 150.155 130.561 149.751 cv
130.561 147.977 li
130.561 147.162 130.687 146.556 130.94 146.159 cv
131.192 145.763 131.635 145.565 132.27 145.565 cv
132.908 145.565 133.352 145.762 133.604 146.157 cv
133.854 146.552 133.979 147.158 133.979 147.977 cv
133.979 149.751 li
133.979 150.155 133.951 150.5 133.898 150.786 cv
133.844 151.073 133.752 151.322 133.625 151.535 cv
133.496 151.748 133.321 151.907 133.098 152.012 cv
132.873 152.116 132.598 152.168 132.27 152.168 cv
132.27 146.17 mo
132.133 146.17 132.014 146.189 131.912 146.225 cv
131.812 146.261 131.729 146.32 131.664 146.401 cv
131.6 146.482 131.547 146.568 131.507 146.66 cv
131.467 146.752 131.438 146.872 131.418 147.02 cv
131.399 147.167 131.385 147.307 131.38 147.439 cv
131.375 147.571 131.371 147.736 131.371 147.934 cv
131.371 149.794 li
131.371 149.992 131.375 150.158 131.38 150.289 cv
131.385 150.421 131.399 150.561 131.418 150.708 cv
131.438 150.856 131.467 150.976 131.507 151.068 cv
131.547 151.159 131.6 151.246 131.664 151.327 cv
131.729 151.408 131.812 151.467 131.912 151.503 cv
132.014 151.539 132.133 151.557 132.27 151.557 cv
132.432 151.557 132.569 151.528 132.681 151.468 cv
132.793 151.408 132.88 151.334 132.944 151.243 cv
133.006 151.154 133.054 151.026 133.086 150.86 cv
133.119 150.694 133.14 150.535 133.149 150.384 cv
133.157 150.233 133.162 150.035 133.162 149.794 cv
133.162 147.934 li
133.162 147.693 133.157 147.495 133.149 147.344 cv
133.14 147.193 133.119 147.034 133.086 146.868 cv
133.054 146.702 133.006 146.574 132.944 146.485 cv
132.88 146.394 132.793 146.32 132.681 146.26 cv
132.569 146.2 132.432 146.17 132.27 146.17 cv
f
136.521 152.168 mo
135.969 152.168 135.573 151.961 135.334 151.546 cv
135.094 151.132 134.974 150.444 134.974 149.481 cv
134.974 148.296 li
134.974 147.943 134.987 147.633 135.012 147.366 cv
135.037 147.099 135.084 146.849 135.153 146.613 cv
135.221 146.38 135.311 146.189 135.422 146.04 cv
135.534 145.893 135.679 145.777 135.856 145.692 cv
136.031 145.608 136.241 145.565 136.483 145.565 cv
136.905 145.569 137.281 145.754 137.614 146.122 cv
137.614 143.099 li
138.424 143.099 li
138.424 152.066 li
137.614 152.066 li
137.614 151.611 li
137.289 151.979 136.924 152.165 136.521 152.168 cv
136.661 146.203 mo
136.319 146.203 136.087 146.346 135.967 146.633 cv
135.846 146.919 135.785 147.387 135.785 148.036 cv
135.785 149.545 li
135.785 150.245 135.846 150.749 135.969 151.06 cv
136.092 151.369 136.329 151.525 136.683 151.525 cv
136.996 151.525 137.307 151.384 137.614 151.103 cv
137.614 146.657 li
137.289 146.355 136.971 146.203 136.661 146.203 cv
f
143.444 152.147 mo
143.008 152.147 142.706 152.027 142.54 151.787 cv
142.375 151.547 142.289 151.196 142.286 150.736 cv
142.286 146.203 li
141.513 146.203 li
141.513 145.662 li
142.286 145.662 li
142.286 143.683 li
143.098 143.683 li
143.098 145.662 li
144.162 145.662 li
144.162 146.203 li
143.098 146.203 li
143.098 150.659 li
143.098 150.984 143.135 151.206 143.211 151.327 cv
143.287 151.449 143.44 151.509 143.67 151.509 cv
143.819 151.509 143.97 151.494 144.125 151.465 cv
144.125 152.076 li
143.883 152.123 143.657 152.147 143.444 152.147 cv
f
146.635 152.168 mo
146.022 152.168 145.58 151.979 145.31 151.601 cv
145.039 151.222 144.905 150.574 144.905 149.659 cv
144.905 148.042 li
144.905 147.418 144.968 146.923 145.096 146.557 cv
145.224 146.192 145.411 145.935 145.658 145.786 cv
145.906 145.639 146.233 145.565 146.641 145.565 cv
146.91 145.565 147.141 145.6 147.332 145.67 cv
147.524 145.74 147.682 145.841 147.809 145.97 cv
147.934 146.1 148.034 146.276 148.109 146.497 cv
148.182 146.719 148.234 146.965 148.262 147.234 cv
148.291 147.502 148.306 147.825 148.306 148.204 cv
148.301 148.782 li
145.715 148.782 li
145.715 149.74 li
145.715 150.404 145.78 150.872 145.908 151.147 cv
146.035 151.42 146.276 151.557 146.629 151.557 cv
146.91 151.557 147.127 151.468 147.279 151.289 cv
147.43 151.112 147.506 150.787 147.506 150.319 cv
147.506 149.875 li
148.301 149.875 li
148.301 150.233 li
148.301 150.853 148.17 151.33 147.911 151.665 cv
147.652 152.001 147.226 152.168 146.635 152.168 cv
146.635 146.17 mo
146.292 146.17 146.053 146.289 145.918 146.528 cv
145.783 146.766 145.715 147.218 145.715 147.885 cv
145.715 148.318 li
147.506 148.318 li
147.506 147.787 li
147.506 147.564 147.5 147.378 147.489 147.231 cv
147.479 147.083 147.455 146.936 147.422 146.789 cv
147.387 146.644 147.34 146.529 147.279 146.447 cv
147.217 146.364 147.133 146.297 147.024 146.246 cv
146.916 146.196 146.786 146.17 146.635 146.17 cv
f
155.342 152.066 mo
154.574 152.066 li
154.574 147.035 li
154.574 146.686 154.52 146.443 154.412 146.306 cv
154.304 146.169 154.149 146.1 153.947 146.1 cv
153.539 146.108 153.137 146.329 152.74 146.766 cv
152.748 146.873 152.752 146.956 152.752 147.014 cv
152.752 152.066 li
151.994 152.066 li
151.994 147.035 li
151.994 146.686 151.939 146.443 151.826 146.306 cv
151.715 146.169 151.559 146.1 151.356 146.1 cv
150.949 146.108 150.551 146.329 150.16 146.766 cv
150.16 152.066 li
149.399 152.066 li
149.399 145.662 li
150.16 145.662 li
150.16 146.311 li
150.59 145.803 151.093 145.548 151.67 145.548 cv
152.203 145.548 152.539 145.829 152.676 146.392 cv
153.123 145.829 153.65 145.548 154.255 145.548 cv
154.572 145.548 154.833 145.663 155.037 145.892 cv
155.24 146.121 155.342 146.495 155.342 147.014 cv
155.342 152.066 li
f
157.349 154.175 mo
156.537 154.175 li
156.537 145.662 li
157.349 145.662 li
157.349 146.198 li
157.692 145.776 158.101 145.565 158.576 145.565 cv
158.815 145.565 159.023 145.614 159.201 145.711 cv
159.379 145.808 159.52 145.935 159.623 146.089 cv
159.726 146.244 159.809 146.438 159.871 146.668 cv
159.935 146.899 159.977 147.127 159.996 147.352 cv
160.016 147.577 160.026 147.832 160.026 148.117 cv
160.026 149.47 li
160.026 149.809 160.012 150.112 159.983 150.378 cv
159.953 150.645 159.903 150.893 159.831 151.122 cv
159.76 151.351 159.664 151.54 159.547 151.69 cv
159.43 151.839 159.283 151.956 159.107 152.041 cv
158.93 152.126 158.725 152.168 158.491 152.168 cv
158.075 152.168 157.695 151.965 157.349 151.557 cv
157.349 154.175 li
158.344 146.203 mo
158.016 146.203 157.684 146.367 157.349 146.696 cv
157.349 151.06 li
157.645 151.369 157.982 151.525 158.361 151.525 cv
158.504 151.525 158.627 151.495 158.729 151.436 cv
158.828 151.376 158.91 151.295 158.975 151.193 cv
159.037 151.089 159.086 150.949 159.123 150.773 cv
159.158 150.597 159.184 150.409 159.196 150.208 cv
159.209 150.008 159.215 149.765 159.215 149.481 cv
159.215 148.117 li
159.215 147.433 159.157 146.943 159.041 146.647 cv
158.926 146.351 158.694 146.203 158.344 146.203 cv
f
162.746 152.168 mo
162.418 152.168 162.143 152.116 161.918 152.012 cv
161.696 151.907 161.52 151.748 161.392 151.535 cv
161.264 151.322 161.172 151.073 161.118 150.786 cv
161.065 150.5 161.037 150.155 161.037 149.751 cv
161.037 147.977 li
161.037 147.162 161.163 146.556 161.416 146.159 cv
161.668 145.763 162.112 145.565 162.746 145.565 cv
163.385 145.565 163.828 145.762 164.08 146.157 cv
164.33 146.552 164.455 147.158 164.455 147.977 cv
164.455 149.751 li
164.455 150.155 164.428 150.5 164.374 150.786 cv
164.321 151.073 164.229 151.322 164.102 151.535 cv
163.973 151.748 163.797 151.907 163.574 152.012 cv
163.35 152.116 163.074 152.168 162.746 152.168 cv
162.746 146.17 mo
162.61 146.17 162.49 146.189 162.389 146.225 cv
162.288 146.261 162.205 146.32 162.141 146.401 cv
162.076 146.482 162.024 146.568 161.984 146.66 cv
161.944 146.752 161.914 146.872 161.895 147.02 cv
161.875 147.167 161.862 147.307 161.857 147.439 cv
161.852 147.571 161.848 147.736 161.848 147.934 cv
161.848 149.794 li
161.848 149.992 161.852 150.158 161.857 150.289 cv
161.862 150.421 161.875 150.561 161.895 150.708 cv
161.914 150.856 161.944 150.976 161.984 151.068 cv
162.024 151.159 162.076 151.246 162.141 151.327 cv
162.205 151.408 162.288 151.467 162.389 151.503 cv
162.49 151.539 162.61 151.557 162.746 151.557 cv
162.908 151.557 163.045 151.528 163.158 151.468 cv
163.27 151.408 163.357 151.334 163.42 151.243 cv
163.483 151.154 163.53 151.026 163.563 150.86 cv
163.596 150.694 163.616 150.535 163.625 150.384 cv
163.634 150.233 163.639 150.035 163.639 149.794 cv
163.639 147.934 li
163.639 147.693 163.634 147.495 163.625 147.344 cv
163.616 147.193 163.596 147.034 163.563 146.868 cv
163.53 146.702 163.483 146.574 163.42 146.485 cv
163.357 146.394 163.27 146.32 163.158 146.26 cv
163.045 146.2 162.908 146.17 162.746 146.17 cv
f
166.446 152.066 mo
165.635 152.066 li
165.635 145.662 li
166.446 145.662 li
166.446 146.543 li
166.641 146.219 166.868 145.98 167.129 145.824 cv
167.391 145.669 167.654 145.592 167.922 145.592 cv
168.063 145.597 li
168.063 146.474 li
167.948 146.427 167.818 146.404 167.673 146.404 cv
167.155 146.404 166.744 146.652 166.446 147.15 cv
166.446 152.066 li
f
537.66 .000244141 mo
534.232 17.0647 539.512 35.4563 553.23 48.135 cv
566.285 60.2014 583.897 64.2424 600 60.5022 cv
600 .000244141 li
537.66 .000244141 li
cp
.147219 .0154116 0 0 cmyk
f
394.09 393.584 mo
391.465 393.584 388.96 393.054 387.087 391.973 cv
240.992 307.624 li
236.86 305.239 237.378 301.071 242.151 298.316 cv
249.556 294.041 li
388.182 374.076 li
388.182 374.076 li
390.194 375.238 392.888 375.808 395.708 375.808 cv
399.114 375.808 402.705 374.978 405.51 373.359 cv
443.754 351.286 li
443.754 367.905 li
403.211 391.304 li
400.601 392.811 397.259 393.584 394.09 393.584 cv
.477638 .319829 .131411 0 cmyk
f
552.599 145.28 mo
395.599 54.635 li
393.776 53.5823 391.922 53.4202 390.279 53.9827 cv
390.288 53.9661 li
390.003 54.0745 li
389.934 54.1008 li
384.26 56.2717 li
389.353 58.7649 li
389.329 58.8586 389.3 58.9465 389.28 59.0422 cv
361.538 185.198 li
360.259 191.024 362.822 197.824 367.263 200.389 cv
520.487 288.853 li
519.941 295.346 li
526.142 292.943 li
528.225 291.968 529.893 289.765 530.582 286.626 cv
558.323 160.47 li
559.603 154.645 557.04 147.843 552.599 145.28 cv
cp
1 .866484 .240818 .0951247 cmyk
f
552.599 145.28 mo
395.599 54.635 li
393.776 53.5823 391.922 53.4202 390.279 53.9827 cv
390.288 53.9661 li
390.003 54.0745 li
389.934 54.1008 li
384.26 56.2717 li
389.353 58.7649 li
389.329 58.8586 389.3 58.9465 389.28 59.0422 cv
370.257 145.511 li
447.075 205.36 li
557.558 151.535 li
556.517 148.837 554.787 146.543 552.599 145.28 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
546.679 163.173 mo
558.63 158.084 li
558.85 153.456 556.934 148.674 553.788 146.116 cv
534.87 154.074 li
546.679 163.173 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
514.487 294.729 mo
357.487 204.085 li
353.045 201.521 350.483 194.72 351.762 188.894 cv
379.503 62.7375 li
380.782 56.9124 385.42 54.2688 389.862 56.8333 cv
546.862 147.477 li
551.303 150.041 553.865 156.842 552.586 162.668 cv
524.845 288.824 li
523.566 294.65 518.928 297.293 514.487 294.729 cv
cp
.147219 .0154116 0 0 cmyk
f
548.369 146.925 mo
391.369 56.2815 li
389.218 55.0393 387.028 55.0413 385.188 56.0129 cv
386.664 55.6897 388.273 55.9153 389.862 56.8333 cv
546.862 147.476 li
551.303 150.04 553.865 156.843 552.586 162.668 cv
524.845 288.823 li
524.186 291.826 522.626 293.963 520.668 294.997 cv
523.319 294.418 525.531 292.014 526.353 288.272 cv
554.094 162.116 li
555.373 156.291 552.811 149.49 548.369 146.925 cv
cp
0 0 0 0 cmyk
f
511.083 286.071 mo
363.428 200.864 li
359.364 198.517 357.018 192.293 358.19 186.962 cv
383.758 70.6907 li
384.93 65.3606 389.174 62.9407 393.238 65.2874 cv
540.893 150.494 li
544.957 152.841 547.303 159.065 546.132 164.396 cv
520.563 280.666 li
519.391 285.997 515.148 288.417 511.083 286.071 cv
cp
f
511.083 286.071 mo
363.428 200.864 li
359.364 198.517 357.018 192.293 358.19 186.962 cv
383.758 70.6907 li
384.93 65.3606 389.174 62.9407 393.238 65.2874 cv
540.893 150.494 li
544.957 152.841 547.303 159.065 546.132 164.396 cv
520.563 280.666 li
519.391 285.997 515.148 288.417 511.083 286.071 cv
cp
1 .866484 .240818 .0951247 cmyk
f
512.37 285.546 mo
364.714 200.339 li
360.651 197.993 358.305 191.769 359.476 186.44 cv
385.045 70.1672 li
385.638 67.469 387.021 65.5266 388.766 64.5598 cv
386.425 65.1624 384.49 67.3567 383.758 70.6907 cv
358.19 186.962 li
357.018 192.293 359.364 198.517 363.428 200.864 cv
511.083 286.071 li
513.09 287.23 515.139 287.217 516.841 286.274 cv
515.44 286.636 513.892 286.426 512.37 285.546 cv
cp
.657221 .328313 0 0 cmyk
f
516.654 298.677 mo
495.194 295.843 li
356.659 215.861 li
352.218 213.296 344.46 213.617 339.331 216.578 cv
241.167 273.234 li
228.191 271.52 li
228.191 278.883 li
228.203 278.884 li
228.118 280.586 229.087 282.223 231.182 283.433 cv
388.182 374.076 li
392.623 376.641 400.381 376.32 405.51 373.359 cv
512.415 311.658 li
515.3 309.991 516.739 307.846 516.654 305.83 cv
516.654 298.677 li
1 .866484 .240818 .0951247 cmyk
f
412.565 248.137 mo
402.722 242.454 li
294.513 242.454 li
241.167 273.234 li
228.191 271.52 li
228.191 278.883 li
228.203 278.884 li
228.118 280.586 229.087 282.223 231.182 283.433 cv
388.182 374.076 li
390.53 375.432 393.803 375.973 397.124 375.752 cv
412.565 248.137 li
.827268 .57586 .071809 .00112917 cmyk
f
233.949 272.281 mo
228.191 271.52 li
228.191 278.883 li
228.203 278.884 li
228.118 280.586 229.087 282.223 231.182 283.433 cv
233.949 285.03 li
233.949 272.281 li
cp
.657221 .328313 0 0 cmyk
f
389.763 374.811 mo
393.973 376.407 399.991 376.06 404.486 373.897 cv
404.486 357.474 li
389.763 357.474 li
389.763 374.811 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
388.182 366.722 mo
231.183 276.078 li
226.741 273.514 227.298 269.035 232.426 266.074 cv
339.331 204.373 li
344.46 201.412 352.218 201.091 356.659 203.655 cv
513.659 294.299 li
518.101 296.863 517.543 301.342 512.415 304.303 cv
405.51 366.004 li
400.381 368.965 392.623 369.286 388.182 366.722 cv
.147219 .0154116 0 0 cmyk
f
512.415 301.614 mo
405.51 363.315 li
400.381 366.276 392.623 366.597 388.182 364.033 cv
231.182 273.389 li
229.726 272.548 228.818 271.5 228.421 270.368 cv
227.727 272.47 228.613 274.594 231.182 276.078 cv
388.182 366.722 li
392.623 369.286 400.381 368.965 405.51 366.004 cv
512.415 304.303 li
515.862 302.313 517.234 299.638 516.42 297.319 cv
515.914 298.849 514.576 300.366 512.415 301.614 cv
0 0 0 0 cmyk
f
297.956 246.07 mo
290.853 241.968 li
290.282 241.639 290.354 241.064 291.013 240.684 cv
299.398 235.843 li
300.056 235.462 301.052 235.421 301.622 235.75 cv
308.726 239.852 li
309.297 240.181 309.225 240.756 308.567 241.137 cv
300.182 245.978 li
299.524 246.358 298.527 246.399 297.956 246.07 cv
cp
.657221 .328313 0 0 cmyk
f
308.927 252.404 mo
301.823 248.302 li
301.253 247.973 301.324 247.398 301.983 247.018 cv
310.367 242.176 li
311.027 241.796 312.023 241.755 312.593 242.084 cv
319.697 246.186 li
320.267 246.515 320.196 247.09 319.536 247.47 cv
311.152 252.311 li
310.493 252.692 309.497 252.733 308.927 252.404 cv
cp
f
319.897 258.737 mo
312.793 254.636 li
312.223 254.307 312.294 253.732 312.953 253.351 cv
321.338 248.51 li
321.996 248.13 322.992 248.088 323.563 248.418 cv
330.666 252.519 li
331.237 252.848 331.165 253.423 330.507 253.804 cv
322.122 258.645 li
321.463 259.025 320.467 259.067 319.897 258.737 cv
cp
f
335.07 253.506 mo
327.965 249.406 li
327.395 249.075 327.467 248.5 328.125 248.12 cv
335.163 244.057 li
335.823 243.677 336.819 243.635 337.389 243.964 cv
344.492 248.066 li
345.063 248.395 344.991 248.97 344.333 249.351 cv
337.294 253.414 li
336.636 253.794 335.64 253.836 335.07 253.506 cv
cp
f
346.039 259.84 mo
338.936 255.739 li
338.365 255.409 338.437 254.834 339.095 254.454 cv
346.134 250.39 li
346.792 250.01 347.788 249.969 348.359 250.298 cv
355.463 254.4 li
356.033 254.729 355.961 255.304 355.303 255.684 cv
348.265 259.748 li
347.606 260.128 346.61 260.169 346.039 259.84 cv
cp
f
357.009 266.174 mo
349.906 262.073 li
349.335 261.743 349.406 261.168 350.066 260.787 cv
357.104 256.724 li
357.763 256.344 358.759 256.302 359.329 256.632 cv
366.433 260.733 li
367.003 261.063 366.932 261.638 366.273 262.018 cv
359.235 266.081 li
358.576 266.461 357.579 266.503 357.009 266.174 cv
cp
f
367.98 272.507 mo
360.876 268.406 li
360.306 268.076 360.377 267.501 361.035 267.121 cv
368.074 263.058 li
368.733 262.677 369.729 262.636 370.299 262.965 cv
377.403 267.067 li
377.973 267.396 377.902 267.971 377.243 268.352 cv
370.204 272.415 li
369.546 272.795 368.55 272.836 367.98 272.507 cv
cp
f
378.949 278.841 mo
371.846 274.74 li
371.276 274.41 371.347 273.835 372.006 273.455 cv
379.044 269.391 li
379.702 269.011 380.699 268.97 381.27 269.299 cv
388.373 273.401 li
388.944 273.73 388.872 274.305 388.213 274.685 cv
381.175 278.748 li
380.516 279.129 379.52 279.17 378.949 278.841 cv
f
389.92 285.174 mo
382.816 281.073 li
382.245 280.743 382.318 280.168 382.976 279.788 cv
390.014 275.725 li
390.673 275.345 391.669 275.303 392.239 275.632 cv
399.343 279.734 li
399.913 280.063 399.842 280.638 399.184 281.019 cv
392.145 285.082 li
391.486 285.462 390.49 285.504 389.92 285.174 cv
f
400.89 291.508 mo
393.786 287.407 li
393.216 287.077 393.287 286.502 393.945 286.122 cv
400.985 282.059 li
401.643 281.678 402.639 281.637 403.209 281.966 cv
410.314 286.068 li
410.884 286.397 410.812 286.972 410.154 287.352 cv
403.115 291.416 li
402.456 291.796 401.46 291.837 400.89 291.508 cv
f
411.86 297.842 mo
404.756 293.74 li
404.186 293.411 404.257 292.836 404.916 292.455 cv
411.954 288.392 li
412.614 288.012 413.61 287.97 414.18 288.3 cv
421.283 292.401 li
421.854 292.731 421.782 293.306 421.123 293.686 cv
414.085 297.749 li
413.427 298.13 412.43 298.171 411.86 297.842 cv
f
422.83 304.175 mo
415.727 300.074 li
415.156 299.744 415.228 299.169 415.886 298.789 cv
422.925 294.726 li
423.583 294.345 424.579 294.304 425.15 294.633 cv
432.253 298.735 li
432.823 299.064 432.752 299.639 432.094 300.02 cv
425.055 304.083 li
424.397 304.463 423.401 304.504 422.83 304.175 cv
f
433.8 310.509 mo
426.697 306.407 li
426.126 306.078 426.198 305.503 426.857 305.123 cv
433.895 301.059 li
434.553 300.679 435.55 300.638 436.12 300.967 cv
443.224 305.069 li
443.794 305.398 443.723 305.973 443.064 306.353 cv
436.026 310.416 li
435.366 310.797 434.37 310.838 433.8 310.509 cv
f
351.233 250.508 mo
344.129 246.406 li
343.559 246.077 343.63 245.502 344.289 245.122 cv
351.327 241.058 li
351.987 240.678 352.983 240.637 353.553 240.966 cv
360.656 245.068 li
361.227 245.397 361.156 245.972 360.496 246.352 cv
353.458 250.415 li
352.799 250.796 351.803 250.837 351.233 250.508 cv
cp
f
340.099 244.079 mo
332.995 239.979 li
332.425 239.65 332.496 239.074 333.156 238.694 cv
340.194 234.63 li
340.852 234.25 341.849 234.208 342.419 234.537 cv
349.523 238.639 li
350.093 238.968 350.022 239.543 349.363 239.924 cv
342.324 243.988 li
341.665 244.367 340.669 244.409 340.099 244.079 cv
cp
f
328.947 237.641 mo
313.648 228.808 li
313.077 228.479 313.149 227.904 313.808 227.524 cv
320.846 223.459 li
321.504 223.079 322.501 223.038 323.072 223.367 cv
338.37 232.2 li
338.941 232.53 338.869 233.105 338.211 233.486 cv
331.172 237.549 li
330.514 237.929 329.518 237.97 328.947 237.641 cv
cp
f
336.742 229.811 mo
324.326 222.643 li
323.756 222.314 323.827 221.739 324.487 221.358 cv
331.525 217.294 li
332.183 216.914 333.18 216.872 333.75 217.202 cv
346.165 224.37 li
346.736 224.699 346.664 225.275 346.006 225.655 cv
338.967 229.719 li
338.309 230.099 337.313 230.14 336.742 229.811 cv
cp
f
362.203 256.841 mo
355.1 252.74 li
354.529 252.411 354.601 251.836 355.259 251.455 cv
362.298 247.392 li
362.956 247.012 363.952 246.97 364.523 247.299 cv
371.626 251.401 li
372.197 251.73 372.125 252.305 371.467 252.686 cv
364.428 256.749 li
363.77 257.129 362.774 257.171 362.203 256.841 cv
cp
f
373.173 263.175 mo
366.07 259.073 li
365.499 258.744 365.571 258.169 366.23 257.789 cv
373.268 253.726 li
373.926 253.345 374.923 253.304 375.493 253.633 cv
382.597 257.735 li
383.167 258.064 383.095 258.639 382.437 259.019 cv
375.399 263.083 li
374.74 263.463 373.743 263.504 373.173 263.175 cv
cp
f
384.143 269.509 mo
377.039 265.407 li
376.469 265.078 376.541 264.503 377.199 264.122 cv
384.238 260.059 li
384.897 259.679 385.893 259.638 386.463 259.967 cv
393.567 264.068 li
394.137 264.398 394.066 264.973 393.406 265.353 cv
386.368 269.416 li
385.71 269.797 384.713 269.838 384.143 269.509 cv
cp
f
395.113 275.842 mo
388.01 271.741 li
387.44 271.411 387.511 270.836 388.169 270.456 cv
395.208 266.393 li
395.866 266.012 396.863 265.971 397.433 266.3 cv
404.536 270.402 li
405.108 270.731 405.035 271.306 404.377 271.687 cv
397.338 275.75 li
396.68 276.13 395.684 276.171 395.113 275.842 cv
f
406.083 282.176 mo
398.98 278.075 li
398.409 277.745 398.481 277.17 399.14 276.79 cv
406.178 272.726 li
406.837 272.346 407.833 272.305 408.404 272.634 cv
415.507 276.736 li
416.077 277.065 416.006 277.64 415.347 278.02 cv
408.309 282.083 li
407.65 282.464 406.654 282.505 406.083 282.176 cv
f
417.054 288.509 mo
409.95 284.408 li
409.379 284.079 409.451 283.504 410.11 283.123 cv
417.149 279.06 li
417.807 278.68 418.803 278.638 419.373 278.968 cv
426.477 283.069 li
427.047 283.398 426.976 283.973 426.318 284.354 cv
419.279 288.417 li
418.62 288.797 417.624 288.839 417.054 288.509 cv
f
428.024 294.843 mo
420.92 290.742 li
420.35 290.412 420.421 289.837 421.08 289.457 cv
428.118 285.394 li
428.777 285.013 429.774 284.972 430.344 285.301 cv
437.448 289.403 li
438.018 289.732 437.946 290.307 437.287 290.687 cv
430.249 294.751 li
429.59 295.131 428.594 295.172 428.024 294.843 cv
f
438.993 301.177 mo
431.89 297.075 li
431.32 296.746 431.392 296.171 432.05 295.79 cv
439.088 291.727 li
439.747 291.347 440.743 291.306 441.314 291.635 cv
448.417 295.736 li
448.988 296.066 448.916 296.641 448.257 297.021 cv
441.219 301.084 li
440.561 301.465 439.564 301.506 438.993 301.177 cv
f
449.964 307.51 mo
442.861 303.409 li
442.29 303.079 442.362 302.504 443.02 302.124 cv
450.059 298.061 li
450.717 297.68 451.713 297.639 452.283 297.968 cv
459.387 302.07 li
459.958 302.399 459.886 302.974 459.228 303.355 cv
452.189 307.418 li
451.53 307.798 450.534 307.839 449.964 307.51 cv
f
469.466 318.77 mo
453.967 309.822 li
453.397 309.492 453.468 308.917 454.126 308.536 cv
461.165 304.473 li
461.823 304.093 462.82 304.051 463.391 304.381 cv
478.89 313.329 li
479.46 313.658 479.389 314.234 478.73 314.614 cv
471.692 318.678 li
471.033 319.058 470.036 319.099 469.466 318.77 cv
f
490.823 306.44 mo
477.741 298.886 li
477.171 298.557 477.242 297.982 477.902 297.602 cv
484.94 293.538 li
485.599 293.158 486.595 293.116 487.165 293.445 cv
500.247 300.998 li
500.818 301.328 500.746 301.904 500.087 302.283 cv
493.049 306.347 li
492.391 306.728 491.394 306.769 490.823 306.44 cv
f
381.414 255.602 mo
374.311 251.501 li
373.74 251.172 373.812 250.597 374.47 250.216 cv
381.509 246.153 li
382.167 245.773 383.163 245.731 383.734 246.061 cv
390.837 250.161 li
391.407 250.49 391.336 251.066 390.678 251.447 cv
383.639 255.51 li
382.981 255.89 381.985 255.932 381.414 255.602 cv
cp
f
370.171 249.112 mo
363.068 245.01 li
362.497 244.681 362.569 244.106 363.227 243.725 cv
370.266 239.661 li
370.924 239.281 371.92 239.24 372.49 239.57 cv
379.595 243.67 li
380.165 243.999 380.093 244.574 379.435 244.955 cv
372.397 249.019 li
371.738 249.399 370.741 249.441 370.171 249.112 cv
cp
f
358.928 242.62 mo
351.824 238.519 li
351.254 238.19 351.325 237.615 351.985 237.234 cv
359.023 233.17 li
359.681 232.79 360.678 232.748 361.248 233.078 cv
368.352 237.179 li
368.922 237.509 368.85 238.084 368.192 238.464 cv
361.154 242.528 li
360.494 242.907 359.498 242.949 358.928 242.62 cv
cp
f
347.685 236.129 mo
340.581 232.028 li
340.011 231.698 340.082 231.123 340.741 230.742 cv
347.78 226.679 li
348.439 226.299 349.435 226.258 350.005 226.587 cv
357.109 230.688 li
357.679 231.018 357.608 231.593 356.948 231.973 cv
349.91 236.036 li
349.251 236.417 348.255 236.458 347.685 236.129 cv
cp
f
392.384 261.936 mo
385.281 257.834 li
384.71 257.505 384.781 256.93 385.441 256.55 cv
392.479 252.487 li
393.137 252.106 394.134 252.065 394.704 252.394 cv
401.808 256.495 li
402.378 256.824 402.307 257.4 401.648 257.78 cv
394.61 261.844 li
393.95 262.224 392.954 262.265 392.384 261.936 cv
cp
f
403.355 268.27 mo
396.25 264.168 li
395.68 263.839 395.752 263.264 396.41 262.883 cv
403.448 258.82 li
404.108 258.44 405.104 258.399 405.674 258.728 cv
412.778 262.828 li
413.348 263.158 413.277 263.734 412.618 264.114 cv
405.579 268.177 li
404.921 268.558 403.925 268.599 403.355 268.27 cv
cp
f
414.324 274.603 mo
407.221 270.502 li
406.651 270.172 406.722 269.597 407.38 269.217 cv
414.419 265.154 li
415.077 264.773 416.073 264.732 416.644 265.061 cv
423.748 269.162 li
424.319 269.491 424.246 270.067 423.588 270.448 cv
416.55 274.511 li
415.891 274.891 414.895 274.932 414.324 274.603 cv
cp
f
425.294 280.937 mo
418.191 276.835 li
417.62 276.506 417.692 275.931 418.351 275.551 cv
425.389 271.487 li
426.048 271.107 427.044 271.066 427.615 271.395 cv
434.718 275.496 li
435.288 275.825 435.217 276.401 434.558 276.781 cv
427.52 280.844 li
426.862 281.225 425.865 281.266 425.294 280.937 cv
cp
f
436.265 287.27 mo
429.161 283.169 li
428.591 282.84 428.662 282.265 429.321 281.884 cv
436.36 277.821 li
437.018 277.441 438.014 277.399 438.584 277.729 cv
445.688 281.829 li
446.258 282.158 446.187 282.734 445.529 283.115 cv
438.49 287.178 li
437.831 287.558 436.835 287.6 436.265 287.27 cv
cp
f
447.235 293.604 mo
440.131 289.502 li
439.561 289.173 439.632 288.598 440.291 288.218 cv
447.329 284.154 li
447.988 283.774 448.985 283.733 449.555 284.062 cv
456.658 288.163 li
457.229 288.492 457.157 289.068 456.498 289.448 cv
449.46 293.512 li
448.801 293.892 447.805 293.933 447.235 293.604 cv
f
458.205 299.938 mo
451.101 295.836 li
450.531 295.507 450.603 294.932 451.261 294.551 cv
458.299 290.488 li
458.958 290.108 459.954 290.067 460.525 290.396 cv
467.628 294.496 li
468.198 294.826 468.127 295.402 467.469 295.781 cv
460.43 299.845 li
459.772 300.226 458.776 300.267 458.205 299.938 cv
f
469.175 306.271 mo
462.072 302.17 li
461.501 301.84 461.573 301.265 462.231 300.885 cv
469.27 296.822 li
469.928 296.441 470.924 296.4 471.494 296.729 cv
478.599 300.83 li
479.169 301.159 479.097 301.735 478.439 302.115 cv
471.401 306.179 li
470.741 306.559 469.745 306.601 469.175 306.271 cv
cp
f
480.145 312.605 mo
473.041 308.503 li
472.471 308.174 472.542 307.599 473.201 307.219 cv
480.24 303.155 li
480.899 302.775 481.895 302.734 482.465 303.063 cv
489.569 307.164 li
490.139 307.493 490.068 308.069 489.408 308.448 cv
482.37 312.512 li
481.712 312.893 480.715 312.934 480.145 312.605 cv
cp
f
375.638 239.937 mo
368.534 235.835 li
367.964 235.506 368.035 234.931 368.694 234.55 cv
375.733 230.487 li
376.391 230.107 377.387 230.066 377.957 230.395 cv
385.061 234.495 li
385.631 234.825 385.56 235.401 384.902 235.781 cv
377.863 239.844 li
377.204 240.225 376.208 240.266 375.638 239.937 cv
cp
f
364.722 233.634 mo
357.618 229.533 li
357.048 229.203 357.119 228.628 357.779 228.248 cv
364.817 224.185 li
365.475 223.805 366.472 223.763 367.042 224.092 cv
374.146 228.194 li
374.716 228.523 374.645 229.098 373.986 229.479 cv
366.948 233.542 li
366.288 233.922 365.292 233.964 364.722 233.634 cv
cp
f
353.807 227.332 mo
346.703 223.231 li
346.132 222.902 346.204 222.326 346.863 221.947 cv
353.902 217.883 li
354.56 217.502 355.556 217.461 356.126 217.79 cv
363.23 221.892 li
363.8 222.221 363.729 222.796 363.071 223.176 cv
356.031 227.24 li
355.373 227.62 354.377 227.661 353.807 227.332 cv
cp
f
342.891 221.031 mo
335.787 216.929 li
335.217 216.6 335.288 216.025 335.948 215.644 cv
342.986 211.58 li
343.644 211.2 344.641 211.159 345.211 211.489 cv
352.315 215.589 li
352.885 215.919 352.814 216.494 352.155 216.874 cv
345.116 220.938 li
344.457 221.319 343.461 221.36 342.891 221.031 cv
cp
f
354.115 214.55 mo
347.012 210.448 li
346.442 210.119 346.513 209.544 347.171 209.163 cv
349.498 207.821 li
350.156 207.44 351.154 207.399 351.724 207.728 cv
358.827 211.829 li
359.398 212.158 359.326 212.734 358.667 213.115 cv
356.341 214.457 li
355.682 214.838 354.686 214.879 354.115 214.55 cv
cp
f
368.361 222.774 mo
361.257 218.673 li
360.686 218.343 360.758 217.768 361.416 217.388 cv
363.743 216.044 li
364.402 215.664 365.398 215.623 365.968 215.952 cv
373.072 220.054 li
373.642 220.383 373.571 220.958 372.912 221.338 cv
370.585 222.682 li
369.927 223.062 368.931 223.104 368.361 222.774 cv
cp
f
379.231 229.05 mo
372.126 224.948 li
371.556 224.619 371.628 224.044 372.286 223.663 cv
374.614 222.321 li
375.272 221.941 376.268 221.899 376.838 222.228 cv
383.942 226.329 li
384.512 226.658 384.441 227.234 383.782 227.615 cv
381.455 228.957 li
380.797 229.338 379.801 229.379 379.231 229.05 cv
cp
f
390.101 235.325 mo
382.996 231.225 li
382.426 230.895 382.498 230.32 383.156 229.94 cv
385.484 228.596 li
386.142 228.216 387.138 228.175 387.708 228.504 cv
394.812 232.606 li
395.382 232.935 395.311 233.51 394.653 233.89 cv
392.325 235.234 li
391.667 235.614 390.671 235.655 390.101 235.325 cv
cp
f
400.97 241.602 mo
393.866 237.5 li
393.296 237.171 393.368 236.596 394.027 236.215 cv
396.354 234.872 li
397.012 234.491 398.008 234.45 398.578 234.78 cv
405.682 238.881 li
406.252 239.21 406.181 239.785 405.523 240.166 cv
403.196 241.509 li
402.537 241.89 401.541 241.931 400.97 241.602 cv
cp
f
461.656 276.639 mo
454.553 272.537 li
453.983 272.208 454.054 271.633 454.712 271.252 cv
457.039 269.909 li
457.698 269.529 458.694 269.488 459.265 269.817 cv
466.368 273.918 li
466.939 274.247 466.866 274.822 466.208 275.202 cv
463.881 276.546 li
463.223 276.926 462.227 276.968 461.656 276.639 cv
f
472.527 282.914 mo
465.423 278.813 li
464.853 278.484 464.924 277.908 465.582 277.529 cv
467.909 276.185 li
468.568 275.805 469.564 275.763 470.134 276.093 cv
477.239 280.194 li
477.809 280.524 477.737 281.099 477.078 281.479 cv
474.751 282.823 li
474.093 283.202 473.097 283.243 472.527 282.914 cv
cp
f
483.397 289.19 mo
476.293 285.089 li
475.723 284.76 475.794 284.185 476.452 283.804 cv
478.78 282.461 li
479.438 282.08 480.434 282.039 481.004 282.368 cv
488.108 286.47 li
488.679 286.799 488.607 287.374 487.948 287.754 cv
485.621 289.098 li
484.963 289.478 483.967 289.52 483.397 289.19 cv
cp
f
494.267 295.466 mo
487.163 291.365 li
486.592 291.035 486.664 290.46 487.323 290.08 cv
489.65 288.737 li
490.308 288.357 491.304 288.315 491.874 288.645 cv
498.978 292.745 li
499.548 293.074 499.477 293.65 498.819 294.031 cv
496.491 295.373 li
495.833 295.754 494.837 295.795 494.267 295.466 cv
cp
f
386.608 246.27 mo
379.504 242.169 li
378.934 241.839 379.005 241.264 379.664 240.884 cv
386.702 236.821 li
387.361 236.44 388.358 236.399 388.928 236.728 cv
396.031 240.829 li
396.602 241.158 396.53 241.734 395.871 242.115 cv
388.833 246.178 li
388.174 246.558 387.178 246.6 386.608 246.27 cv
cp
f
397.577 252.604 mo
390.474 248.502 li
389.904 248.173 389.976 247.598 390.634 247.218 cv
397.672 243.154 li
398.331 242.774 399.327 242.733 399.898 243.062 cv
407.001 247.163 li
407.572 247.492 407.5 248.068 406.841 248.448 cv
399.803 252.511 li
399.145 252.892 398.148 252.933 397.577 252.604 cv
cp
f
408.548 258.938 mo
401.445 254.836 li
400.874 254.507 400.946 253.932 401.604 253.551 cv
408.643 249.488 li
409.301 249.108 410.297 249.066 410.867 249.396 cv
417.971 253.496 li
418.542 253.826 418.47 254.402 417.812 254.781 cv
410.773 258.845 li
410.115 259.225 409.118 259.267 408.548 258.938 cv
cp
f
419.518 265.271 mo
412.414 261.169 li
411.844 260.84 411.915 260.265 412.574 259.885 cv
419.613 255.822 li
420.272 255.441 421.268 255.4 421.838 255.729 cv
428.942 259.83 li
429.512 260.159 429.441 260.735 428.781 261.115 cv
421.743 265.179 li
421.084 265.559 420.088 265.6 419.518 265.271 cv
cp
f
430.489 271.605 mo
423.385 267.503 li
422.815 267.174 422.886 266.599 423.544 266.218 cv
430.583 262.155 li
431.241 261.775 432.238 261.734 432.808 262.063 cv
439.911 266.164 li
440.482 266.493 440.41 267.069 439.752 267.448 cv
432.713 271.512 li
432.055 271.893 431.059 271.934 430.489 271.605 cv
cp
f
441.458 277.938 mo
434.355 273.837 li
433.784 273.507 433.856 272.932 434.515 272.552 cv
441.553 268.489 li
442.211 268.109 443.208 268.067 443.779 268.396 cv
450.882 272.497 li
451.452 272.826 451.381 273.402 450.722 273.782 cv
443.684 277.846 li
443.025 278.226 442.029 278.268 441.458 277.938 cv
cp
f
452.428 284.272 mo
445.324 280.17 li
444.754 279.841 444.826 279.266 445.485 278.886 cv
452.523 274.822 li
453.182 274.442 454.178 274.401 454.748 274.73 cv
461.852 278.831 li
462.422 279.16 462.351 279.736 461.693 280.115 cv
454.654 284.18 li
453.995 284.56 452.999 284.601 452.428 284.272 cv
f
463.399 290.606 mo
456.295 286.504 li
455.725 286.175 455.796 285.6 456.454 285.219 cv
463.493 281.155 li
464.152 280.776 465.148 280.734 465.718 281.064 cv
472.822 285.164 li
473.393 285.494 473.321 286.07 472.662 286.449 cv
465.623 290.513 li
464.965 290.893 463.969 290.935 463.399 290.606 cv
f
474.368 296.939 mo
467.265 292.837 li
466.695 292.508 466.766 291.933 467.425 291.553 cv
474.463 287.489 li
475.122 287.109 476.118 287.068 476.689 287.397 cv
483.792 291.498 li
484.363 291.827 484.291 292.403 483.632 292.783 cv
476.594 296.847 li
475.935 297.227 474.939 297.268 474.368 296.939 cv
f
323.89 247.052 mo
302.969 234.973 li
302.399 234.644 302.47 234.069 303.128 233.689 cv
310.167 229.625 li
310.825 229.244 311.822 229.203 312.393 229.532 cv
333.314 241.612 li
333.884 241.941 333.812 242.516 333.154 242.896 cv
326.115 246.96 li
325.456 247.34 324.46 247.381 323.89 247.052 cv
cp
f
458.66 324.861 mo
437.74 312.783 li
437.169 312.454 437.241 311.879 437.9 311.498 cv
444.938 307.435 li
445.596 307.055 446.593 307.013 447.163 307.343 cv
468.084 319.421 li
468.655 319.75 468.582 320.326 467.924 320.706 cv
460.886 324.77 li
460.227 325.15 459.231 325.192 458.66 324.861 cv
f
414.789 313.523 mo
407.686 309.422 li
407.116 309.093 407.187 308.518 407.845 308.137 cv
416.23 303.296 li
416.889 302.916 417.885 302.874 418.455 303.204 cv
425.559 307.305 li
426.129 307.635 426.058 308.21 425.4 308.59 cv
417.015 313.431 li
416.356 313.811 415.36 313.853 414.789 313.523 cv
f
335.124 267.529 mo
323.763 260.969 li
323.193 260.64 323.265 260.065 323.923 259.685 cv
332.308 254.844 li
332.966 254.463 333.963 254.422 334.533 254.751 cv
345.894 261.311 li
346.464 261.64 346.393 262.215 345.734 262.595 cv
337.349 267.436 li
336.691 267.817 335.695 267.858 335.124 267.529 cv
cp
f
404.219 307.42 mo
392.859 300.861 li
392.288 300.532 392.36 299.957 393.019 299.576 cv
401.404 294.736 li
402.062 294.356 403.058 294.315 403.628 294.644 cv
414.989 301.202 li
415.56 301.532 415.488 302.108 414.829 302.488 cv
406.445 307.328 li
405.786 307.708 404.789 307.75 404.219 307.42 cv
f
350.951 276.666 mo
339.591 270.108 li
339.021 269.778 339.092 269.202 339.75 268.823 cv
348.135 263.982 li
348.794 263.602 349.79 263.56 350.361 263.89 cv
361.721 270.448 li
362.291 270.778 362.22 271.353 361.562 271.734 cv
353.177 276.574 li
352.518 276.954 351.522 276.995 350.951 276.666 cv
cp
f
350.438 263.934 mo
399.83 292.45 li
400.444 292.805 400.444 293.378 399.83 293.733 cv
391.281 298.669 li
390.667 299.023 389.674 299.023 389.061 298.669 cv
339.668 270.152 li
350.438 263.934 li
f
445.449 325.007 mo
453.362 329.576 li
453.829 329.845 453.771 330.317 453.231 330.628 cv
449.801 332.609 li
449.261 332.92 448.445 332.954 447.977 332.684 cv
440.064 328.116 li
439.597 327.846 439.655 327.374 440.195 327.063 cv
443.625 325.082 li
444.165 324.771 444.982 324.737 445.449 325.007 cv
f
434.388 318.62 mo
442.301 323.189 li
442.768 323.459 442.709 323.93 442.169 324.242 cv
438.74 326.222 li
438.199 326.534 437.383 326.568 436.915 326.298 cv
429.003 321.73 li
428.535 321.459 428.594 320.988 429.134 320.676 cv
432.564 318.697 li
433.104 318.384 433.92 318.351 434.388 318.62 cv
f
423.418 312.287 mo
431.33 316.856 li
431.798 317.125 431.739 317.597 431.199 317.908 cv
427.77 319.889 li
427.23 320.2 426.413 320.235 425.945 319.964 cv
418.032 315.396 li
417.566 315.126 417.624 314.655 418.164 314.343 cv
421.594 312.363 li
422.134 312.051 422.95 312.017 423.418 312.287 cv
f
440.446 315.123 mo
448.359 319.692 li
448.826 319.961 448.768 320.433 448.228 320.744 cv
444.798 322.725 li
444.258 323.036 443.442 323.071 442.974 322.8 cv
435.061 318.232 li
434.594 317.962 434.652 317.49 435.192 317.179 cv
438.622 315.198 li
439.161 314.887 439.979 314.853 440.446 315.123 cv
f
483.78 191.537 mo
424.689 157.422 li
425.448 153.58 li
484.539 187.697 li
483.78 191.537 li
cp
.147219 .0154116 0 0 cmyk
f
462.615 198.02 mo
421.367 174.205 li
422.128 170.364 li
463.376 194.178 li
462.615 198.02 li
cp
f
458.712 186.415 mo
423.029 165.814 li
423.788 161.972 li
459.473 182.574 li
458.712 186.415 li
cp
0 0 0 0 cmyk
f
482.118 199.929 mo
464.277 189.628 li
465.036 185.786 li
482.879 196.088 li
482.118 199.929 li
cp
0 .912535 0 0 cmyk
f
418.396 123.906 mo
400.554 113.605 li
401.314 109.764 li
419.156 120.065 li
418.396 123.906 li
cp
.147219 .0154116 0 0 cmyk
f
416.46 132.833 mo
398.617 122.532 li
399.377 118.691 li
417.22 128.992 li
416.46 132.833 li
cp
0 0 0 0 cmyk
f
504.032 256.661 mo
486.19 246.361 li
486.95 242.519 li
504.792 252.821 li
504.032 256.661 li
cp
.147219 .0154116 0 0 cmyk
f
412.588 150.689 mo
394.745 140.387 li
395.505 136.546 li
413.348 146.847 li
412.588 150.689 li
cp
f
451.139 153.454 mo
450.571 154.695 449.134 155.137 447.931 154.443 cv
446.728 153.747 446.213 152.179 446.781 150.939 cv
447.351 149.698 448.786 149.256 449.99 149.95 cv
451.193 150.646 451.707 152.214 451.139 153.454 cv
cp
0 .912535 0 0 cmyk
f
458.823 157.891 mo
458.255 159.131 456.819 159.573 455.615 158.879 cv
454.412 158.185 453.899 156.616 454.467 155.376 cv
455.035 154.136 456.472 153.694 457.675 154.388 cv
458.878 155.082 459.393 156.651 458.823 157.891 cv
cp
0 0 0 0 cmyk
f
466.509 162.328 mo
465.941 163.569 464.504 164.011 463.301 163.317 cv
462.098 162.621 461.583 161.053 462.152 159.813 cv
462.721 158.573 464.156 158.13 465.36 158.824 cv
466.563 159.52 467.077 161.088 466.509 162.328 cv
cp
.147219 .0154116 0 0 cmyk
f
474.194 166.766 mo
473.625 168.006 472.189 168.448 470.986 167.753 cv
469.782 167.059 469.269 165.49 469.837 164.25 cv
470.406 163.01 471.842 162.568 473.045 163.262 cv
474.248 163.956 474.763 165.525 474.194 166.766 cv
cp
0 .912535 0 0 cmyk
f
344.353 146.781 mo
305.869 124.571 li
305.109 124.131 304.344 124.115 303.685 124.41 cv
303.693 124.386 li
299.105 126.542 li
299.105 126.542 300.827 127.144 301.838 127.5 cv
296.285 155.516 li
295.833 157.795 296.853 160.443 298.564 161.43 cv
335.346 182.659 li
334.695 185.947 li
339.327 183.776 li
339.306 183.769 li
340.093 183.38 340.718 182.528 340.961 181.301 cv
346.631 152.696 li
347.083 150.416 346.063 147.769 344.353 146.781 cv
cp
.139773 1 .00201419 0 cmyk
f
332.376 185.831 mo
293.893 163.62 li
292.183 162.633 291.163 159.986 291.615 157.706 cv
297.285 129.101 li
297.737 126.822 299.49 125.774 301.199 126.761 cv
339.683 148.972 li
341.393 149.959 342.412 152.607 341.961 154.886 cv
336.29 183.491 li
335.838 185.771 334.086 186.819 332.376 185.831 cv
cp
0 .912535 0 0 cmyk
f
340.558 148.628 mo
302.074 126.417 li
301.178 125.9 300.275 125.953 299.549 126.438 cv
300.073 126.351 300.636 126.436 301.199 126.761 cv
339.683 148.972 li
341.393 149.959 342.412 152.607 341.961 154.886 cv
336.29 183.491 li
336.075 184.576 335.561 185.37 334.902 185.811 cv
335.97 185.632 336.863 184.677 337.165 183.148 cv
342.836 154.542 li
343.287 152.263 342.268 149.615 340.558 148.628 cv
cp
0 0 0 0 cmyk
f
310.269 153.763 mo
309.941 155.418 308.512 156.089 307.078 155.262 cv
305.645 154.434 304.748 152.421 305.076 150.766 cv
305.404 149.111 306.832 148.44 308.267 149.267 cv
309.7 150.095 310.597 152.108 310.269 153.763 cv
cp
f
318.135 158.303 mo
317.807 159.958 316.378 160.629 314.945 159.801 cv
313.51 158.974 312.614 156.961 312.942 155.306 cv
313.27 153.651 314.698 152.98 316.132 153.807 cv
317.567 154.635 318.463 156.648 318.135 158.303 cv
cp
f
326.001 162.843 mo
325.673 164.498 324.244 165.169 322.81 164.341 cv
321.376 163.514 320.48 161.501 320.808 159.846 cv
321.136 158.191 322.565 157.52 323.998 158.347 cv
325.433 159.175 326.329 161.188 326.001 162.843 cv
cp
f
327.076 110.814 mo
288.593 88.6028 li
287.832 88.1633 287.068 88.1467 286.408 88.4436 cv
286.416 88.4182 li
281.828 90.5745 li
281.828 90.5745 283.551 91.177 284.562 91.5325 cv
279.009 119.549 li
278.557 121.828 279.576 124.476 281.287 125.463 cv
318.07 146.693 li
317.418 149.98 li
322.051 147.809 li
322.03 147.801 li
322.817 147.413 323.442 146.56 323.685 145.334 cv
329.355 116.729 li
329.807 114.448 328.786 111.801 327.076 110.814 cv
cp
.657221 .328313 0 0 cmyk
f
315.1 149.865 mo
276.616 127.654 li
274.906 126.666 273.887 124.019 274.338 121.739 cv
280.009 93.1331 li
280.46 90.8538 282.213 89.8069 283.923 90.7932 cv
322.406 113.004 li
324.116 113.991 325.136 116.64 324.685 118.919 cv
319.014 147.525 li
318.562 149.804 316.81 150.852 315.1 149.865 cv
cp
.147219 .0154116 0 0 cmyk
f
323.281 112.66 mo
284.798 90.4495 li
283.902 89.9319 282.998 89.9856 282.273 90.4709 cv
282.796 90.3831 283.36 90.468 283.923 90.7932 cv
322.406 113.004 li
324.116 113.991 325.136 116.64 324.685 118.919 cv
319.014 147.525 li
318.799 148.609 318.284 149.403 317.625 149.843 cv
318.694 149.665 319.586 148.709 319.889 147.181 cv
325.56 118.575 li
326.011 116.296 324.991 113.648 323.281 112.66 cv
cp
0 0 0 0 cmyk
f
292.992 117.796 mo
292.664 119.451 291.236 120.122 289.802 119.294 cv
288.368 118.466 287.472 116.453 287.8 114.798 cv
288.128 113.143 289.556 112.472 290.99 113.3 cv
292.424 114.127 293.321 116.14 292.992 117.796 cv
cp
f
300.859 122.335 mo
300.531 123.99 299.102 124.662 297.668 123.834 cv
296.234 123.006 295.337 120.993 295.665 119.338 cv
295.993 117.683 297.422 117.012 298.857 117.84 cv
300.29 118.667 301.187 120.68 300.859 122.335 cv
cp
f
308.725 126.875 mo
308.397 128.531 306.968 129.201 305.534 128.374 cv
304.1 127.546 303.203 125.533 303.531 123.878 cv
303.86 122.223 305.288 121.552 306.722 122.38 cv
308.156 123.207 309.053 125.22 308.725 126.875 cv
cp
f
277.162 337.634 mo
277.162 337.634 273.413 335.743 271.111 338.559 cv
268.808 341.374 265.516 348.021 265.414 352.512 cv
265.312 357.004 268.968 356.7 271.142 355.638 cv
273.315 354.574 279.663 345.365 280.048 343.561 cv
280.433 341.756 279.595 339.316 278.984 338.838 cv
278.373 338.361 277.162 337.634 277.162 337.634 cv
cp
0 .912535 0 0 cmyk
f
277.981 336.731 mo
278.155 340.615 li
278.191 341.442 277.776 342.229 277.057 342.636 cv
276.402 343.008 275.45 343.292 274.164 343.086 cv
271.34 342.632 271.087 341.824 270.886 337.941 cv
270.684 334.058 277.981 336.731 277.981 336.731 cv
cp
.147219 .0154116 0 0 cmyk
f
263.438 330.164 mo
263.438 330.164 259.688 328.274 257.385 331.089 cv
255.082 333.906 251.79 340.552 251.689 345.043 cv
251.587 349.534 255.242 349.231 257.416 348.168 cv
259.589 347.106 265.939 337.896 266.323 336.091 cv
266.707 334.286 265.869 331.846 265.259 331.369 cv
264.648 330.892 263.438 330.164 263.438 330.164 cv
cp
0 .912535 0 0 cmyk
f
264.255 329.261 mo
264.429 333.146 li
264.466 333.972 264.05 334.759 263.331 335.167 cv
262.676 335.538 261.725 335.823 260.439 335.616 cv
257.615 335.162 257.363 334.356 257.16 330.472 cv
256.958 326.588 264.255 329.261 264.255 329.261 cv
cp
.147219 .0154116 0 0 cmyk
f
297.713 257.942 mo
296.603 239.885 278.157 260.598 278.157 260.598 cv
265.533 272.972 li
254.165 285.46 li
251.945 287.9 250.912 291.193 251.341 294.462 cv
255.94 329.48 li
256.167 331.209 257.647 332.485 259.391 332.471 cv
259.884 332.467 260.448 332.422 261.095 332.322 cv
265.197 331.682 264.895 327.781 264.895 327.781 cv
264.054 295.031 li
287.928 280.639 li
287.928 280.639 298.823 275.998 297.713 257.942 cv
cp
1 .866484 .240818 .0951247 cmyk
f
311.438 264.822 mo
310.328 246.765 291.883 267.478 291.883 267.478 cv
279.258 279.852 li
267.89 292.34 li
265.67 294.78 264.637 298.073 265.067 301.342 cv
269.665 336.36 li
269.893 338.089 271.372 339.365 273.116 339.35 cv
273.609 339.346 274.173 339.302 274.82 339.201 cv
278.922 338.562 278.619 334.661 278.619 334.661 cv
277.803 302.853 li
301.653 287.519 li
301.653 287.519 312.548 282.878 311.438 264.822 cv
cp
f
300.526 206.859 mo
314.51 212.656 314.23 220.922 314.23 220.922 cv
314.23 220.922 311.49 251.228 312.425 271.467 cv
312.816 279.928 267.472 280.573 274.235 258.001 cv
282.208 231.386 279.219 209.84 282.951 206.59 cv
286.684 203.341 296.908 205.359 300.526 206.859 cv
cp
0 .912535 0 0 cmyk
f
305.025 214.188 mo
304.293 217.028 300.573 218.524 296.716 217.53 cv
292.859 216.536 290.324 213.429 291.056 210.59 cv
291.787 207.75 295.507 206.254 299.365 207.248 cv
303.222 208.241 305.756 211.349 305.025 214.188 cv
cp
0 .286015 .250584 0 cmyk
f
296.976 207.608 mo
296.02 207.608 295.105 207.773 294.287 208.102 cv
292.92 208.652 292.003 209.594 291.703 210.757 cv
291.404 211.919 291.752 213.188 292.683 214.329 cv
293.663 215.531 295.155 216.437 296.883 216.882 cv
298.613 217.328 300.357 217.255 301.793 216.676 cv
303.16 216.126 304.077 215.184 304.377 214.021 cv
304.677 212.859 304.328 211.59 303.398 210.448 cv
302.417 209.247 300.926 208.341 299.198 207.896 cv
298.451 207.703 297.701 207.608 296.976 207.608 cv
cp
299.103 218.506 mo
298.265 218.506 297.404 218.397 296.549 218.177 cv
294.547 217.661 292.806 216.595 291.647 215.174 cv
290.441 213.695 290 212.007 290.408 210.423 cv
290.817 208.839 292.017 207.573 293.788 206.862 cv
295.49 206.178 297.528 206.086 299.531 206.601 cv
301.533 207.116 303.275 208.183 304.434 209.604 cv
305.64 211.083 306.08 212.771 305.672 214.355 cv
305.264 215.939 304.064 217.204 302.292 217.916 cv
301.317 218.309 300.231 218.506 299.103 218.506 cv
cp
0 0 0 0 cmyk
f
294.919 206.228 mo
294.919 206.228 295.039 206.788 294.797 211.22 cv
294.722 212.613 299.6 213.914 300.861 212.654 cv
302.121 211.393 301.616 210.081 301.919 205.34 cv
302.222 200.599 294.919 206.228 294.919 206.228 cv
cp
0 .286015 .250584 0 cmyk
f
301.919 205.34 mo
301.919 205.34 300.718 209.736 294.797 211.422 cv
294.887 207.427 li
301.919 205.34 li
cp
.0520027 .456916 .352453 0 cmyk
f
305.671 194.171 mo
307.159 199.926 303.699 205.799 297.944 207.286 cv
292.188 208.775 286.316 205.316 284.827 199.56 cv
283.34 193.804 286.799 187.932 292.555 186.444 cv
298.311 184.955 304.183 188.415 305.671 194.171 cv
cp
0 .286015 .250584 0 cmyk
f
297.722 197.26 mo
297.722 197.26 291.795 199.799 287.692 199.828 cv
283.587 199.858 284.491 196.42 284.491 196.42 cv
296.673 194.66 li
297.722 197.26 li
cp
.0520027 .456916 .352453 0 cmyk
f
286.468 197.929 mo
286.468 197.929 291.63 195.738 296.159 196.652 cv
297.224 196.866 298.211 197.436 298.897 198.278 cv
299.12 198.553 299.404 198.804 299.725 198.877 cv
300.528 199.059 301.843 195.727 303.404 195.651 cv
304.965 195.575 306.007 196.68 304.727 198.73 cv
303.447 200.779 303.879 203.072 304.468 203.401 cv
305.057 203.73 312.348 198.642 306.837 187.727 cv
301.327 176.811 286.287 182.993 284.11 185.206 cv
284.11 185.206 281.817 187.204 279.951 185.426 cv
279.951 185.426 277.861 201.086 286.468 197.929 cv
cp
.147219 .0154116 0 0 cmyk
f
306.385 243.064 mo
306.385 251.252 li
306.385 252.191 305.99 253.085 305.296 253.718 cv
288.474 269.054 li
290.385 271.978 li
313.562 256.781 li
314.599 256.029 315.267 254.871 315.401 253.598 cv
316.986 238.402 li
306.385 243.064 li
cp
0 .286015 .250584 0 cmyk
f
313.046 216.827 mo
313.046 216.827 318.149 224.503 320.05 244.705 cv
320.05 244.705 311.332 247.525 306.385 245.924 cv
301.437 244.323 313.046 216.827 313.046 216.827 cv
cp
0 .912535 0 0 cmyk
f
305.453 226.532 mo
305.453 226.532 303.455 237.225 303.342 242.25 cv
303.311 243.632 304.154 244.879 305.453 245.349 cv
305.453 226.532 li
cp
.139773 1 .00201419 0 cmyk
f
301.088 279.702 mo
297.37 279.211 li
273.369 265.355 li
272.6 264.91 271.256 264.966 270.367 265.479 cv
253.361 275.294 li
251.113 274.997 li
251.113 277.236 li
251.115 277.236 li
251.1 277.531 251.268 277.815 251.631 278.024 cv
278.831 293.728 li
279.601 294.172 280.945 294.116 281.833 293.604 cv
300.354 282.914 li
300.854 282.625 301.103 282.253 301.088 281.905 cv
301.088 279.702 li
cp
.657221 .328313 0 0 cmyk
f
283.055 270.947 mo
281.35 269.962 li
262.603 269.962 li
253.361 275.294 li
251.113 274.997 li
251.113 277.236 li
251.115 277.236 li
251.1 277.531 251.268 277.815 251.631 278.024 cv
278.831 293.728 li
279.238 293.963 279.805 294.057 280.38 294.018 cv
283.055 270.947 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
252.111 275.129 mo
251.113 274.997 li
251.113 277.236 li
251.115 277.236 li
251.1 277.531 251.268 277.815 251.631 278.024 cv
252.111 278.301 li
252.111 275.129 li
cp
.657221 .328313 0 0 cmyk
f
279.105 293.855 mo
279.834 294.132 280.877 294.072 281.656 293.697 cv
281.656 289.889 li
279.105 289.889 li
279.105 293.855 li
cp
f
278.831 291.491 mo
251.631 275.787 li
250.862 275.343 250.958 274.567 251.847 274.054 cv
270.367 263.365 li
271.256 262.852 272.6 262.796 273.369 263.24 cv
300.57 278.944 li
301.339 279.388 301.242 280.164 300.354 280.677 cv
281.833 291.366 li
280.945 291.88 279.601 291.936 278.831 291.491 cv
cp
0 0 0 0 cmyk
f
278.371 289.111 mo
255.754 276.053 li
255.115 275.684 255.195 275.038 255.934 274.613 cv
265.859 269.031 li
266.597 268.605 267.715 268.558 268.355 268.928 cv
290.971 281.986 li
291.611 282.355 291.531 283 290.792 283.426 cv
280.867 289.008 li
280.128 289.434 279.011 289.481 278.371 289.111 cv
cp
.147219 .0154116 0 0 cmyk
f
271.419 262.849 mo
271.138 264.726 li
270.898 266.324 270.94 267.953 271.261 269.538 cv
271.595 271.192 li
271.784 272.124 272.523 272.848 273.459 273.019 cv
274.19 273.152 274.881 272.638 274.963 271.9 cv
275.412 267.887 li
275.412 267.887 276.439 269.233 276.935 269.233 cv
277.43 269.233 276.38 265.214 275.259 262.94 cv
274.138 260.666 271.419 262.849 271.419 262.849 cv
cp
0 .286015 .250584 0 cmyk
f
280.64 233.021 mo
277.721 238.797 li
277.031 240.163 276.624 241.655 276.527 243.182 cv
275.259 262.94 li
271.419 262.849 li
269.677 240.66 li
269.623 239.975 269.656 239.286 269.776 238.61 cv
271.767 227.358 li
280.64 233.021 li
cp
f
277.909 292.999 mo
275.629 290.023 li
251.645 276.136 li
250.876 275.691 250.254 274.498 250.255 273.473 cv
250.276 253.836 li
248.897 252.036 li
250.193 251.285 li
250.194 251.287 li
250.443 251.128 250.772 251.132 251.134 251.342 cv
278.316 267.078 li
279.084 267.524 279.706 268.717 279.705 269.742 cv
279.683 291.127 li
279.682 291.704 279.484 292.106 279.174 292.267 cv
277.909 292.999 li
cp
1 .866484 .240818 .0951247 cmyk
f
261.323 281.74 mo
259.619 280.753 li
250.266 264.506 li
250.276 253.836 li
248.897 252.036 li
250.193 251.285 li
250.194 251.287 li
250.443 251.128 250.772 251.132 251.134 251.342 cv
278.316 267.078 li
278.722 267.314 279.086 267.759 279.34 268.277 cv
261.323 281.74 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
249.509 252.835 mo
248.897 252.036 li
250.193 251.285 li
250.194 251.287 li
250.443 251.128 250.772 251.132 251.134 251.342 cv
251.614 251.619 li
249.509 252.835 li
cp
.657221 .328313 0 0 cmyk
f
278.563 267.253 mo
279.166 267.746 279.634 268.681 279.698 269.542 cv
277.041 271.075 li
275.769 268.865 li
278.563 267.253 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
277.021 267.828 mo
249.84 252.091 li
249.072 251.647 248.447 252.117 248.446 253.143 cv
248.422 274.528 li
248.421 275.554 249.043 276.746 249.813 277.192 cv
276.993 292.928 li
277.762 293.373 278.387 292.903 278.388 291.877 cv
278.41 270.492 li
278.412 269.466 277.789 268.274 277.021 267.828 cv
cp
.657221 .328313 0 0 cmyk
f
290.385 271.978 mo
289.949 272.88 li
289.448 273.919 288.66 274.792 287.678 275.398 cv
284.978 277.063 li
284.138 277.58 283.074 277.622 282.222 277.126 cv
282.13 277.071 li
281.272 276.533 281.195 275.301 281.901 274.575 cv
284.722 271.675 li
284.722 271.675 283.137 272.889 282.693 272.4 cv
282.366 272.041 284.23 270.292 285.66 270.236 cv
287.09 270.178 288.474 269.054 288.474 269.054 cv
290.385 271.978 li
cp
0 .286015 .250584 0 cmyk
f
283.232 206.548 mo
283.232 206.548 272.889 217.802 268.716 228.126 cv
268.716 228.126 272.253 234.498 280.91 236.998 cv
289.568 239.499 283.232 206.548 283.232 206.548 cv
cp
0 .912535 0 0 cmyk
f
278.963 236.331 mo
280.64 220.137 li
276.689 235.309 li
277.393 235.676 278.156 236.018 278.963 236.331 cv
cp
.139773 1 .00201419 0 cmyk
f
290.979 204.277 mo
288.199 203.514 li
288.199 203.514 289.526 205.601 291.463 206.133 cv
293.4 206.665 293.701 205.026 293.701 205.026 cv
290.979 204.277 li
cp
0 0 0 0 cmyk
f
305.823 199.828 mo
305.823 200.683 305.13 201.376 304.276 201.376 cv
303.42 201.376 302.728 200.683 302.728 199.828 cv
302.728 198.973 303.42 198.281 304.276 198.281 cv
305.13 198.281 305.823 198.973 305.823 199.828 cv
cp
f
347.436 327.82 mo
301.088 301.061 li
299.739 300.282 299.908 298.921 301.466 298.022 cv
329.436 281.874 li
330.993 280.975 333.35 280.877 334.699 281.656 cv
381.047 308.414 li
382.396 309.194 382.227 310.554 380.669 311.453 cv
352.7 327.602 li
351.142 328.501 348.785 328.599 347.436 327.82 cv
f
190.441 372.098 mo
186.551 372.098 182.761 371.433 179.595 370.045 cv
171.176 366.354 170.355 358.947 177.762 353.501 cv
182.383 350.104 189.115 348.273 195.57 348.273 cv
199.461 348.273 203.25 348.938 206.416 350.326 cv
214.835 354.018 215.656 361.424 208.25 366.869 cv
203.629 370.267 196.896 372.098 190.441 372.098 cv
.477638 .319829 .131411 0 cmyk
f
214.948 347.626 mo
214.231 341.154 li
213.009 341.289 li
211.702 339.522 209.679 337.946 206.906 336.73 cv
197.327 332.53 182.733 334.148 174.307 340.343 cv
171.867 342.136 170.238 344.117 169.35 346.128 cv
168.129 346.263 li
168.843 352.7 li
168.845 352.7 li
169.208 356.119 171.835 359.291 176.64 361.398 cv
186.219 365.598 200.814 363.981 209.24 357.785 cv
213.453 354.688 215.326 351.032 214.948 347.626 cv
cp
0 .912535 0 0 cmyk
f
208.523 351.313 mo
200.097 357.508 185.501 359.125 175.923 354.925 cv
166.345 350.726 165.41 342.299 173.837 336.104 cv
182.263 329.909 196.858 328.292 206.437 332.491 cv
216.015 336.692 216.948 345.118 208.523 351.313 cv
cp
f
208.523 351.313 mo
200.097 357.508 185.501 359.125 175.923 354.925 cv
171.332 352.912 168.751 349.926 168.21 346.682 cv
168.408 350.25 171.03 353.585 176.017 355.773 cv
185.595 359.973 200.191 358.355 208.616 352.159 cv
213.004 348.934 214.83 345.106 214.243 341.581 cv
214.426 344.865 212.561 348.344 208.523 351.313 cv
cp
0 0 0 0 cmyk
f
180.558 349.346 mo
180.145 349.165 179.891 348.885 179.856 348.564 cv
178.918 339.891 li
178.846 339.23 179.718 338.59 180.864 338.464 cv
182.01 338.338 182.994 338.773 183.068 339.435 cv
183.845 346.627 li
204.429 341.759 li
205.536 341.497 206.683 341.789 206.992 342.409 cv
207.302 343.031 206.656 343.746 205.551 344.007 cv
182.491 349.46 li
181.886 349.604 181.239 349.586 180.726 349.411 cv
180.558 349.346 li
cp
f
295.598 407.507 mo
280.268 398.656 li
295.598 389.806 li
310.928 398.656 li
295.598 407.507 li
.477638 .319829 .131411 0 cmyk
f
310.928 387.419 mo
295.598 396.27 li
295.598 378.569 li
310.928 369.718 li
310.928 387.419 li
cp
1 .866484 .240818 .0951247 cmyk
f
295.598 378.569 mo
280.268 369.718 li
295.598 360.867 li
310.928 369.718 li
295.598 378.569 li
cp
.147219 .0154116 0 0 cmyk
f
295.598 396.27 mo
280.268 387.419 li
280.268 369.718 li
295.598 378.569 li
295.598 396.27 li
cp
.657221 .328313 0 0 cmyk
f
290.076 386.707 mo
285.789 384.232 li
285.789 379.281 li
290.076 381.756 li
290.076 386.707 li
cp
0 0 0 0 cmyk
f
402.433 351.636 mo
400.959 351.636 399.485 351.255 398.164 350.492 cv
355.608 325.923 li
368.59 318.427 li
401.723 337.599 li
401.725 337.598 li
401.875 337.698 402.053 337.751 402.253 337.751 cv
402.498 337.751 402.775 337.671 403.069 337.502 cv
429.723 322.145 li
436.915 326.298 li
437.127 326.42 437.411 326.48 437.708 326.48 cv
438.066 326.48 438.444 326.393 438.74 326.222 cv
442.169 324.242 li
442.709 323.93 442.768 323.459 442.301 323.189 cv
435.114 319.039 li
435.787 318.651 li
442.974 322.8 li
443.183 322.921 443.462 322.981 443.754 322.983 cv
443.754 325.016 li
443.71 325.036 443.667 325.058 443.625 325.082 cv
440.195 327.063 li
439.655 327.374 439.597 327.846 440.064 328.116 cv
442.763 329.674 li
406.7 350.492 li
405.38 351.255 403.906 351.636 402.433 351.636 cv
443.754 317.033 mo
441.177 315.546 li
441.851 315.157 li
443.754 316.256 li
443.754 317.033 li
.570672 .350164 .106935 0 cmyk
f
443.754 316.256 mo
441.851 315.157 li
443.754 314.061 li
443.754 316.256 li
.842374 .602045 .0982681 .0030518 cmyk
f
442.763 329.674 mo
440.064 328.116 li
439.597 327.846 439.655 327.374 440.195 327.063 cv
443.625 325.082 li
443.667 325.058 443.71 325.036 443.754 325.016 cv
443.754 329.102 li
442.763 329.674 li
f
437.708 326.48 mo
437.411 326.48 437.127 326.42 436.915 326.298 cv
429.723 322.145 li
435.114 319.039 li
442.301 323.189 li
442.768 323.459 442.709 323.93 442.169 324.242 cv
438.74 326.222 li
438.444 326.393 438.066 326.48 437.708 326.48 cv
f
443.754 322.983 mo
443.462 322.981 443.183 322.921 442.974 322.8 cv
435.787 318.651 li
441.177 315.546 li
443.754 317.033 li
443.754 322.983 li
f
355.608 325.923 mo
331.316 311.898 li
329.814 311.03 329.814 308.861 331.317 307.994 cv
340.95 302.433 li
368.59 318.427 li
355.608 325.923 li
.47599 .317418 .134188 0 cmyk
f
396.236 244.541 mo
396.24 240.297 393.25 238.568 389.573 240.687 cv
327.052 276.708 li
326.04 277.291 325.22 278.709 325.219 279.876 cv
325.218 281.043 326.037 281.517 327.048 280.935 cv
389.569 244.913 li
391.228 243.957 392.575 244.738 392.573 246.652 cv
392.568 253.644 li
393.781 253.569 394.998 253.567 396.228 253.588 cv
396.236 244.541 li
cp
0 .912535 0 0 cmyk
f
327.025 293.507 mo
389.545 270.725 li
393.224 268.606 396.219 263.428 396.223 259.184 cv
396.228 253.588 li
394.998 253.567 393.781 253.569 392.568 253.644 cv
392.561 261.293 li
392.559 263.208 391.208 265.543 389.549 266.498 cv
327.029 289.281 li
326.018 289.864 325.197 291.282 325.196 292.449 cv
325.195 293.615 326.014 294.09 327.025 293.507 cv
cp
.139773 1 .00201419 0 cmyk
f
325.669 293.591 mo
401.723 337.599 li
466.113 299.198 li
471.222 291.573 li
470.692 294.276 li
469.319 287.203 li
349.793 291.762 li
328.734 290.405 li
325.669 293.591 li
f
328.192 280.311 mo
328.171 289.672 li
401.676 332.198 li
403.661 323.277 li
328.192 280.311 li
cp
.0699779 .680964 0 0 cmyk
f
470.275 284.193 mo
394.342 240.263 li
325.881 280.074 li
325.739 281.053 li
401.783 325.048 li
470.275 284.193 li
0 .912535 0 0 cmyk
f
446.068 306.753 mo
463.92 296.162 li
465.424 295.106 466.604 292.969 466.606 291.184 cv
466.618 289.78 li
466.619 288.647 466.145 287.915 465.414 287.702 cv
430.27 307.254 li
401.65 322.733 li
401.676 332.198 li
446.068 306.753 li
0 0 0 0 cmyk
f
404.216 323.597 mo
328.765 279.946 li
327.166 279.02 li
325.705 278.175 li
325.406 278.723 325.219 279.326 325.219 279.876 cv
325.218 280.45 325.417 280.854 325.739 281.049 cv
325.74 281.053 li
325.751 281.06 li
325.757 281.063 li
401.783 325.048 li
404.216 323.597 li
cp
.139773 1 .00201419 0 cmyk
f
400.775 337.05 mo
401.723 337.599 li
401.898 337.297 li
401.307 336.832 li
400.775 337.05 li
cp
0 0 0 0 cmyk
f
400.799 324.477 mo
401.771 325.038 li
401.528 324.508 li
400.799 324.477 li
cp
f
403.096 320.703 mo
465.616 284.682 li
469.294 282.563 472.283 284.291 472.279 288.536 cv
472.267 289.939 li
472.263 294.184 469.267 299.362 465.589 301.481 cv
403.069 337.502 li
402.058 338.084 401.238 337.611 401.24 336.444 cv
401.24 335.277 402.062 333.859 403.072 333.276 cv
465.593 297.254 li
467.252 296.298 468.603 293.964 468.605 292.049 cv
468.617 290.647 li
468.619 288.732 467.272 287.952 465.613 288.908 cv
403.092 324.93 li
402.08 325.512 401.262 325.038 401.263 323.871 cv
401.264 322.704 402.084 321.285 403.096 320.703 cv
0 .912535 0 0 cmyk
f
401.24 336.444 mo
401.24 335.277 402.062 333.859 403.072 333.276 cv
465.593 297.254 li
467.252 296.298 468.603 293.964 468.605 292.049 cv
468.617 290.647 li
468.618 289.393 468.039 288.63 467.175 288.519 cv
467.453 288.884 467.616 289.405 467.615 290.067 cv
467.603 291.47 li
467.601 293.384 466.25 295.719 464.591 296.674 cv
402.071 332.697 li
401.06 333.279 400.239 334.697 400.238 335.865 cv
400.238 336.748 400.708 337.233 401.376 337.162 cv
401.289 336.966 401.24 336.727 401.24 336.444 cv
0 0 0 0 cmyk
f
401.263 323.871 mo
401.264 322.704 402.084 321.285 403.096 320.703 cv
465.616 284.682 li
467.2 283.769 468.655 283.573 469.799 283.983 cv
468.577 282.94 466.708 282.896 464.615 284.102 cv
402.094 320.123 li
401.083 320.706 400.262 322.125 400.261 323.292 cv
400.26 324.176 400.732 324.659 401.4 324.59 cv
401.312 324.394 401.262 324.154 401.263 323.871 cv
f
372.347 285.06 mo
406.842 265.185 li
436.76 282.493 li
402.264 302.368 li
372.347 285.06 li
cp
f
499.269 432.119 mo
498.184 432.119 497.148 431.9 496.374 431.453 cv
449.746 404.532 li
448.038 403.546 448.252 401.822 450.226 400.684 cv
462.449 393.608 li
497.121 413.626 li
497.617 413.912 498.088 414.047 498.515 414.047 cv
498.903 414.047 499.255 413.936 499.555 413.724 cv
539.262 390.823 li
552.941 398.721 li
554.65 399.707 554.435 401.431 552.462 402.57 cv
503.041 431.177 li
501.962 431.8 500.58 432.119 499.269 432.119 cv
.477638 .319829 .131411 0 cmyk
f
554 380.816 mo
504.143 352.031 li
502.204 350.911 500.632 347.907 500.632 345.323 cv
500.632 226.014 li
500.632 223.428 502.204 222.24 504.143 223.36 cv
554 252.145 li
555.939 253.264 557.511 256.267 557.511 258.853 cv
557.511 378.161 li
557.511 380.746 555.939 381.935 554 380.816 cv
cp
level3{
gsave
clp
[5.90911e-15 -128.671 96.5031 55.7161 529.072 366.423 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~pAZNdpAZE^pAZ<Xp&?-Rp&?$LoD]dHo)BUCnc'C<nc'=7o)B@4o)B:1oD]:-nc'"'nG`h$mf*OsmJd=n
m/I+im/I%fli-qel2L_bkl1V`kPkM_kPYA]jn\rXj7iTSiq39OiUQsKhsg[HhX:FEh<b1Bh!4q?gZeb=
g#rD9f]N57fAuu4f&Qf2e`-W0eDUB-eDL<,e)(-*dbXs(dbFg&db=a%dFnR#d+JC!d+A<ucdi'rcIMsq
c.)dobgc[nbL?LlbL-@jbL$:ibKp4hb0U+gaj0qeaNjhda3FYba3=Saa34M`a3+G_a3"A^`l\8]`Q8)[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.90911e-15 -128.671 96.5031 55.7161 529.072 366.423 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%A"Np%A"Np%7nKo^qeIoCDJCo'u8?naQ&;nF?&=naZ/>nac8Ao()AAnaQ&;nF,i6md9E/mHj3+
m-O'(lg*m&lg*j$l07Eqkih3mkND!ik2tggjlPRaj5].Yio8qUiSi_Qhr!;IhVR)Eh;-lAgt^Z=gY:H9
g"G'2f\"j.f@SX*f%/F&e^`4"eC<!se'ldpe'ldodaHRkdF$@hdF$@hdF$@gd*U.ccd0q`cd0q_cHa_[
c-=MXbfn;TbKJ)Pb0%lLb0%lLb0%lLb0%lLaiVZHaN2HDa2c6@`l?$<`l?$<`l?$<`l?$<`l?$<`Pog8
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trVcZkqtg-aq"XUWp@\(LoCDGAnaZ,<n*f]4mHs9,lg*j$lK[Wu
kih6nkND$jk2k^cjQ,C^j5]1Zio/kSi8EPNhr!>JhVR,Fh;$f?gY:K:g=k96g"G'2f\"j.f@JO'e^`4#
e^`4#eC<!teC<!te'landF$@hd*U.dcd0q`cd0q`cHa_\cHa_\c-=MXbfn;TbKJ)Pb0%lLaiVZHaiVZH
~>
<~-RU5e,pX]Z+sA*P+<MXF*?6%=*#fh8)AsA/(D[c$'bh>q'+toi&J,H`%LijU$k!FM$4."E#R:S="U"r1
!WiB'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~,9nBU+WqjJ*ZZ4>)]BS2(`*u)(D[c$'bh;p&ePZd%h9'Y%1EXR$k!FM$4."E#R:S>#6tJ<"pG/6"U"r2
"9\f/!s8T+!WiE)!WiB'!<E0#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
554 252.145 mo
504.143 223.36 li
503.277 222.86 502.485 222.823 501.872 223.163 cv
444.952 256 li
447.634 265.926 li
499.533 413.737 li
556.226 381.039 li
556.254 381.023 li
556.355 380.965 li
556.353 380.96 li
557.063 380.513 557.511 379.538 557.511 378.161 cv
557.511 258.853 li
557.511 256.267 555.939 253.264 554 252.145 cv
.827268 .57586 .071809 .00112917 cmyk
f
554 252.145 mo
504.143 223.36 li
503.277 222.86 502.485 222.823 501.872 223.163 cv
444.952 256 li
447.634 265.926 li
461.905 306.571 li
464.592 308.123 li
556.529 255.043 li
555.89 253.789 554.994 252.719 554 252.145 cv
.147219 .0154116 0 0 cmyk
f
497.121 413.626 mo
447.265 384.841 li
445.325 383.722 443.754 380.719 443.754 378.133 cv
443.754 258.824 li
443.754 256.24 445.325 255.051 447.265 256.17 cv
497.121 284.955 li
499.061 286.075 500.632 289.078 500.632 291.663 cv
500.632 410.972 li
500.632 413.558 499.061 414.745 497.121 413.626 cv
.657221 .328313 0 0 cmyk
f
493.986 406.444 mo
450.401 381.28 li
448.706 380.302 447.332 377.677 447.332 375.416 cv
447.332 264.612 li
447.332 262.352 448.706 261.314 450.401 262.292 cv
493.986 287.455 li
495.68 288.434 497.054 291.06 497.054 293.32 cv
497.054 404.123 li
497.054 406.384 495.68 407.422 493.986 406.444 cv
level3{
gsave
clp
[48.4929 13.3459 10.9886 71.0014 445.41 326.997 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hr4V9hVeG7hV\A6h;A85gtr)3gYVu2g>2f0g>2f0g"cW.g"cW.f\?H,fA$?+f%U0)f%U0)e_:'(
e_1!'eCjm&eCag%e(F^$e(=X#db"O"danI!dFS?udFJ9tdFJ9tdFA3sd+&*rd*r$qcdVppcdMjocI2an
c-lXmbgHIkbgHIkbL-@jb0^1hajC(gajC(gaj:"faj:"faj0qeaNjhdaNabcaNabca3FYba3FYb`m"J`
`Q\A_`Q\A_`6A8^_or)\_or)\_or)\_TVu[_TMoZ_TDiY_TDiY_T;cX_8uZW_8uZW^rZQV^W?HU^W?HU
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.4929 13.3459 10.9886 71.0014 445.41 326.997 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hVR,GhVR,GhVI#Dh;-oCh;$f@gtUT<gY1B8g=b04g"G'3g"=s0f\"j/f[na,f@JO(f%&=$e^`4#e^W*u
eC<!teC;sre'ldpe'landaHRldaHOjdF$@hdF$=fd*U.dd*U.dd*U.dd*U+bcd0q`cd0n^cHa_\cHa\Z
c-=MWbfn;SbKJ)PbKJ)Ob0%lKaiVZGaN2HDaN2HDaN2HDaN2HDaN2HCa2c6@a2c6@a2c6?`l?$<`l?$;
`Pog8`5KU4`5KU4_o'C0_SX1,_SX1,_SX1,_83t(_83t(_83t(_83t(_83t(^qdb$^qdb$^V@Ou^:q=q
~>
<~io8tWio/kTiS`YPi8<GLhr!>Khqm5HhVR,GhVI#Dh;-oCh;$f@gt^]?gtUT<gY:K;gY1B8g=k97g=k97
g=k65g"G'3g"G$1f\"j/f\"g-f@SX+f@SU)f%/F'f%/C%e^`4#e^`1!eC<!teC;sre'ldpe'landaHRl
daHRldaHRkdF$@hdF$@hdF$@gd*U.dd*U.dd*U.ccd0q`cd0q_cHa_\cHa_[c-=MXc-=MXc-=MXc-=MW
bfn;Tbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)PbKJ)Pb0%lLaiVZHaiVZHaN2HDaN2HDaN2HDaN2HDaN2HD
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
493.986 406.444 mo
450.401 381.28 li
448.706 380.302 447.332 377.677 447.332 375.416 cv
447.332 264.612 li
447.332 262.352 448.706 261.314 450.401 262.292 cv
493.986 287.455 li
495.68 288.434 497.054 291.06 497.054 293.32 cv
497.054 404.123 li
497.054 406.384 495.68 407.422 493.986 406.444 cv
level3{
gsave
clp
[48.4929 13.3459 10.9886 71.0014 445.41 326.997 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.4929 13.3459 10.9886 71.0014 445.41 326.997 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
493.986 406.444 mo
450.401 381.28 li
448.706 380.302 447.332 377.677 447.332 375.416 cv
447.332 264.612 li
447.332 262.352 448.706 261.314 450.401 262.292 cv
493.986 287.455 li
495.68 288.434 497.054 291.06 497.054 293.32 cv
497.054 404.123 li
497.054 406.384 495.68 407.422 493.986 406.444 cv
1 .866484 .240818 .0951247 cmyk
f
495.409 405.606 mo
451.825 380.443 li
450.13 379.464 448.756 376.839 448.756 374.578 cv
448.756 263.775 li
448.756 263.004 448.919 262.379 449.197 261.925 cv
448.101 261.916 447.332 262.922 447.332 264.613 cv
447.332 375.416 li
447.332 377.677 448.706 380.302 450.401 381.281 cv
493.986 406.444 li
495.102 407.089 496.076 406.853 496.614 405.974 cv
496.244 405.971 495.837 405.853 495.409 405.606 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
493.986 355.572 mo
477.785 346.219 li
451.948 361.136 li
497.054 387.178 li
497.054 361.436 li
497.054 359.176 495.68 356.55 493.986 355.572 cv
1 .866484 .240818 .0951247 cmyk
f
493.986 332.866 mo
477.785 323.514 li
451.948 338.431 li
497.054 364.472 li
497.054 338.731 li
497.054 336.47 495.68 333.845 493.986 332.866 cv
f
493.986 310.161 mo
477.785 300.808 li
451.948 315.725 li
497.054 341.767 li
497.054 316.025 li
497.054 313.765 495.68 311.139 493.986 310.161 cv
f
493.986 287.455 mo
477.785 278.103 li
451.948 293.02 li
497.054 319.062 li
497.054 293.32 li
497.054 291.06 495.68 288.434 493.986 287.455 cv
f
493.986 287.455 mo
458.121 266.749 li
451.948 270.314 li
497.054 296.356 li
497.054 293.32 li
497.054 291.06 495.68 288.434 493.986 287.455 cv
f
497.054 296.356 mo
451.948 270.314 li
451.948 284.665 li
497.054 310.706 li
497.054 296.356 li
.657221 .328313 0 0 cmyk
f
497.054 319.061 mo
451.948 293.019 li
451.948 307.37 li
497.054 333.412 li
497.054 319.061 li
f
497.054 341.767 mo
451.948 315.725 li
451.948 330.075 li
497.054 356.117 li
497.054 341.767 li
f
497.054 364.472 mo
451.948 338.43 li
451.948 352.782 li
497.054 378.823 li
497.054 364.472 li
f
497.054 387.178 mo
451.948 361.136 li
451.948 375.487 li
497.054 401.529 li
497.054 387.178 li
f
493.076 305.592 mo
459.102 285.978 li
458.143 285.424 457.365 283.938 457.365 282.659 cv
457.365 278.816 li
457.365 277.536 458.143 276.948 459.102 277.503 cv
493.076 297.117 li
494.035 297.671 494.813 299.157 494.813 300.436 cv
494.813 304.28 li
494.813 305.559 494.035 306.147 493.076 305.592 cv
1 .866484 .240818 .0951247 cmyk
f
gsave
457.365 278.816 mo
457.365 278.356 457.466 277.986 457.639 277.725 cv
457.466 277.985 457.365 278.356 457.365 278.816 cv
459.146 277.528 mo
459.102 277.503 li
458.857 277.361 458.624 277.294 458.412 277.294 cv
458.412 277.294 458.412 277.294 458.412 277.294 cv
458.624 277.294 458.857 277.361 459.103 277.503 cv
459.146 277.528 li
459.146 277.528 459.146 277.528 459.146 277.528 cv
clp
457.365 277.294 mo
459.146 277.294 li
459.146 278.816 li
457.365 278.816 li
cp
.82153 .606165 .106081 .00485237 cmyk
f
grestore
493.76 305.799 mo
493.551 305.799 493.32 305.733 493.076 305.592 cv
493.076 305.592 li
459.103 285.978 li
458.237 285.478 457.519 284.219 457.387 283.039 cv
457.373 282.911 457.365 282.784 457.365 282.659 cv
457.365 278.816 li
457.365 278.816 li
457.365 278.356 457.466 277.985 457.639 277.725 cv
457.824 277.447 458.094 277.294 458.412 277.294 cv
458.624 277.294 458.857 277.361 459.102 277.503 cv
459.146 277.528 li
459.109 277.696 459.082 277.876 459.082 278.08 cv
459.082 281.923 li
459.082 283.202 459.86 284.688 460.82 285.241 cv
494.749 304.831 li
494.612 305.445 494.244 305.799 493.76 305.799 cv
1 .929107 .306767 .199344 cmyk
f
482.415 295.059 mo
461.971 283.255 li
461.633 283.061 461.36 282.537 461.36 282.088 cv
461.36 281.638 461.633 281.431 461.971 281.626 cv
482.415 293.429 li
482.753 293.624 483.027 294.147 483.027 294.597 cv
483.027 295.047 482.753 295.253 482.415 295.059 cv
cp
0 0 0 0 cmyk
f
493.076 328.157 mo
459.102 308.543 li
458.143 307.99 457.365 306.503 457.365 305.224 cv
457.365 301.381 li
457.365 300.102 458.143 299.514 459.102 300.068 cv
493.076 319.683 li
494.035 320.237 494.813 321.723 494.813 323.001 cv
494.813 326.845 li
494.813 328.123 494.035 328.711 493.076 328.157 cv
1 .866484 .240818 .0951247 cmyk
f
493.378 328.297 mo
493.28 328.263 493.179 328.217 493.076 328.157 cv
493.076 328.157 li
493.179 328.217 493.28 328.263 493.378 328.297 cv
457.366 301.345 mo
457.37 300.982 457.438 300.675 457.555 300.437 cv
457.438 300.675 457.37 300.982 457.366 301.345 cv
459.146 300.093 mo
459.142 300.091 li
459.146 300.093 li
459.146 300.093 li
.82153 .606165 .106081 .00485237 cmyk
f
493.76 328.365 mo
493.64 328.365 493.512 328.343 493.378 328.297 cv
493.28 328.263 493.179 328.217 493.076 328.157 cv
493.076 328.157 li
459.103 308.543 li
458.147 307.991 457.371 306.515 457.365 305.239 cv
457.365 305.234 457.365 305.229 457.365 305.224 cv
457.365 301.381 li
457.365 301.369 457.365 301.357 457.366 301.345 cv
457.37 300.982 457.438 300.675 457.555 300.437 cv
457.738 300.066 458.042 299.86 458.412 299.86 cv
458.624 299.86 458.857 299.927 459.103 300.069 cv
459.142 300.091 li
459.146 300.093 li
459.109 300.261 459.082 300.441 459.082 300.646 cv
459.082 304.488 li
459.082 305.768 459.86 307.253 460.82 307.807 cv
494.749 327.397 li
494.612 328.01 494.244 328.365 493.76 328.365 cv
1 .929107 .306767 .199344 cmyk
f
482.415 317.624 mo
461.971 305.821 li
461.633 305.625 461.36 305.103 461.36 304.654 cv
461.36 304.203 461.633 303.996 461.971 304.192 cv
482.415 315.994 li
482.753 316.19 483.027 316.712 483.027 317.162 cv
483.027 317.613 482.753 317.819 482.415 317.624 cv
cp
0 0 0 0 cmyk
f
493.076 350.934 mo
459.102 331.319 li
458.143 330.765 457.365 329.279 457.365 328 cv
457.365 324.156 li
457.365 322.878 458.143 322.29 459.102 322.844 cv
493.076 342.458 li
494.035 343.012 494.813 344.498 494.813 345.778 cv
494.813 349.62 li
494.813 350.9 494.035 351.488 493.076 350.934 cv
1 .866484 .240818 .0951247 cmyk
f
457.365 324.156 mo
457.365 323.204 457.796 322.635 458.413 322.635 cv
458.624 322.635 458.858 322.703 459.103 322.844 cv
459.146 322.868 li
459.146 322.869 459.146 322.869 459.146 322.869 cv
459.102 322.844 li
458.857 322.703 458.624 322.636 458.413 322.636 cv
457.797 322.636 457.365 323.205 457.365 324.156 cv
.82153 .606165 .106081 .00485237 cmyk
f
493.76 351.14 mo
493.551 351.14 493.32 351.074 493.076 350.933 cv
459.103 331.319 li
458.237 330.819 457.519 329.56 457.387 328.38 cv
457.373 328.252 457.365 328.125 457.365 328 cv
457.365 324.156 li
457.365 324.156 li
457.365 323.205 457.797 322.636 458.413 322.636 cv
458.624 322.636 458.857 322.703 459.102 322.844 cv
459.146 322.869 li
459.109 323.037 459.082 323.216 459.082 323.421 cv
459.082 327.264 li
459.082 328.543 459.86 330.029 460.82 330.582 cv
494.749 350.172 li
494.612 350.785 494.244 351.14 493.76 351.14 cv
1 .929107 .306767 .199344 cmyk
f
482.415 340.4 mo
461.971 328.596 li
461.633 328.402 461.36 327.878 461.36 327.429 cv
461.36 326.979 461.633 326.772 461.971 326.967 cv
482.415 338.771 li
482.753 338.965 483.027 339.488 483.027 339.938 cv
483.027 340.388 482.753 340.594 482.415 340.4 cv
cp
.147219 .0154116 0 0 cmyk
f
493.076 373.919 mo
459.102 354.304 li
458.143 353.75 457.365 352.265 457.365 350.986 cv
457.365 347.143 li
457.365 345.863 458.143 345.276 459.102 345.829 cv
493.076 365.445 li
494.035 365.998 494.813 367.484 494.813 368.763 cv
494.813 372.606 li
494.813 373.885 494.035 374.473 493.076 373.919 cv
1 .866484 .240818 .0951247 cmyk
f
457.365 347.132 mo
457.367 346.676 457.468 346.308 457.641 346.05 cv
457.468 346.308 457.367 346.676 457.365 347.132 cv
457.641 346.05 mo
457.641 346.049 457.642 346.048 457.642 346.047 cv
457.642 346.048 457.641 346.049 457.641 346.05 cv
459.146 345.855 mo
459.102 345.829 li
458.857 345.688 458.624 345.621 458.413 345.621 cv
458.413 345.621 458.413 345.621 458.413 345.621 cv
458.624 345.621 458.858 345.688 459.103 345.829 cv
459.146 345.855 li
459.146 345.855 li
.82153 .606165 .106081 .00485237 cmyk
f
493.76 374.126 mo
493.551 374.126 493.32 374.059 493.076 373.919 cv
493.076 373.919 li
459.103 354.304 li
458.237 353.804 457.519 352.546 457.387 351.365 cv
457.373 351.237 457.365 351.11 457.365 350.986 cv
457.365 347.143 li
457.365 347.139 457.365 347.135 457.365 347.132 cv
457.367 346.676 457.468 346.308 457.641 346.05 cv
457.641 346.05 457.641 346.05 457.641 346.05 cv
457.641 346.049 457.642 346.048 457.642 346.047 cv
457.828 345.772 458.096 345.621 458.413 345.621 cv
458.624 345.621 458.857 345.688 459.102 345.829 cv
459.146 345.855 li
459.109 346.022 459.082 346.202 459.082 346.406 cv
459.082 350.25 li
459.082 351.529 459.86 353.015 460.82 353.569 cv
494.749 373.158 li
494.612 373.771 494.244 374.126 493.76 374.126 cv
1 .929107 .306767 .199344 cmyk
f
482.415 363.385 mo
461.971 351.582 li
461.633 351.387 461.36 350.865 461.36 350.414 cv
461.36 349.964 461.633 349.758 461.971 349.952 cv
482.415 361.756 li
482.753 361.951 483.027 362.474 483.027 362.923 cv
483.027 363.373 482.753 363.58 482.415 363.385 cv
cp
0 .912535 0 0 cmyk
f
493.076 396.45 mo
459.102 376.834 li
458.143 376.28 457.365 374.795 457.365 373.516 cv
457.365 369.673 li
457.365 368.394 458.143 367.806 459.102 368.36 cv
493.076 387.975 li
494.035 388.529 494.813 390.014 494.813 391.293 cv
494.813 395.136 li
494.813 396.415 494.035 397.003 493.076 396.45 cv
1 .866484 .240818 .0951247 cmyk
f
457.365 369.673 mo
457.365 369.212 457.466 368.84 457.641 368.58 cv
457.467 368.84 457.365 369.212 457.365 369.673 cv
457.641 368.58 mo
457.641 368.579 457.641 368.579 457.642 368.579 cv
457.641 368.579 457.641 368.579 457.641 368.58 cv
459.146 368.385 mo
459.102 368.36 li
458.857 368.218 458.624 368.151 458.413 368.151 cv
458.413 368.151 458.413 368.151 458.413 368.151 cv
458.624 368.151 458.858 368.218 459.103 368.36 cv
459.146 368.385 li
459.146 368.385 li
.82153 .606165 .106081 .00485237 cmyk
f
493.76 396.656 mo
493.551 396.656 493.32 396.59 493.076 396.45 cv
493.076 396.45 li
459.103 376.834 li
458.237 376.335 457.519 375.076 457.387 373.895 cv
457.373 373.768 457.365 373.641 457.365 373.516 cv
457.365 369.673 li
457.365 369.673 li
457.365 369.212 457.467 368.84 457.641 368.58 cv
457.641 368.58 457.641 368.58 457.641 368.58 cv
457.641 368.579 457.641 368.579 457.642 368.579 cv
457.827 368.302 458.095 368.151 458.413 368.151 cv
458.624 368.151 458.857 368.218 459.102 368.36 cv
459.146 368.385 li
459.109 368.552 459.082 368.733 459.082 368.937 cv
459.082 372.781 li
459.082 374.059 459.86 375.545 460.82 376.099 cv
494.749 395.689 li
494.612 396.302 494.244 396.656 493.76 396.656 cv
1 .929107 .306767 .199344 cmyk
f
482.415 385.915 mo
461.971 374.113 li
461.633 373.917 461.36 373.395 461.36 372.945 cv
461.36 372.494 461.633 372.288 461.971 372.483 cv
482.415 384.286 li
482.753 384.482 483.027 385.004 483.027 385.453 cv
483.027 385.904 482.753 386.111 482.415 385.915 cv
cp
.147219 .0154116 0 0 cmyk
f
455.5 286.715 mo
451.948 284.665 li
451.948 270.314 li
455.5 272.365 li
455.5 286.715 li
.842374 .602045 .0982681 .0030518 cmyk
f
455.5 309.421 mo
451.948 307.37 li
455.5 309.421 li
455.5 309.421 li
1 .866484 .240818 .0951247 cmyk
f
455.5 309.421 mo
451.948 307.37 li
451.948 293.019 li
455.5 295.07 li
455.5 309.421 li
.842374 .602045 .0982681 .0030518 cmyk
f
455.5 332.126 mo
451.948 330.075 li
455.5 332.126 li
455.5 332.126 li
1 .866484 .240818 .0951247 cmyk
f
455.5 332.126 mo
451.948 330.075 li
451.948 315.725 li
455.5 317.776 li
455.5 332.126 li
.842374 .602045 .0982681 .0030518 cmyk
f
455.5 354.832 mo
451.948 352.782 li
455.5 354.832 li
455.5 354.832 li
1 .866484 .240818 .0951247 cmyk
f
455.5 354.832 mo
451.948 352.782 li
451.948 338.43 li
455.5 340.481 li
455.5 354.832 li
.842374 .602045 .0982681 .0030518 cmyk
f
455.5 377.537 mo
451.948 375.487 li
455.5 377.537 li
455.5 377.537 li
1 .866484 .240818 .0951247 cmyk
f
455.5 377.537 mo
451.948 375.487 li
451.948 361.136 li
455.5 363.187 li
455.5 377.537 li
.842374 .602045 .0982681 .0030518 cmyk
f
486.443 296.476 mo
486.443 296.935 486.121 297.12 485.724 296.891 cv
485.326 296.661 485.005 296.104 485.005 295.646 cv
485.005 295.187 485.326 295.001 485.724 295.231 cv
486.121 295.459 486.443 296.017 486.443 296.476 cv
cp
.147219 .0154116 0 0 cmyk
f
489.491 298.237 mo
489.491 298.695 489.17 298.88 488.773 298.652 cv
488.375 298.422 488.054 297.865 488.054 297.406 cv
488.054 296.948 488.375 296.761 488.773 296.99 cv
489.17 297.22 489.491 297.778 489.491 298.237 cv
cp
0 .912535 0 0 cmyk
f
492.54 299.996 mo
492.54 300.455 492.219 300.641 491.822 300.411 cv
491.424 300.182 491.103 299.624 491.103 299.166 cv
491.103 298.707 491.424 298.522 491.822 298.751 cv
492.219 298.98 492.54 299.537 492.54 299.996 cv
cp
.147219 .0154116 0 0 cmyk
f
486.443 319.17 mo
486.443 319.628 486.121 319.815 485.724 319.585 cv
485.326 319.356 485.005 318.798 485.005 318.339 cv
485.005 317.881 485.326 317.695 485.724 317.924 cv
486.121 318.154 486.443 318.711 486.443 319.17 cv
cp
0 .912535 0 0 cmyk
f
489.491 320.93 mo
489.491 321.389 489.17 321.574 488.773 321.345 cv
488.375 321.115 488.054 320.558 488.054 320.1 cv
488.054 319.641 488.375 319.455 488.773 319.685 cv
489.17 319.913 489.491 320.472 489.491 320.93 cv
cp
.147219 .0154116 0 0 cmyk
f
492.54 322.691 mo
492.54 323.149 492.219 323.335 491.822 323.106 cv
491.424 322.876 491.103 322.319 491.103 321.86 cv
491.103 321.402 491.424 321.215 491.822 321.445 cv
492.219 321.674 492.54 322.232 492.54 322.691 cv
cp
0 0 0 0 cmyk
f
486.443 342.035 mo
486.443 342.493 486.121 342.68 485.724 342.45 cv
485.326 342.221 485.005 341.663 485.005 341.204 cv
485.005 340.746 485.326 340.561 485.724 340.789 cv
486.121 341.019 486.443 341.576 486.443 342.035 cv
cp
f
489.491 343.795 mo
489.491 344.254 489.17 344.44 488.773 344.21 cv
488.375 343.982 488.054 343.424 488.054 342.965 cv
488.054 342.506 488.375 342.321 488.773 342.55 cv
489.17 342.78 489.491 343.337 489.491 343.795 cv
cp
0 .912535 0 0 cmyk
f
492.54 345.556 mo
492.54 346.014 492.219 346.2 491.822 345.971 cv
491.424 345.741 491.103 345.184 491.103 344.726 cv
491.103 344.267 491.424 344.081 491.822 344.31 cv
492.219 344.539 492.54 345.097 492.54 345.556 cv
cp
0 0 0 0 cmyk
f
486.443 364.568 mo
486.443 365.027 486.121 365.212 485.724 364.983 cv
485.326 364.753 485.005 364.196 485.005 363.738 cv
485.005 363.279 485.326 363.093 485.724 363.322 cv
486.121 363.551 486.443 364.109 486.443 364.568 cv
cp
f
489.491 366.327 mo
489.491 366.786 489.17 366.972 488.773 366.743 cv
488.375 366.514 488.054 365.956 488.054 365.497 cv
488.054 365.039 488.375 364.853 488.773 365.082 cv
489.17 365.312 489.491 365.869 489.491 366.327 cv
cp
.147219 .0154116 0 0 cmyk
f
492.54 368.088 mo
492.54 368.547 492.219 368.733 491.822 368.503 cv
491.424 368.274 491.103 367.716 491.103 367.258 cv
491.103 366.799 491.424 366.614 491.822 366.843 cv
492.219 367.072 492.54 367.629 492.54 368.088 cv
cp
f
486.443 387.407 mo
486.443 387.865 486.121 388.052 485.724 387.823 cv
485.326 387.593 485.005 387.035 485.005 386.576 cv
485.005 386.118 485.326 385.933 485.724 386.161 cv
486.121 386.391 486.443 386.948 486.443 387.407 cv
cp
0 0 0 0 cmyk
f
489.491 389.167 mo
489.491 389.626 489.17 389.812 488.773 389.582 cv
488.375 389.354 488.054 388.796 488.054 388.337 cv
488.054 387.878 488.375 387.693 488.773 387.922 cv
489.17 388.152 489.491 388.709 489.491 389.167 cv
cp
0 .912535 0 0 cmyk
f
492.54 390.928 mo
492.54 391.386 492.219 391.573 491.822 391.343 cv
491.424 391.114 491.103 390.556 491.103 390.098 cv
491.103 389.639 491.424 389.453 491.822 389.682 cv
492.219 389.911 492.54 390.469 492.54 390.928 cv
cp
.147219 .0154116 0 0 cmyk
f
508.983 296.392 mo
508.983 396.042 li
549.97 372.378 li
549.97 272.729 li
508.983 296.392 li
cp
508.142 397.499 mo
508.142 295.906 li
508.352 295.785 li
550.811 271.272 li
550.811 372.865 li
550.6 372.986 li
508.142 397.499 li
cp
1 .866484 .240818 .0951247 cmyk
f
539.781 316.982 mo
520.743 327.973 li
519.464 328.711 518.428 327.928 518.428 326.223 cv
518.428 315.667 li
518.428 313.962 519.464 311.981 520.743 311.242 cv
539.781 300.251 li
541.06 299.513 542.097 300.296 542.097 302.001 cv
542.097 312.557 li
542.097 314.262 541.06 316.243 539.781 316.982 cv
cp
f
540.243 300.046 mo
540.352 300.342 540.414 300.696 540.414 301.105 cv
540.414 311.66 li
540.414 313.365 539.378 315.347 538.099 316.085 cv
519.061 327.076 li
518.903 327.168 518.748 327.236 518.599 327.281 cv
518.943 328.213 519.772 328.534 520.743 327.973 cv
539.781 316.982 li
541.06 316.243 542.097 314.262 542.097 312.557 cv
542.097 302.002 li
542.097 300.507 541.3 299.722 540.243 300.046 cv
cp
.657221 .328313 0 0 cmyk
f
536.304 310.624 mo
536.656 310.421 536.941 310.586 536.941 310.992 cv
536.941 313.397 li
536.941 313.804 536.656 314.297 536.304 314.5 cv
535.951 314.704 535.666 314.539 535.666 314.133 cv
535.666 311.729 li
535.666 311.322 535.951 310.827 536.304 310.624 cv
cp
0 0 0 0 cmyk
f
533.573 312.502 mo
533.925 312.299 534.21 312.463 534.21 312.869 cv
534.21 314.974 li
534.21 315.38 533.925 315.874 533.573 316.077 cv
533.221 316.281 532.936 316.116 532.936 315.709 cv
532.936 313.606 li
532.936 313.199 533.221 312.705 533.573 312.502 cv
cp
.147219 .0154116 0 0 cmyk
f
530.841 311.732 mo
531.194 311.528 531.479 311.693 531.479 312.099 cv
531.479 316.55 li
531.479 316.957 531.194 317.451 530.841 317.655 cv
530.49 317.858 530.204 317.693 530.204 317.286 cv
530.204 312.835 li
530.204 312.429 530.49 311.935 530.841 311.732 cv
cp
0 .912535 0 0 cmyk
f
528.111 310.743 mo
528.462 310.539 528.747 310.704 528.747 311.111 cv
528.747 318.127 li
528.747 318.533 528.462 319.028 528.111 319.231 cv
527.758 319.434 527.473 319.27 527.473 318.864 cv
527.473 311.847 li
527.473 311.441 527.758 310.947 528.111 310.743 cv
cp
.147219 .0154116 0 0 cmyk
f
525.379 313.056 mo
525.732 312.852 526.017 313.017 526.017 313.423 cv
526.017 319.704 li
526.017 320.111 525.732 320.605 525.379 320.808 cv
525.028 321.011 524.742 320.846 524.742 320.44 cv
524.742 314.159 li
524.742 313.753 525.028 313.259 525.379 313.056 cv
cp
f
522.649 317.502 mo
523 317.299 523.285 317.463 523.285 317.869 cv
523.285 321.281 li
523.285 321.688 523 322.181 522.649 322.385 cv
522.296 322.588 522.011 322.423 522.011 322.017 cv
522.011 318.606 li
522.011 318.199 522.296 317.705 522.649 317.502 cv
cp
0 0 0 0 cmyk
f
535.677 309.41 mo
535.677 309.81 535.957 309.972 536.304 309.772 cv
536.65 309.572 536.93 309.086 536.93 308.686 cv
536.93 308.286 536.65 308.124 536.304 308.324 cv
535.957 308.525 535.677 309.01 535.677 309.41 cv
cp
0 .912535 0 0 cmyk
f
535.677 307.15 mo
535.677 307.55 535.957 307.711 536.304 307.512 cv
536.65 307.312 536.93 306.825 536.93 306.426 cv
536.93 306.027 536.65 305.865 536.304 306.065 cv
535.957 306.264 535.677 306.75 535.677 307.15 cv
cp
0 0 0 0 cmyk
f
206.537 279.92 mo
205.472 279.92 204.456 279.705 203.696 279.267 cv
176.39 263.501 li
174.714 262.534 174.924 260.844 176.86 259.727 cv
203.226 244.504 li
204.285 243.893 205.64 243.58 206.925 243.58 cv
207.99 243.58 209.005 243.794 209.765 244.233 cv
237.072 259.998 li
238.487 260.816 238.556 262.149 237.377 263.217 cv
232.426 266.074 li
231.939 266.356 231.493 266.651 231.089 266.957 cv
210.235 278.996 li
209.177 279.607 207.822 279.92 206.537 279.92 cv
.477638 .319829 .131411 0 cmyk
f
231.089 266.957 mo
231.493 266.651 231.939 266.356 232.426 266.074 cv
237.377 263.217 li
237.16 263.413 236.902 263.6 236.602 263.774 cv
231.089 266.957 li
.570672 .350164 .106935 0 cmyk
f
238.194 244.879 mo
238.194 244.879 li
238.194 235.457 li
217.067 235.446 li
209.765 231.23 li
208.088 230.262 205.161 230.383 203.226 231.501 cv
196.413 235.434 li
175.267 235.422 li
175.267 245.113 li
175.219 245.767 175.584 246.4 176.39 246.865 cv
203.697 262.63 li
205.372 263.597 208.3 263.476 210.235 262.359 cv
236.602 247.136 li
237.718 246.491 238.256 245.656 238.194 244.879 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
206.731 230.581 mo
205.504 230.612 204.232 230.92 203.226 231.501 cv
196.413 235.434 li
175.267 235.422 li
175.267 245.113 li
175.219 245.767 175.584 246.4 176.39 246.865 cv
203.697 262.63 li
204.502 263.095 205.597 263.306 206.731 263.278 cv
206.731 230.581 li
cp
f
177.66 235.424 mo
175.267 235.422 li
175.267 245.113 li
175.219 245.767 175.584 246.4 176.39 246.865 cv
177.66 247.598 li
177.66 235.424 li
cp
.657221 .328313 0 0 cmyk
f
204.117 262.836 mo
205.563 263.455 207.654 263.42 209.344 262.776 cv
209.344 251.774 li
204.117 251.774 li
204.117 262.836 li
cp
f
203.697 252.975 mo
176.39 237.209 li
174.714 236.241 174.924 234.552 176.86 233.435 cv
203.226 218.211 li
205.161 217.094 208.088 216.973 209.765 217.941 cv
237.072 233.706 li
238.747 234.673 238.536 236.364 236.602 237.481 cv
210.235 252.703 li
208.3 253.821 205.372 253.943 203.697 252.975 cv
cp
.147219 .0154116 0 0 cmyk
f
236.602 235.626 mo
210.235 250.85 li
208.3 251.967 205.372 252.088 203.697 251.12 cv
176.39 235.355 li
176.016 235.139 175.741 234.887 175.554 234.614 cv
174.978 235.539 175.239 236.545 176.39 237.209 cv
203.697 252.975 li
205.372 253.943 208.3 253.821 210.235 252.703 cv
236.602 237.481 li
238.106 236.613 238.562 235.4 237.907 234.448 cv
237.645 234.87 237.208 235.277 236.602 235.626 cv
cp
0 0 0 0 cmyk
f
228.15 247.365 mo
228.15 248.07 227.656 248.924 227.047 249.277 cv
226.438 249.628 225.945 249.343 225.945 248.64 cv
225.945 247.936 226.438 247.081 227.047 246.729 cv
227.656 246.377 228.15 246.662 228.15 247.365 cv
cp
.147219 .0154116 0 0 cmyk
f
231.698 245.318 mo
231.698 246.021 231.205 246.876 230.596 247.228 cv
229.987 247.579 229.492 247.294 229.492 246.591 cv
229.492 245.887 229.987 245.032 230.596 244.681 cv
231.205 244.328 231.698 244.614 231.698 245.318 cv
cp
f
235.247 243.269 mo
235.247 243.972 234.753 244.827 234.145 245.179 cv
233.535 245.531 233.041 245.245 233.041 244.542 cv
233.041 243.838 233.535 242.984 234.145 242.632 cv
234.753 242.28 235.247 242.565 235.247 243.269 cv
cp
f
205.311 243.2 mo
192.532 235.823 li
191.748 235.37 191.847 234.579 192.752 234.057 cv
205.091 226.933 li
205.996 226.41 207.366 226.354 208.151 226.806 cv
220.929 234.184 li
221.713 234.636 221.615 235.427 220.709 235.95 cv
208.37 243.073 li
207.465 243.597 206.095 243.654 205.311 243.2 cv
cp
.657221 .328313 0 0 cmyk
f
206.534 237.024 mo
204.767 236.002 li
204.658 235.94 204.671 235.83 204.797 235.758 cv
206.504 234.773 li
206.629 234.7 206.819 234.693 206.927 234.755 cv
208.696 235.776 li
208.804 235.838 208.79 235.948 208.665 236.02 cv
206.957 237.006 li
206.832 237.078 206.643 237.086 206.534 237.024 cv
cp
.147219 .0154116 0 0 cmyk
f
192.532 235.823 mo
192.569 235.844 li
192.752 235.718 li
205.091 228.594 li
205.996 228.072 207.366 228.015 208.151 228.467 cv
220.893 235.823 li
221.615 235.306 221.654 234.602 220.929 234.184 cv
208.151 226.806 li
207.366 226.354 205.996 226.41 205.091 226.933 cv
192.752 234.057 li
191.847 234.579 191.748 235.37 192.532 235.823 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (Online_themes_2_07.eps)
%%CreationDate: 1/15/2019 4:18 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3Q&(g@4ub?e>8fE@ZnjEI%Xb-=r8c#hTLpaT.Hb`"_t9I!C,;H^D.;UlK=U8_>b\Z=]B6\!^C*ZrC`4)V&$OU<rha>0bK9
%X+oXO3Qj,7S"].trirj&XEG;$qYK;Za5tTmhDR5.&2h9PCr2=2Au0\l2S+\2AgQecMTpIRh-%o9^B]bRIW,<XK&#+b?>oh6/(B3o
%'o_[kbu;AX&,g,;3p>_-]L%VS.1LaZJPe*%IM_D+NCplc%1clp=P^]GiuL0iT@/e\YhK>c@9"$c.dk(-9gZ1P;t@BUg6r@U/DF01
%K>&b\#%(V(2,$*@r;HfjpgBTB#M[V`dst6cK5I[eC#Yb:h`ou<<P31,iB7ZT5s+;]RLOcL5_.HA*6a\bo:T1R1*X9=(OYW,cf#Qg
%\Ut[+FD-o(;eRjM.:2pFFeT*9>#k*BghlO"Ib/UdcJWgT%njEe`Z6TVB:*X?'*Ha8"gDR+J0_S1S#u"LIFZFj'fbJ(]Pc8PDFi3O
%)b/]B?C'j<2&J=*,R8p7clc>tniHNL>pHPj+Oa<]-9%?]Sl_[QYo&5QC>n&c\S#>I%GO5']QX%Zp0Wn290q>Jd<sHEL[CFf=r/mQ
%M-T3-I^9sD=e*EL^E0%u-0\+lU;ojP^'M?D6d9of=h9o?'RB%jms6Y^*k".N6ML,F'fJgUY6`KTbKASBD'8p;-ZA:-Q.,<>G?["I
%Y%^K/:_!3KP*-t)^tEZZ\VcA?56SqbB\+kONO;akjMfPHTefp?=uB=u>K]&)7el&8`1JR["P>tmDDuB&4B1^T\0'%m./EgOZ,Xms
%n+s*te<#KTPB3jrK0U/<J>X*'")N.'"h=2s>iC$roN?`p\rQ6FL$u1&n&;#;eTLf>FZc\iGZ<;jW:/2S*bJR-c*Hi*ARRO@_JY\$
%qf5Td`BLG_I9cP;_d+(j\Lr'CDto@KMFHl4/E5#c&W[WafZ3aVW:*q+%JP;;i;5WmJS'u],$pIoi_Xoj$o!-<2oH*]YoD[KZ/oJO
%'Y\'!6jhfXG=`8cN-O;Cr^*FM*N*@Un^N@/^(]r0"e-)W>a9$G&7@Fb%H"FOmphjJ&cp=CAm-shn=>=ip5B!(cd;4Y"MA91m)&e,
%)rc\B3#+641$<%uEVK^L+c_`79H"t239!%!63LF$n6H$T:&'b)&4_+\B!Sp#E>\g_;p#.B0-s2qN^740@lGa+U^^h[#S?J6)R%A+
%9=AgVq%*?FJl5&M5oS%9o3oQLhm"-D3o\5&iPG;LI1S[]/u;ff&sJC.?qH^E/;6R9*<FJ1_a5N37.QYCcgW[VH"A<D!A><8nRM'n
%Rp;S`k6^oCrtE2SU9\;cn!QF'Khq_NP[j+D0ecjIDldT7=KrpOUe;_a-'<r&dNg\7k-h(.bRK4sP*:X@,a%"WOQFVI0b78aL&U&/
%0U8[5VeLN,roAQ`_8##+rWg>8PFLQ-rb(!`49";jNl/UP-X,=<s#c>Q`Lm(3:uL7$-i\hXV%P`+TDYltk25\Vs&5YA_TjA:nX]L!
%^Z@-J6l\(ZBUAt$@+/oTB@63A(/W`f.XQXBM,#U:.VN;4cqg)s_gYqa8&N#>P@%5c`-V3!LOJ0H0RWM]_q%K\iTgDUSFJCi@gqe#
%E@*XP!Y4*,LHFN*>n)8d`a4P@M#6+f-()IfNH:%\4?S0N%(:rOg<X"FSu+@S*O[Gj<eOdjki4BA&a>J6*(If>kEcTBa=`sRWV[u9
%om-<TN^F[d7d:q)6rI+X*Rnkl8J@I[=:Q!I>2R2lNo:hbN*V1s3"&Dgno2CjB)E(-#hDg'l2ff019=F&@#@8g?DR]58$E7QQb+X]
%^,-Z4.la-(q'N1Y_t9hHPOY:0H#-=u_t4KAS)i>ri37hILelnrRR$.q'Da#]6n"@#NJ//1V\rbp1O[^*0!:#2^`\\/llm^TMB'FG
%Lq>1RNB^..Y]WXWPXBkPdP6;2Ac+tNP#8NJ(r^tOZdE@4R^Q`\INn/VLm[W:IM1BYT6;(W,06@ne-FVgZunFf#8G3S]*r6"q7EU.
%h-KeU_P,>OKZEUAotV/!*"G$^7J#adI0*eD<#3TQ'I)tT9Y(8)a.Is:"IfrS=*%%U.&.0mj*IS\5;aTo#V&`iV[;;-`?(J#+sm9Y
%\)ti`;7:QInph&R3]kQ2=@BB\E6$pOY/d.c4NKX\LSb`uF^>KM--Gfi!g,[/hMa<iT+O`j8Djtb>],A^mIqJJ:f*e#:TBDrG+Rf>
%e/o&,aFcbaTNXAN_G?IY#;lk=dnb?<s1H8t]r3#U)q+"b#_=Qr`D%4*liY8'?Yi!-4U5\Zr#RH_)@-j+_)B=^$WH:Y7.Pc*R'6q)
%+`!kfi_YlQZu$BNSebFf_=^ZF^c;+B<_6`S/eQ$fJfn?.F\+2>'8e5Ak9Y6+,9:/M''WNd,"X"G1:G(G1&`Gl7?MNt>p2JV,U+ko
%EL/oc33JWd8+uIl\*l!#*WH+=X5B3;lm;igIE*%$:"f*bdO6OdbHN@l+Zj$"8JYFB#U2b=m?!fXaA&=>8ROtg=*>>7ag1JUU&-a+
%E%3iP*S6NX$I*TnA>G=\9;3!Oi?h`<@*t3a-mks\cjQ"fQumk\L:KPMS8gha:lm.@>SCTW2Id=Jh8i$ZfSm/F_`ge]SJYNLNs*Hg
%3YOXs[e#Nq^[W>d8hS'B<^rluaO$mPBkVWKNc5@;*XGp;2l%c<:AJ+/S24<b@Ao3&A:7NrWUGko,=g*:qCQg5+d):@m0a2p_k.4I
%Ln+NZPF7#Cf.Wf4`mgo%U?P2TmAN7o@H2q)@r*IN/RG!B.18I>T,k[U%i6K.Nm9orPjcZ?`Adr+:'mEmnsNN*&Mbf\1IOnU@kAsS
%R%Risi*u0erUu1J*8?GEn>(sPZ`<6:Wb$Ru:X%:IF;)AUk7W",%o;!_*;-//(_N./BCe^D0Gm/<@(U4J)c-UM:U2[W?r2gpktu^K
%Rp^F?@;_eiTgA\_Xe7!YV\)'0)Zn]^/4e\6>mq^o>Tf[C%@%W%KhkNqfg+O7p`"_u`%)1m<V.+/O[Zhb*[UrB&cNNA%[kChWe`.F
%8K<2R]u.Vh@?_DFA7]gJkl;<P%mk$((<MW!KbO)38J;.:\s"*jKndIBHanOQf>jM?TTjgrP2g&YH-Z8Rnm9IoP@"RK)o+aHK^0ik
%=@-]K'l^m]=@S.S44:m[C]hf$JJf>>,+gg^O.Bn:8[Fb'UL7l3]J2FoeeN#LG7[o$6oO)![#<]oSI2u&'1r!+R1-W!'8(:d@bXq[
%iXYL_,`Y->"!)q"G^CX[E`4]KRl6OASY?=[Ios=eFYZuRfUh'FQ&[qdBf/*q_Mp9NP<RB:E'3T.>*"48C33<#HkS62A"p8dW8:0N
%ShWh#pcm>Y&fY$/PP,,dBWgA>%mg=A*Q>?oI:p@1BE,p#2&9BO'#pUr]Jl0<4Ji>[HV1sP#00.+j;:bQ"b1.CrNK'AS`b&RUdoR4
%K^O2M-[k-O/2ClZ1gO1u%uX4UZTX_*ZHeNjIO);+=s=Q@.B#VeRiYRQ5d<%+j73^@BU9%fph=(>d7Zce8piDIplc(1PXu=Bj9P]E
%PE/BS-ET[]>l[C5_LkA]r1q8`=_b3L!JH&T:/pMc&Kon=^d&*[^J%&$nRBaoE_tIp:ca\GRV>TfKB>d-I:%kh`*X=KPUQSH]$=_&
%"%b['5qmsEr_4gqQ'I$4Usq,^0=:P-78HlmU-'#``P@"e>Tk`0NlW/F/L"P!(L!LUq4_%=k,TbO832\c<91\tAj_\;<fpJ33I`,R
%:rU6`/n/@U@gae4E>SG7,E5/46b.mrq,%&]-fEJ&;?==4N%,#qqfRlB.ca:7&<ca,19l!KTXo`<-e!*7#8s<m$qJ"$-4gc+):rjc
%<%ijP-/qeM'*4YsFqgG^UB8%aJ[%5*pd\(J<sX&jP<n>,oQ(XIPCa2gCD=n.dS*7Gg8&+S((4Hue"r"cdYp0)^q^J:,:''1IoI(,
%;:`kHb;u>&Are0Q*C^K/ad@as`I\e1epie>,&;Ht`.:i+D@si%WIYsPM23@*B8\6*juaAE`%XJ3A/6]?L6Om2+Jb$rM4n<[e7!om
%QHD5TY]D/<QQgo.2@eYVC(tt$2'"-ESm\FuOJ.C>/0VU!p?G9(`f<@u&#kWf#9oL*o$!oH\eqIWNF#7/6C;E-G2#b\e>!25I4H1/
%%CqI[+bW_C8='$[@u\!,GU/e(.gYDXVP"*9he480N2Ig\&b1NG,/3eC,]\Pa&Gk%j`SlBnj\%4@U5$"sT]KaJnRnXe3X(SGYccY4
%MXfpmo^4tU$pt1tGgukNml3U<2<)2(F[8SD;ScbsP+`.#&[S,:$,@)Y9r/O29fg"AHsm>YK_5D>$VaAqO.6MZ>%S9a$^<_]2!?cN
%?LWAtb:tDq&G4oP655NNU(3#WN*?iI,gSu;b,J(UOV514.'THp89V7#iut9"RP'S_!kfFr6/hd`eo<esc3&lK.>fc*qXB>A%^L)A
%f*Y;dE5(WR8SIq4!*A"(T2UEZ.oSNe#suJ#!Y37m79i@)L2_Mq8Do:BbnE?=#-OCi3@,[o[d7Q2."h+XVEu!A;=R!Ul/hLP-qKL2
%BS2-0M>C&=V/`k>+S/^T)Hrb,:l0k-%6%/,mqJ^O9Q_e68-bl?'$5lI.',0-:97/N)i%!$ZURE),,R</]T0\,!`F[92Q/CKP_R@R
%i,Hh1Y38aPWqh8;//m.\fp.^koR/p._k<KI-TqUog%`@p:!-[P_;tYk<g$9iOY/se*0aEB>)1[bal?hb$Wk@:kj@ma$O3"d,!JMI
%[Q&7J<X'k4Z*kYe(Z5K'N(2;G;&.]UK\X@VN)t5"#&1ds'Xa&XVI7K*W.N%3Q*k[jW20e#j(QC1KMOH2?O+sm7s^t#Jg,SN9E@FG
%Zd6jg?sKXl7V,TK@.E2EP/[Wq'UQ13Y!W8!KE1NF1'NM0CnSFsPE4e#QrRB36]`u9V:/X\UrX$M=Ssb93"h^V7FB1a&S<>l)Ud:U
%4E%#MK[T<fd))$VbHWV;d4CpUZlOq)_>sFsO[?@Ekp++nR98cH&K7l1=t))5dA74JSW;"e+OG#BjQ+6NqL(9R1?/&fb;Mn?l!uEd
%nJG9\G4`BdTC.oq9*L7!KM!JBTHR]BLDE>^5"br4oR$g!BO&e+Z&qltT0Pk.]p)^kBlbGC63=\'(MAl5A0-iW@8p]j-DOia'PVgJ
%;aH(j>WenCQ7&2c/J;u)&h'[&(&nT[M;UU``sC'<&JaQ/E6D/A7(!S?L_Vrg!(`3JOqOE/T<X6I.pE_?RAsA&-"%bXaZML;@V)i.
%<4<Vmj@<j:Yi%u`?m70]V.'Eu#_h1sW(nV!65D!mO0'>j]d,`hIY0j\<%tu;dn@3l8P.a(nPk!G.*bsd(_A;25GKW,L27Z1\"rpF
%E=`U,(O/#/SBc,NTFpV?#Xrd"O?&JCLF#]_F:W(pX,6F'OsGGn("kBr",4\u>+jhdSYsqr8o3\hLg?iZY/Ea4M..%L764p!OY2N$
%l&\c\(?1#V:(jicN*;WZCCU_$?buD8-(0k:;jO]XJ-[)KLM/Y9o56n/>fL*)#^!Jj#kQ$WLo;!-KeBqJacYal,ue,"')=/60B*C"
%$Z=CiM6P'\i$s")T7K^)64%.5ZV.)<LR7"K8Z)V+=0<Nq/!\nJN"m9]5oPeu+AZORfo!X9%u7K8"^bpKF-.6(8DDsL%0/r;q,h!e
%NWNWj>RHZM7IgsbV9#S^l$]>20FA(:):M.oLk4QsY-^lYl_Qb2lP-FG7,=$M.q<o>?Z?ZLU-gPr=&7N^q8nso.:,4B";Sl?%[U?U
%7gb&WP:hkd<94;7GbL.RI:Bo0HpNup)T\G:g2&`kE<]Ub4`SlkN"KIX_4^l!IO"tCo/\BD1Pra(RE/M!V'-MgM-(s1.S[X;UG,eR
%OXuY1>F"Tg_t8e=(1oA0W5OkKE,j^Q;"2TMQqkDY10mcPdc3743Cf0S8Au!fUib+C]tIZVrheY,_24t_=^WI/..q&Jh_2XJkiD>8
%Hc]G#?b\OY?)B9?9*?WheJJu:H^N!>mCjj:0@q<4c><^F;RoZD]2QZ"@e1LV.DgF1ps,/BG-g&<&4bb&FR2!Rp0)t:%6;pWqRd+:
%C(7g;k0H8`o.fG#Yhk"b>O?%+[G<f\rqXU?=)FO_\Q<49gMGL@)ch"bB4'T;rS6rK?.1u&B(\GKi6P<scW%F![%JG"Ri3?onH$NC
%#Ln!kJ\Oom2n=ud_q`Xcq4Q<M568:-=sM8]_&OIAi)BhGk<I]6!%%`TjE`W`N7k@g6%%j&QBdN7_J\K++0Eddr7("\4_RL,@069S
%5I6;%L$,[@4M_9L<TXDS_cC6<Qmsl<&Boc&9-S$0Gcl)I>?GgPE.+<9$NPtTTFnOEFSkn,s+8'PA6U-$2@u9&c]DC/P+qagXGh[_
%h)Ca0%bmNi88%>EJBUaSO>rJ=WM"U+/(DI+[I__DUY7hlW.LY=m#M;%"-@c(9Oe&#qQ*i'Ffo4_2q)jr#`Mlj/PQMb&qS8*_,moK
%\V*7F))<+?iW1nQgD65XiuX#O+kfTn#op=a[7WSErncmoR7+7reEaN#G0mh%<H<e:YB-*nBf>:lJDOHri2"`a#np\P>:KBB8q@Zh
%Ma'l]-EBk"9#=6Z,.&5AW>i8b#7[!!?\k\Ya+iE5(b%2ca'dr8]+!'$'pWI^YE_90@VnhQTZ3)AKF9V+gU.A[<^.4sP_b!DUYduI
%Jkh(5P'4s/AkcYa@Net00TD3Jfu9+5&PSmq\T5(^Z.oUt3O[9(hZ:YbHaU0d?3qKt?>EMk-HEf'2rrmr9p<JV?=/eG?&OiLbecEq
%HA$H(nSntgGma(a14EP8rUUO_=(il>l`G>,X[.3G#,'V+fVJUBM[`>.mL?TVG&8p%)fWe$0Ph-+EPOe+DX"s-/1mcg!5Yk00;mm<
%>bV#W+7K7-A)km"S<?gJQgZE,$88JClL6ReA^\bRQgHj+_LEX*H#<Xh7=(6W<T_o*Iu&#,rUHp.]h58*0mXS/(S+?VIh&Poj4Z13
%6@nVK>T1DVi!W<c!Sf!!#d4<B493`JCj9)bU2b9;_;qPT@f&'\e4"V-n:D&W3n^rQRm9fp<c,hHiDm=D<l+?78]S+fdkWHc,>0nB
%ZYYrOU058FF/EeXFE=HjC8PJ87bK1-Kg5Sk4Es0;C064)(^??^6d^=qX;CP]mcb2eR0c3XK?)q-^8)K$O/`f#Ane+Hii=MC8M-q`
%Yeg/,&(O]hE>@I?<E70K;"b389_l[-U)?sUBo9'\FEZ)04Je]9p8n%h$;_Q>%1lGiW$RFAl88QV#;@RA$`hAfi+IR<!UP>V;(q/[
%6NK4b5S4BBJ1ujG/`0NXE]W(6CZ<kg"e]_cK#rStVI]l&4lAZKnprH%gOVjQE=D0f-//Y9J=+,\)n90=kp<mj8OdO/FW9Gd;`r=R
%n['(E>gN#!?HF]4P_*)c$a=.BU^BN0/U6b7i^LUN"^Yq@0,d9cBS!*AGSpOqMT'V`04G4i:e.>>AX3>7P$N*I>'LcTV*G"<gP/?b
%0M@+d-928m/Vq1:<>'f#k\).9oY`DDAAL`\J<qkf82a-aR3<io!#[NL'4jTWDQ39-Wl.lp@,_]'AbmnZGDl)p";q4!&BF=eKm-?I
%pp1]jAANk9FNtdg60t@2&9<*;:E>dbIk[YqorI3H2pOr6;j_8iC6r%RN%1klLqO.)YERmKTXH9H*XI6-PaP;.!XCPYE<B1r!ekj6
%??r4CW!]33\khUaJX3N4fUrp2W'p_$UEif+-06gG4Y39LGeHocQ,N<Gr[O9\E+5Ii+Msd(N_l)eaC?*P7KKpEK]9dU]NZHDW.uaU
%YYYQ3Ujt"1TL&i"8Q6o>'ZgGW.QS]hOX&5o"dm1!]4C>fAEJ;:/sXr0!!T\o_&Q@X!\9[?p3]ap%91RP2$7EbPCBHH"]i'`:WfR-
%WLG9bXb7%J:cD=ORZ#;mC0""W>,5cg`U#>kTkp$SZ<l*Q$'gYa4\IK+#\rY@*"L2(_i,qdN&F:\FVI[A1;$5`H@`4AEf4>F!%nZ;
%_m=kS5c^WA./7n>EKR[?n,Ot$SI#])4:T(CXe?)*j9$Ea)F^;,T<E2r:gBZ[M4OdIVZ@N0c[9bk7H+/Ra(LRQe(EWAX(,e_NfIBc
%a8g0V3]g>$]<ZC!"a"qO%jP_"J7KoG?AVpYFF#>h-roX1aSAsG\A-Ys(?jO,3^IqA#%"5.'!%0GA7nF\a8n_rmWJ\f#gUg3:/M,h
%#KJ5QL41!@_'O'1%j$p,ga]th;Yfh!J&"H_&Dl8L#1ABR_BGLDY+$O9#4WbFY=T$C)*fW!PMEAf'M'-)MF3n)-;Z0c1@RUg5h]$u
%5XJ"2=@uCb9!n0ph\%*nKjH[Z$qcMD)jD>%Uke"91r:oeqp\:*@>$1W'EL5AKf:P_-s%g";RZ(kOG'<dJWt^bPrs&74@u$,2i$1\
%%5MSD"`c/<3lrF8T9MPXU</K*FK@,0F,4<qDX"OTVT;WV.q%BWgqq89ENmER?17q)UBt9M3-'#b-EnVMm6Ja,.QP\t/!b)4/@[F`
%ks(W4cp9'R;hpJl8lZj*jfdUP<7dkhe6GM[mF>%G2&g-]gq8YO5Ud!frkTic7A1E.#r2n`m?rN6W4t5J^^9mY"&^(P51t0Q"59q.
%)B!<JTdo.p76DIKK0a';YnLjb.u@5iaO!D2SW1/m_,F*roLXqa-=0>3#B7V]bfVIO>!hQj'?Q)i$90^^V_6dd3-MZ3_QgF_BBLo'
%4$.]Oin;FH2c#J5cT`UdcgIAF^2WnbktAJrN^&CN>nIlnChQb]^b:mXA8<VDP`_Xd2sHHETm2h_^JIP^7DUZHKGY6j9-dg&A`MHB
%L*M=L+7IX98S;A\abW;VJEQncPQsia"GW8d5,KNKDAX>sO9Jko`%&J[BUY%PW3>,$+n#t37;!P@HEDbNUWihA#62hH"c/9p#X:<M
%Rj?%/6j0WY"6$S$MU;toR[Ql]"\7P4[+Q@Y:+lNej/6OG/F=5m,+,U\&5eBoM+E2m"]N>HWe_G/AHUp&=qYgB*'"]mDP1*/`X\l%
%(R#H+T.hug@:#HljOb7p:n42VNJrZ0r)C<O@tm;a3ClNt,g7H\MWe!W&lHU>MuP)8/4!B)[qgM'@5Oj$$q>=i&cFE=E(#q--6fQk
%N(%H"0f$r#0XFWb;UgURQDE+tN!5G:cq71;Z7dbu(m'kgiPZPSF?u_H()]@iT(jM[/VpdbU=<1=-`@!&o^^VZ(fA-]`M538TKl8g
%(2go!q"qq09+%m0[tkZ/PeQI@L+c0Te$!*cpTO?NJeBBP`:69_(t"9?T156Z:>*0D)7iCB3p,Zbjm!?;lg3ES]u(5J4iJbbd?iP>
%PIjoK]9:XpGY6rk:#Z(+!3dmXi%P-5!KRSA*"EZ3,UeMRTT&+GKa%m2D[6n67*p3OYpZ,3Tn4l5"hH?o":Z2+'VZeF47_M2n;Ef"
%^Al!lRe21LqqK=:IMp6DbaA7GPfR20aB&1gChn.c,?=UPQ&gcE&$Tu9K;:h`Qo$Ed!iqmuPD0322P*OYp]_*s1;5L%]8dJXC/Si;
%mgKCk5;rTJ8?N,NM>$\gX!VA%3!<2P[;cJb)jgon'o[>j#W!m_)@2Q+aXgSHV4lL6W<s_0I^S:hl<W2lq,-cI[g'V(m-d)U<^Z^i
%W`=$0je2R#_P-YXnpdh.%61j9FM$qo=g&cfmcPWX8$C_YqYO5EC\;F(CetWopLq1dN=Y#QpH)]J!sb0^FR<+<-h[AI8&qi#j!$YG
%>>XdF+m4LeD*pI\F!J3W^&V*3pVSFgl#!&AckT!@;!,*3L2s:h`jSpmJ0]<,(2h:CA0em%^u>0,UG,:oP:6?AH74=:b(.EA=M)*0
%B#$fXS8EBIY#W*#)6a_O*bL%LekDktR1PA7og,DnHjd8_`+8%Fn[I7gT1qeU*Hlc%/E/-@:<e=M'lu,kB0dp;gYpajfVi>cLjf6"
%Kj:Bugo\s=_35Gs:d9=K72@mWoq&$'p?Fp$E&)`%C*I!3jSo?tFWAnp6_s3^&mbm#a4#Klm6e!1au6,K,O@9>q)WEeg6HW809=A0
%;'psnLX/Kk'1ara@6<[2gDNhE]1uL9MTtHfZU7gZAPe`N"9kVOP6#o-$I<eZMp-()1HT*/fe"tk7:u;#kkmLt]*q/<OkEGjZcc1?
%>9nBuQe7k<"&O^Jo4G,28F:$2kUf]E7;B;&mH-I;1R/s:gmei<UJ*ird<Adbs)1M3qegjAj:1_7WOMt-&N@2!i^R!p^UUrT=DSd^
%rpk,to,,NW_\PFNHSQarC:/eC/S#togi[rBTGjER)P[aS.\:R46+>@eiYW;VV\U7IYY7WSad&J3$Bt:OmQ\BA3s0BN9`1ncP>dHQ
%,E#l.._Y-h5!;%:LD$/U`h&^3XslB]KQe^IJ*ZSE51f<bjcf52Y?>+jlo6RZ40<f\$NhnF]n-cWc[\pKF_Wdb%'"Fc?=XE<7DEQ1
%'%Hpk^1T^/*Ho"[4(H*]HVOsFG'Mg_l!`&G><Q3;<hFC>'/XIUR7u?DB)?b;i_m/uI]EVX:T!DTZMSa-J$7_?$uS>qIo[X/$-Zo,
%2B+]l3\1#3oo#rFfBLe:7U\,SZY]en\55*TV8%rj2X>,X4"GbY6)Yu#I0[G_G3U1'ZhZ%\cC,Kh:a`isUA.egeGBYCc`9ofVJoA0
%R!NA[6-k.8521H%F`KX!K/#:sjNRM>+1&X:mi-n&Xa>=6G-aRfF6b&,fReUTPFTZ,&O4@k+&TmhnoR*4?\CtoBqE.P-l2!-([$kr
%kE(2d3TLUX\1PuLbJ7Y.%XE%(H#X=>E=SC!.%WlYPkC!lFDfACj&tCb6]#r*hKX%sG]DSbPXSfH2dW"5Sq6K@Mt=qe;#VDQhDdk+
%X'.SLmrcKVZN8pXO[[7o7SGC]b@':Tm;p>TO!/Ve'&fXu:CFAp@D1OqHSTVa]FP`<XB(e_9Vq@[!E2XLZ<FoBHqX.(ESEG<*_E=)
%%<>(/0j7Pt()=-CWfUetn2I"6AhM5:1L)9eG\$cI*JTPrn8dJKW*J_a\c/_^XG>X)G$&$g[Y)T@F*iiAfqNr(W1RX?c\qYQli]s^
%L9gnh*I_S$SgF5.c-JEgE!lSK]C'7a3[j8RjYBQ07YQZ3D#6.Sr1/@7U9Q)?[^d*!oqkbi+A02\-']EII-@rS$:MMnhfeb1PV*'Z
%TMkp`+"5&;%[gW)QQ<p5Ip.p\r=FSNO@A,>;0Z4X?5A6]In/HdPZbNc,-!=rIp!Il(58)DiFPl2=VP3AonAasKh")b3hMfh+<?An
%B<EaU2sn'/+0%oVI"g\%m9&o591IC;9_5r+7@$XPApqRS/=SfHqM#_fporDT@[8W7RshJbe+R[oZ+F#cCYcn$2R;2RE/la@=D$AL
%/p;;>36*JE=YoLhZeO;iDk&_H(:uQ^XBh?FJ?OkOS/+1G9hS1[AU>GcQIs'qibaZoY9VMJK8.43+Q4A3L;ojqkE.2O7']>%?U&h=
%@4Gei<H#\%@'_"2ld(2@Dq=Mf1SM."*j!RAk',:4Ro=0.CjRnQ785SfSGR.V10B*B(*?PIU6E`O6^D,R3lPdkL>8$?4?r:f?.=UP
%=Nu(r_q^V37dfCUYCgiibdQ1cY;_qN^>aP-X<(?DeoTWrC^$)-p\UDBcP58acZWA*pR@K(A\>6rDY,>%54bL<4pp.OC=1@0lT$qq
%OB'#,h3m-0ld'HjFO7Q,Wm/;:2p8Ycq!/,"Hhu"Bh<08pB"C]WDXTesD!<mr5'O9.h_4RmZfV^u)gJ]RT"t`WgW`VpGWs=>$D1qm
%DQ0,0h9I5$REp-@L-u5)FMF@T8i>5TmJObK6N>'mFr!BkHiulrR-9k=ZFGO7P`oD.6,';U:FQQQ'YAj\22aQ;BB(>L`?"$GEKf2;
%%eA<GM`:Vf\V5*p/a'XRK7#SIj5LR>fl2t043/5PEHZX"YP!nH=@)qsMb(0)iA;GL@s=*^)J=M[;4J_Wr)P6.;Bg#0"2V=6gM?Ga
%%k?Dn>GhASPF\V*e4HileuORc/<@T6S$U=a-,V1BZ_/!.mI4m%OO%sZ?=3_HiRVZ`GAH$WW)JPPgPrGp8ZeRU(fS,GL"pr8!/7@9
%Dq;3ndWjP8bbF@"kt3;ffkal525c8^Y]!C^A=h&j__-DV0[@>sg4I_C0it@!UQN;$@(HdDo$!;_T\Fbca!!@qB&[E@no7S0g#%9L
%gba.eme=e)]a:0=XCd:(B7?2+hcFBX$9AFlU\eJtWVpnNai)N0B+E4Pr'9U/o,;`20!N5l#q0e\mG'g60]s5ajKmWn1lpVfO%J0O
%>D4=`)=AiA2_CKqJGLU<+I'8mk@*,K[=;+0B-'hUCUjl:B"Gf]4a`O&rg;t6/T)452ljmYpDT<l\MPOV4/_-T@Q$G[[Pa[dVCmh\
%4@r[aWY^FeMM&A@T<s5?k<-p$(hQV,J,"bNRBLr7=I_;@@HWV$I'D*p2j.L35)+'4/p['RogOW,Zgt];`:EY-@elK9=?J][4s-Al
%g>\etL3PTh4uauYpjU[N^T7:lkIW;uq#+coq+VUhl.d5EjV5hr6Jm:IKt]@D=?#(&B@=ilG4RbQPG`<IZRg8(\SPl?b3&?#BSW^9
%OQ?i3TN\I?CYuF2=kn.G`JA8R?>F**`Y'[2#2N1C1RH4tdm>XEY=c)pY5Xs<R*<0as(PnUNq-,jMZYc?X?''f24BLUW`?%jY']ga
%9.;4<H!4n3CQ1$hY_?g<W)r\^=Yf_>f4cBCeGg#mB+R.\BY-PlA*hB%Ve=egRj0M.3k$/18F&pKl^7j9hbs^c)R\m)HLgq?1%Tjh
%ekOnl0iM%7l\1#LH1kct:,4@mVirE\MM`<9E#nsp/hG`Q#Mmi'U$IGiO)3FYK;J1gf^[9a:,CZaEmk]Ks1o.Xdo<h!^(bX^F2(l@
%1/nQt]$=k0_*[<#3]C7*:mGjNFj3hZ7%.gZ\i4AV^429&AKX9#W7H8tlMn0M["@8+[^g4^2Q!o=k5kR2Ze`3/esdHncC6C:h_2Hd
%f#$uh+Mkqc/M,ero$**S",gf,I*n1L[!3p%7,'oe`(M/UNRKH1')d=uSBcR#R^+afN@^Eo9_":1Ce/*iRUh:;PGgqd,VHuN%ucB,
%c8I_5f;b714sp-NBs=hoIVKq@L27CaS@9Fik5I"/S$;3X(*$q7e#=;Wr7ZCfp7%uGF1fUoqC0[))'9(=l$gtPKPU!7/Xa5MO6jS(
%-39_?ZZr!_#,,6`c?`4u%S2E7hddZ(2ZlqV42nj=c%a6>QRC!N=CeU29Ja[JCt9@tX^56Hq9L&Fb_H<[DI87X)WON?*mOG6&rR!8
%-?*'LORosQ@3-K2GuGd(H.,Nh0:p8\mraZ^Qj!F[V>"S>9/LE(=ZhQ42aXdZ*b_fQe.5pZoNNt^RRa9<iO7%NV&E8C72M;*bbT_q
%>cP'=<9(Fjn;HI]h;n4ppH6T9IaWgNj32Em>g3dX(:i-C=.A;Vm2,6V32Pq&bbb-M\g%k$Z[VM&^:<uL,W>7Bo1=Zu<>QC0WTQ=#
%MT/>E_TiUhBOnqf;:1caS9Nh3ISnKp<&A3H1Q..1U8"okBZspSK=3AMrAIXSDX)5,_m4O-+l!"HH`^$*qTSc=FkhXe2O'\2l,\P'
%^SB5>+jl^ia's1<mB[aRA#b\n(/Mr=b9peB-Tur%JKBl@LfZG/1h5agEtnmgUhS[BOj2b-I%b3CA;*Id\&e;m52XNp,V8N"fg&u.
%n')n7s,MI[_kjr&HuIa7?3V`.d_4=,pO;R`O;A5\,2l`OI#EYrOmq2nK[8]goeFS+:W!a10B;L?Z$UqslV(qRa]lFbf.Z$cc1BIS
%Q5@pmTA`h+3IB?&9t>$7G<]eS3r9oQT_pm0OT"/Z*I_'8qL_R->*uR/bLOIS:#eS9)e?Uee--W-l[P,]gk:#FDLftmbE+U-O+'l5
%^T$+ei,eh[PtZ"]FiDF@_8+is$TuTF1!Y]_.p:lh`L4MkgR5jF<NLIc4EGs41W,28SZL/URe"A#Z3]"IT9$YtdD/lhZ'lWXR0B"H
%5>u`ii=o5\12&M]qJfUJ/(s2>K0uMiT9nLni/cnW3+U1gVGulgl9Q`/%NF7&TJ`&g8'/kSDW%RaqDt%BoJK8i-TfV\&XdpNStQQM
%2eN"LJE\gor%T9*FU$.8913((-d_:Bj3DJq[k&'iSAu)R1<J1mS$3<TWjsim=cg2Y%h-OPD<L<KFdD@eW8"\(R=UXZAemV\S/r1-
%OFks'QitrSX]t[g`NR9eVhJ+TA"?"^0)hB&R#GC`s4"u*<"PT__jG!K61-T^1`FV.(@eG)HIohb=!+4TPit4][-G%g(hD9LY7f>8
%qop\h;'ieK$RmBSaIS#$R6h8.Dd'(BotQ.J):3qbTc:?pL)/Qc=t#rN_skDYFQpG=Y@kHq^-:Z&,&#K/1TC;ihZ^h*fT:7K7dO`5
%!tq$E9tCr`$Sq<O^6mq2;)5CbeeLQs:c=oW92R/tlV`td-=i$M;.cVESjg!J`V%IN[3unZb;m*K-'M0Mrj=.5+s*]<Uh`i5+LAQn
%AT9<Es2*OGaD4Z&J&/N@R>f52S+Xb..'jgh0<Ra3)>eSUY=6PY@l&&?DUPp@=cf$fXoFZ!C$+rSRS:Bl!UZ=&0B`5K=dcG^>&[sM
%G2/H,7f6:8V?t(ug=;;YqpS9rgn"08Z[^TE]B7M9AZ5^UbMGIunR7;R_'a&[2FV]$Hg;2[40pV_s3/i$GguRa2fop.YV:/,6anak
%@-EohD,iSJ2l`"VUG`dT:7jHaLG2@;-<a[im01/F3-jT25G#@JR)?rSlTKJWTH0oW<`PW%@BRuFFY7b45pNl>PBtTY!fW<Qk4iUE
%W7Pf$X8o!\8[DQL"Rj%HjcIB@mcX-B+@%+[c>Psb"FQ$A-j]>[SlsI"S>n"0LG+Y5[/>7>>s@DY]>rarornPPYhNjjh4S,R'$FUV
%fuU.qM5TD(-4J=ij4\XV*_)]bg]>.2ZU+A4'4?_Jg>74t?T[cE$afjAGieX?mlr;4lCW%bLqCC#_T[c95`"D945=6EBr5TT!%@<9
%R]2eI/6-#a2:HO'Ml!G^Ac?Qq%Gf/.jo:?WVP[+?#Kc%/QJi\M75GWJFl82;RQsI@U8Y5KLNHTrnV^g;LAjDfgn$)iRc["_nr@<t
%(6["N9a>C/fW(^>r$dN'CA:6HFHaEUnr&5%m,&>g3uNLjZo&9r6J!2_eJX[cDP6P3<gI0X]I501^Dg_,SnNag:O(cHYZ:RQD-FI\
%[\^kX"+S*.I(/$aTtkjcrnu8655pM"*tbPY7oO4<+58J#7,QE590oXrh)0::V!;@eYXR)AdrO[\R_q)@%q2Z%`h#:"GbKdTRI$:N
%K6l2;L5apH).I(pY"aL\frjTQ2RW[(B[IRF0Pph@P#kSMU5$\;21V.(b+Fj&L'a(jY5O]4P',-DIiMLD;187mXiTqG8K0[jb23/W
%)*GNCoB_d)O44N[`Q,b.pj3Bu]8n+-LmD(89i6"sCm^GT*6a:KP4!o\7#d2^+0':mkg<m72f`,`!M!ERZ"dCgUu4.:"6X]0c+q[/
%FU=0UN(hF"oV>BaW+E!!<-<>N'Rgi>CK=-U]ET'IE<=Ba9N5,_((doGHS*fK#oSg3+9PI@aQs%?#-a7!WbNHP#a=gmXDA$]-0ugP
%2!D1J=<`2JA'D+u[rX6m@j=N0:RFh45ls[i58cag-W6q4bp&W9,iL<iabFj<QAQ=f9-HDlT%&`HrMQ4iVD\`c=:-Jo$]JjL((q*+
%%oFCRcW*sc=eHTA'3Bn`%&/gB3XQo`=aJ':\dMHk0$^QQ@ci/LMFeMYd&<BKZWhW>'3P5J%4hOd>6@kKo9D6PdYQd1bbC1UWsR1s
%&/@YiB9:3&0n4bD@Pu^c7fa%f$fD%BNYaVh'K/e$PctUc'"JXh-bCE8@d=oba<-?'pM-8e:H5%66d?ADA<Ht-,TT#HIXTeKj&H%3
%R9oTpN`n`A<bbZ]GYMHmkQ::?:*7R^oTAo)<N^k,6nMoiiR)3;kSt<Ar`@SHU/aYt&=-)3Q=-"RQgZgnVr*)LB7454#!1dqM3Y@P
%RSN_Bglq$)7ZYWZHjp\["d0p^h(3mo&4FY.%qbss9KNJE^O!5,'i$;('-smLY7ukD:5H/4[\_Gh]WMEN)/`YF0X>YAlHK9JUTjGD
%]32q`ZQ\CcB;O5E2Qpc/r;BY.?0_W\>G;W36^(eRrtg!&4Se^/s"unt99hU%J'WXmc[dD2e8(>=A&_S%>rVAD!dWLpUG/X-6%%[+
%.K\Z-N7dMt%FRqkH8TI^@M:CnB/!p#0iLs:]OadT.bfS#$'<*#,A.!@bqQAbTMEEZe$C;+P5&aSe&N!g.Q!XTn2b?.+kkQVcasGL
%>)'_\#aiFo1D<lP`T.C?kRk\<&QsY%RgD'W_er;)OR!\_j8NOrDHB9_,a6FuH;g"O<OP^7_^`ggX2O)1&fp_Th:t<"gZip&7mX$l
%[VPo>Rq$J/@Ad8s7JFn(IEg97rNL?'BuolB&%\Y/`D2.*5J`c%RlPIRiN&V^-X1t-8!CZ:9T['E<n1GS;M*Q)f?3o3:oLT1[W@5k
%YS22$M9K4I"=Jp5g^>#:^#1*Y*B%-8QINm&4/>AqWteU7rO/KMC*nb^D*bkdl#40D3`i'#&0OuAolcKCe6$S<nhFLbm@;eo2BtO9
%9X>LEk2q8=pT,7>X18Sons.[EB/-k?&;UHe:i]VH8FW+apPX2N6@Rq,([Z0,is%T&%[Mr_gl\qB\TUq[R+O9IcpT#:Bsg@<DEDNR
%>!X*O=91O!eQaIKkf!.XLl\3B%E(KpL&bsZV5M/dDQX_]5YaBug647b>cAT4N8*7,ge%:5DQ[6HFb@#(^"/G\SSIDL*W[dF\em9<
%"eF\,O@Zq<W]/7UqGGo1eN<;iBcD&FJOe-ZU^s(S>KMLhGjX:+YLN]941Wt028K7M>M*h%EEL*:6usB'm7o15i0L<G^k#Fk9]c:r
%_^p3B_Gk.m_(]:#cq(h5"\>`M?MH+R%foeSSOXFt'EGV?b]UMak#LK'QSgY(jHFd^?[:CTY?mR&IKcqV-/n&!OVg!+(H=Ft_";pP
%j08M6ke]rB>M.dbFm/>a80R91f;o*t[!Se/aW;gs/E>/Gq-0MbV2tWg7TKScT[Bn'JA=If`(:?;SK<DDjP*G!eSl5>!*431!"M.A
%s/4C`G7d$B"89@5)h+Ep[S"6a!nG45aaZS3048r0NZG0?C.Ogfkit+\INSml&C=0.A!^n$7;PSYNmh[7?DZ>XL=IG<jrQ[(G14M%
%bT=[0#Cq'9]PNph\R[Apjhp-6*XWDL"Hlj>'T@7Y@b;H&q24kOLU!?:+-p5-bCQ/YiPfJ0L:)Kc"05"GfkACDcd`rPoOb#PN<5sN
%qdHn`]1sp4(G?>mj'm\KUnc+%&bf,?@k4]/U`B7OoLhSML8[TSA[EjroOt%Z1=Oml5C1;s=VrTYh"s?=Q/e+Z;YhPuh+hG>P?aOP
%N*A89(gM;&AX&>8-.Z)n&Y;\2iCH`+2pX^KiKJ@`>-pe>UA!eDo.5AllWsg0'@IL7Bgo=Wlf.ajItji.H%)@JS5@3D,PtgQmAnMt
%Iru#Vl03Pc&/:$2GpfTN"2k,eb-qW6+#Z?*X>Cm3UFpo5U^7mhq',F3TG>3p4m6+OO](a)81*-`LlT_\V)bMF[5Yf)]$;G#4PK:r
%*>)0IN<*%c2/2$pON]='/Y.:P18orpYhs0hpBnOrr>Mp4pl9J3%<4(^B[@-cgSH]ij#T'7M]g^uJ':mD7$7!@"s)$)W7PN+4)]4l
%^1SGm]06;67.`HRRVKOd5&\G!/;%QD'*Z*Y)"=oaEV,K(c>HNH-CLSR!#aq%6\HM54&iT`,R2e&`S6h4<+-f](jrNN$/[>(<EcCU
%?W/sYI3J-tXeL@'a`Mt;`B)h$^)ERJ]m?"b8gn3?iU^N&d4\oL`q4+JOW3s_FspPEM6lbubdch4WGf15^MsksS]&)p/(1i!N.R(h
%o!4H<7eNff6VNeV^#h;LqBd`(';pd8<O:NZE:JiI-RI<ioL[k;5'%TP&4Ol>],1#XHGY<-7mR_eF50'm*#&75TlESJYF]He&64B,
%m:ljaXRstVFKZCF`cQ!R]p^<#Rd)iUiF$Ih.WHem_BVL4-DWuNQqfVH2=/gF)T`W4E7/1P$!oZEY'F?SBBg=U3)U]N8A1Qi(thbl
%U=A5)*`T;^F`(:Pbr2Fc5rpb@3irgm+Bb"`1e153aj,PWU"_S\<L:u(J&b.`_0D*/&uZ9N(9ebF5aicJWa`DT@uM's<G=k8G2e\B
%-K*RV[-EqF'B'#Xeq;Plft+S;.ZYH3gZ=gUaD$A<XC7&Hrm[(4q?1f8SfPJTF7Ou,qV>>!noPQLaA.$**9mL>V-rlEB<[+dMY.e,
%&gdoKA)87Gbu1/L=S#_V]K)!*l'NgVWCF(M<N3<th8qitG:]i_C:hs8nr_bRH]?1X.#L*CPdSsXVc),l=d?!lIiiHhih"E_AJ>l=
%Qo&4[Q]'+]$b<KkY]]$kDXPF5p@1FDeL\UEe^cQG0g=A7'suqg8NT)Zh*<=r^Z#=bn@=?%6)2iOcn,tZfu%VTj@SU)hg/7<a3'Pm
%Hfbqed_WfDR$u==!oR1A<NjS%%\9lWdKmM?2J??S[gUhecC+#^b&_%)*HW\%l<MkCi!UK*A#(Q1eV*2@OCYa\@?^+!*laP;k1MY[
%Jm>m+/\.T)EC'-!p7JR<(q.c.62hl`K%B6\ONM'P19$^Khsp[-2`Q3=#qp8CJ^RNIYLF']c7fbSaHo9Z>K=RhE$#/T)MjNW"F%Mi
%fGlha9u`3L6X?^dBUhq.G\\8X(@8r%O1q=@lE[4_l_6Z"g]8KhQH*g^8^qS*h%HWPI\r!'CL#CO?')I#V#6D5gPr6RhIY'3JC+[p
%^<1FGBFLKfks&a4r/f8@C(aG5\@B6>QmI9k9"4@C),Ce2^0fQ<rV55qnE/\iIeR6XYh@mE^0J9`gtM::4^>^&X9JFF*UDgnZ?:M2
%oB"PeIH0SGhM6ITS*aP$p<21(Z_SMZD+3]R^6C5k.X*f&5NNu'DEM`X2ESP),?SQ!IIC3@p=eaH/tTc/gY=L"j'qEGP=d9r^NVE:
%emA#$/81CJV)A/+<k%__A&3E!qTuilmWCcI\sFpCXP5nQADDH9penm$)O;hC.m%B2B=hZckOtqmmlu%E`VcdaX![_GIGEVfniq#p
%Fn4-7V2%],IsJ)@%a,Esr6M8G^!c_sf63k%=b!c$?F]>;0C<suMB\\]Q7D1Vf?K;QpKmGZ!-G.6l/GVT^>8`kg9,>N.]b[<mWcdQ
%[i5aoS"SJfA_\r^/!Y.oI'Hqh1euX]]I!OE9&]T`cRYL(HS>>,fR*,Ke^!R*oh$O?_JciIo(h,g0<H^b!kVaMo6IJ3Br>.500R"X
%g0XU%oCe45IROD-Dm&P6lEH5Trp&O@f;RK:??s2urlDhQn@3)bO#lI8f</qj.p$M$1hEMjds2+]ZgWVACL*pBeV]Ch@'[BDG^8sj
%=K'u0f8RW%]qs!5p;ZLOjbL!qG?^BAhcmR^fZ!!NQ&SkqpM8L9m>j*mPK"6.oYc&p)qjf=H>U?/+K:qHY3oMp69nmXpD!;\mJYJ.
%@,nD>CZSh@Qa-%q-^ob#^bX'c?eYe`=F&nELi469bIcQEpos[aB@G^PgE==NPa*Ulaq(o.du27UU=YGbeuN/LIj/c"&Arl#"]I#U
%]a?h5#TmOfeE+_@fIJeWc+I%)SJ&J+@HXUu]sGFP]T^d1Q.#K'h65o_\9FiYS\9F0*\P-OkoCHGLSaV&g=OTQ+4i,QR=au&jHKuI
%cDnT/T;jEF$H=%R^b:+]I9N_#Yo^$>?S>^[`Ua<ad.#.igHMVqiru"6YLgDC_;9fM^N@6%bLDZ]AedQCkdL%8<h@#4^+r;V/19(T
%5O&1/Sa:HFK?3]t2aIblN&U-.EiNWrTS"HFUfDkF?+SBHD`fU#reF4=jC%$>L0k!"H15dLcu_MFo.*Pj,]b7f=F?]HG'ZP(`$S'U
%S\6WDF@RXffiVsjJ+f5TGOqE3EUll:J*58b6^"=&eN7e=J,+!JIdtiI\gjoMjo&:f5nDg1ak.T"X!jp9TO$/n!P-tZM\h`ANkJbE
%H0!ZI[+G8(3.+bVQ(%WSXn(bp1Ns[?goGD'#g7H?qpcE82G`++@INU60R0R4U>OO+q](iuX=;khYs0X#h*_5A@=?rbRI@MJ-X355
%2RXG[^oMMDQV42]YZ;9@OmU8kcX&c1<D/B:[iQ6tFK=#IHK/#S41T`[#NjZEM'co$+#]a,rnUTO]m"RIGn5XX]N_U@p+D'`]O*_7
%pWN\`S!Rq(bHKbbP850>f_p&hqjSC_hk7[_>WOYn?[FGm.\1[r]ACrWqmuBq^:HV]/bTR^9\c>PUMLXIQ<Q4r@nU*&R/2"s%tZ'0
%^pbR_\#Ptkb0,j\^5b?Phbb*OjfX"4!/AMr*LtG+le@tOYht`#AjPh7hg<D9GDbCYl[@XFGZN$UQd;kN*ph]7W:,&1hJr#&LlYGH
%Zt[m-^"KQih.;lu(%p,MqT"=o\*`#0[X*,mlq"7[?9_F?9+QD]kNuaqI^V/nkDNiXP.t'28+0\FJ[XagH0J@l^;2Q]-oj&4V^T0[
%DSb)66i'AEQ(=sj8_LfG*f;oL9+g$\*kYbmi%<S\G*h)K&O5_#Ni<JmiQ:OnD^Leo!#b@`(LkqFN^j)l"nso_b.n[s/\ccBDq0G!
%g-+)=/h`j6gNtS[L/;=lS=GCH#a,#m`;X'\^>19SgZoNX+EbuEHRU=-.PWo-J@cA_092H67%<a5P&bRpM'9#eGU:pJoi$6'2us:r
%kM<i74RDF/;kd9;RBbZ`&1MqAjIJVP"anKXJ!')\6B7@'iAZ;B]3BW&,g$SF'u>`(#JSVA"4DDV$]?;a'2'KC,TrH'IrU\k:>jS@
%34T_h#q$3Ui/5=eI'GrWfZ<#\_0DA68KX$lU46XP(=S,+iK;(9h#r.U;FaVq-B3Cr.'\p(U*d4h&EO2B2"q[S,%+#8E',<k!d%je
%&@GVb-^%j;IuqaI0_!NC:Ti$r%$R\^*YW<$$"=mWT>i*$KqBEkmZTeA$88kbdbs_Tljth6O<>f7/2p4G8gt[='(V8Q@=_1sH)pu`
%$rER4-L=$/Kg7m:Ou?^-;oY?kL%?Xi+#@5*!OOX)dNRlXn)W#:".&I9mtE-NR@J%aO61`tnE1U7roa6hC]:F@q+E"r>B==?Z?cbm
%X4#P\le='GMR?6X=sE-.?-%YA$e@HHo^9JeJ-_J"R-8(Y[kauL9*gX(i<`dFML,3'[*sKn\M$fIPZBJ5_e]KTf8#G/^=u1I&^'Lc
%=8/!gV.tGI,Pfp)AaK)6HbO-15'g@X[bSC[mCk`$UlGX$XS.Qb-j#kWX7fnsSX%rA.RSo+(t7_(JO\VbU(fd>n"jtdo)7&7[k7sl
%aIH#>HAC8L59MjOUQ*,.-gW?ZDQgfefJ*%U4,p!:LU98YiDZ9?;aLBn7JO+2:BpWJS4IMHB-0`3A*Z"J5W`%r=bX6UfQ&i<D;J:Z
%bM1tcLP+01.%,SESS5k<5#TKjaX[')jU_/8(!M_7"_5CTU5_nOEAlR#q(^YVS\OA.5H5a<#;]N^>%F^WmB?9EZWeWt:u8"SgXfeS
%+Vl_tY!i&R3=caE6@hU(PqH,+5@m-+Tmpp*]<C,I!B"'V3^C5OKmdK_USte;<PMYLIS58W#YB8;o"@pl8rbV_kkUA!#Z:9fj4.6H
%qGWko$C"r_<hXD:]T9Cf\1Y%pUTH/,`$6ui"Q%Dp@]`S89'<8D&%2;D\"@)q7q,IoH!d^8Pu$==JnNg#o`p7s<*?8.f+hk09ALa9
%eu)lb9N&i)m*54Z[sr8&rjo`WM81$A.gOr$<qQhkg>fWMq=9ipMXp8^U\Bh9HWjNrG&m>I%n&2AeFW'?lGM_X4-8IuS*fq294Mi=
%oi%;m?$X$\):PpdEpa^P7D5JjG0)gZ'qQ/!?9qF1^?e81q_8UNo_g/`?/JqI%\-pLn8#c#M6b"?K2C6Hp=D@P4MS1N[WZBbR\aG\
%@B5Gk>%hl)Bh3SpFh;noiRSpCU8On<]^i[gX8S;FA-EIhNAM_@'s=pa\)ILP0@WVQXV]:kort))CU`0X"7'-8;,ZgeHKE<"f=Ss5
%pIj96rD2V<HbT5`)iXaHMrc@Neh$9mYgmZ8$C'X:g->GliT,;iV]<(eSgsV/2,6lbC5e0\OsWCtNP+6R20S;7o6coD@k?!)a[ol*
%PII]\6;W@P)d!6neZIhK]miX*H6h&.;5%%'Hs[#!\+W$V.;j1_FFE09`s6)<-XX'n'O9GIr;*c58k.\'H-TRYJh%NX$n%\e(N2t0
%q-,20o^P\gUMR^&g)qmgHrbN0-TK;m]$#-ueiHrZp@s9&$sU)O+7=D%`Im2Kri!E>\b>s$(;$eQqR@MmpY!q5ci.$p:H#>cht,Vn
%o`t#'U4u6NKnIAOf/A6#fh7^FOpJE_^HrSA9`!r#mV[*Zq"^pt5_*8`PdW(m0;.\876lM3!ec?JMbAQM474^#jW(J5hNcD..2VLI
%Y."'%@_Gf+41Y5G*Sum1H1.9Y]lWP4hS+?tT,r;a/@V7jYY0N_?sP<h!?9k0YT3?FVC\3j])?(a&b</IZ8S"-gT,5<Hh!bN?<CJ@
%>CEQTWQqX/rr'<]>mRI[C,-RW>C!mY]NV=A]+<qu!Q4#1E#a(/K0!ofW<;lI+'jVn50F8L`)5IOeh'_ElDMn1"Virt"QQ<80!F-S
%>Q)3+Fa^Q=md9G&mBUSWIC--dFK$?8&T=g;.1b>)Hmi'fhDIs<gUE4!_kf$cAnPcF$[!3(Al+eN[D2-366Fh%!(<ORY[9ZbA.)Rl
%Mhd?G2d`,j/0LipaiI?'[^,SR^Al81T7,KiLTc=,:9>(l5Pa#+n&>.hV*oDV)!Rbh/+%Eg)kc@pIVWZ`_l;8?H5WOEBjrt9]R4kN
%^&6g=6'k7AhU0I-f47u9!.+igmG7rkrif_a>^QFW#0YZ&FZo@l]]Ob$B]djsJpH7"k;Ahoq!)emPtjYPSijH'0e[^9TdTg:O:mhV
%gBgGE$]9*(07Y:[fX.)kh@s9I26GEK_ilLgHE9J[o^lm>j%8RIp[Z`"7euDB3O6gY'S0'CpH.R\]uW/V6(d!,Mr)J^G[!?(98EDu
%i#J;CS'BKIB:qBQQ_YZIECJ=oUDoc[85AfkoDo"&o/Vp0a^r[GYgC!0`CmOa-qh/'[H-DP*uj,lN]Q9e#8Wm&8d+VP[b<boI+isj
%VqXr1mH:'f\F],u!b!q-qGQG/MJ:>_]HG79`B3M%YEdE%5-&0kBXZN"e%)=JnC-@X&@o'mUMYYNH#V@g(>K-3^cdI'cYJl"cgR3a
%/?Na^8f+s$]S5-O\PfS4pGY4raj)bu*,2rh%ps(:da%j82dfj^Xb(6$hb'rs)X,fM3uiHEhE4"-aLA_lFh[ZVg3Kc8j\H+o+%tcE
%NI3i;/@4lJFS_47:iHkZ45sclj:[(Lo<[a'1b10P\TtagChXkT&6_9fD"m-;Xd!0P1kKY4'R.M6JT^k4e%6,_hGIdt<'EB.I6>"J
%F>9*;"7RnbMfRqPVUM__9'>.pWf9AjF72ii0Tm4J^%I`,Ii%oW/FD4R=,&>;^?Zg3c&nCOa\/DqR8;0'r8l`d2bpIX2Z6gK7G1Vf
%IilOscUt_\]F0Y*a%m_+Bf@-+I\ZKnX1,7+rXU-WkcC)Y[kTR_<2c/#NDG%LLG.LILL@*cTCd];G7ENJlT6<>&>rUeH,jR"F2([U
%$]=X;/0pFrpW7H0q=pNRAF7/P8G*5d3)'>@_E0b\H6#H,HgEok^rnBuR6KgH2D7*617MYEr6t*$o/M8X+clR2/HaGtiA1mlecM9>
%=r<&\:6)N.<5or_66EB.:X/'iGa-NT]tp@27KqA,<qQp[[=*C<TQ0nrp<aNYK#$[-@K"O[aK?nhO"/]r)I#k20L'SlpY`IY"pN_A
%!qa3,htLh,Sm+jFlrFp&VCii^H2Dm(<g"<WmBo:'@$D[&;]uNJC5FRpb>,B?c^3sO04,2J9A@u5h9sU>Z7i;pp?&E>mD/J]!=@))
%Eqf"q/\1LK:I^^YXqF_=MIunZ)b"bp5.8/lgXXQ.VoD*^c"Y-M<j'ue!,AF`V3k<mMCLJ/4On3.AF92jZ_%3mPBIDor_n6X)"TF4
%0[XG<8;nkVl92!Vb@%ha\#o(9pT]3OcTb%oB,N:D*nY8#<fSV(lk_GUIR=>r@K`9Bmp=IC?gg2LS1WIBP:qeQ3XH]D>P/13ri0-B
%3mrE1$lo.YnJM\`?U2m,?^hufoM6Si)h1:(cl"1k`"P]/=qC.&gFLE0D.U5.'ucEXQM"7#IHkH.q>+Ks<%/#QV$FCuQ*pQ*rB7+B
%h'fn%L+9K+A=c[W9j[7,ps))!I(PAP*%9;ajg4V[l-tSt2Y0[!"Za6-o%5Ho/b!u@ldCLWnI!4E]9t)HEL2<)=L0H[=uNlgjhY;o
%4?_PH\&7H*K'+5&Q[%3*4\XNmJ7!VL]5Uc]pSIejEqZYS8t<*,0$ubleY]B8&=`=)OPT;qp^ce2m8-d>Il(EB]:L/&fphI:FQCQM
%Xcq3=]2=u[aSZ6IG\b8[W]0HkC&93tN@^k<]j@anqPnkIp!,RCkoDYU53%mhrg5B6rM2Le%-e*T?S%tJq9.O/L@t,Aq?XItjhl35
%eUk0O^Pt\=Vks!3:[b$[]EI\;"e1M2MuD)E0DRqABBN[gM\d8#G9u-lnrE"^_^;j90+0GG4''2]1b@BFBiTqQZ%;ep`k?DhpD:ab
%Kl.F4X>Z7dnD_?&n=p-lD;)hoK@bA4:^tA,?FOjhBVNt`o0W>GfC[@TPN!o:nd[kNQMo5L<Q#+h5Y6Sgc8O9u&%Wm$&)[#7!Dfd5
%&:a-FpU6CcB3WZtG1i,T-gU*'NSkfL@Ip$.gIUC"C3<@jK!(#(2q:-tN@HWOHYV(a4%IWVqTQss?Ko[@5.S(;^TO-?-&hnCYkg6a
%*@S4l%^'$>o1r@^Dc[gG."&\FZ[qAV!3TcFXNa@$M5qY#p@Y=Ff,QU5^+L2PrEuVl*5&n+?TC>Vh1)g3i@@sZ0eD093_&_#?i9]W
%+[G[/'sR_n"0oUC=].um4hS>'/*6^E(BX'B(JrFYDtE;Dqlg"f8UScjqT?_hmG*o:o!&.75``W#eq:uH4.OR#f9/n?g6$8b`>dUN
%V3oY)DAM,#ACBS-\a=^V8(YmBgGuu2l$(o02sesc]ZBZJjIalg%#+I;pgI7nb.dg9H&S+l_nIMcT[aCMj(C6RVn?#TgkGM9JnY1Y
%%%*TmCY/H.hr8kt#hn<Vd&709lnB,#h2r`,QZ#jrg>2N*>uf[8"qn]qJrI.^`;O:[qR1#(BZ)j)d9UPdnmc@-(JUg3%,hJT5Z:tl
%I%R&[q)P%9f!f-tZOLo421E#Z0_Vd=S,c6>jZ9sj:5rf\LZCE*^!m?RR'bFm5s)Xmgb9?SM4=5&^h!3]k/;+aJr0[cWhcaEQslqF
%3:`Y^;c6I(_iUE&8o6!I/p2GhTd$2M[H/^fdDPsjQodE;MSYILntnhoU*jKi&.CI\@dl&f?h_fC,63['-S-+;>_;0/N*NY=!ClkJ
%JuP/gZLhDuNlbtkL^B5Ed8W^>$L"bN."r'VhE+8E,CH:E`D9.L6U*r%ns&2a0mT;=-Q*SSWBFM`&pbHN)Wrf]5$F,&k!teTBnK#d
%Vp_`U-LE(@1.+Rr>=1naTqh*$BaVn'on-$6Fa3V[(B0jBN0CMj7`hfg_*tjShoI\#C9jD6NP2M@RTA4oPY_G:,7E^?$sL;B<\5<+
%%u-Th^Y*:$0&+Y:YgiT__7M<1lsMXAI\Iq=?"g#Uik>)*Vl*#YORJ]+5CV7df:q">2:04f-u?;DmjE?q971Bl#`QglihVU2drFiX
%'6a=dUO.['q.3qHJecaV\(2C?O5/ejZ\E>FOS$$_<GIH!nMI!XW/kWPO;TAl$'[pG]((E".uoC.N-l,K00Ta%kiQe*@#'9nmq2GH
%F!-)T/B5;>LgAQN&"L;?g,NXT$F&?bJ7?EZ.4lBT91S3n:JiMuDONIMonW'K)g<IpcC3Xr8<gJi?DZI?$bC]$pFqKGND,M&?qis%
%a$Z@tar^\PO<#b[=dW-(2QCjLqfW^A<'.9P\,?1AH]g"#]],a7*Rq[B1-B0@\V^#k3.l\OVFQbIO1%F:mB;\"W0eg3<L-?ba#\V)
%<s9h0PBaQ@@k<g?U46Dp[02n;080FJnRF>>a=tYmne'dFrdDYT1a>[^64V#o"b@gb1IV6b0S,'XcR3RG1I<lFljV75BYP&+HO48+
%-'QHdUJM,HDKp3T]0:!5[JGPiQ8!X<#tYJ"qR1Pa*WE@AS0W95NUKPp%]hn6W6E[KV7-n;e%Q*g3I]Ir%QD,G`B.0KqPa\V5E7[c
%GFQtqZdEN?7A[pI)uH5-[=h?<_Acq`9K_-h]Eg_%;AIN9`-9t\WLB$G`u4#5Cu%1jLDZ0pU'-AEjd^W]\(@9V(MLdla!87P0'1Z)
%!s;>-+BRWg;],<cg=-bO5K.98d/trWr;G@kr+kMAf5^K=.[V,1n(=Y(]7s?JD^[:i[T`IA72rIdPtfX-$Y_WMa;Zbm]SWN.T78gq
%hD2H;7octf3^1JieM(euY;f(X7%7WG?/9XCFK/KgX/]r%=#9=!3jn3q?H8rG@[jMM)R\gT)ceC7OcbWM6SX8Fo,iA"U93Pua)GE%
%a5O"K9TGDDB4GGHD#uFC2<Osg2M1$m>2E:;4jd^uH14*L;(680FJ,gPk:?iRY\=,,cYF:-2MO>/8g,W,fc(,:j4H_ep0*k17s4L;
%UCmAS:!MFK,qpM2\pE.4a#50G/%Q\-WJ[1Ca)XM!C'0Oa^,@jP]+3d`XLXp?#"I:'A*&ls-u*(./NoF'8%)FGONV7+eTLJ\Wi=*P
%9el4=Af/XTP&1M-LGd]\RO,D!Q'`iq[&ag37Mq!]L?5):[K\Xl)`024aX<<]qd/YoG^LC9_R6da6).TogS=K+`!."l1@J=gjI&nE
%YH8O,$pEH:kq%p$F[l%@[_]?k"k?e[ZaQaSd*+SH=Jm7d`5!VQ+:AZeFL/EQaaqd-mH^E/H5Nj[%gK!tJ_!UKV#2bqoUf8\%[,Ln
%?e=[7%6)La<!.=u);*K7Iq!e7h;>VR0?bN3Po>#8TtNT)hk)-QqQg9hT>3jTE@foLUL788e`DeSm=H/(21%aKf83e+1pF?E5-!eP
%A43pkT]V"q41O^;31LHs^ujYl4c6WDI8=ESFg.jJl&b96cg'_1jV,mr"$XiSd>+[3#0tm?gMH%1E'E'9rn2G72('b;a6qYkRO*K2
%_r52TpY[?-XQg:_@SIr[/8e2aA`0nL9k-`#W=(p7R^(,fCsf%g32f/c!hZK+1DGQ04#R0ZE\50e?0^]WY$;7f&@Q9agh<!eZYaYI
%1`R\He!)AnVJ/k.;n!3%-.OkhC9pUgPa''>9FRhu\Cj_%fYBC8G8X49Y?DJuoX.g/0N&=Gbpkmr=lkobe!=jJlS(T,.9br/hdS8f
%Jh&s[jsgeNC)OTrK,@6/C=o[5gFO/V/b3isST>n%Tsp^LU8_bOCWg/dX6&kkaWr#^4rINGe!^uK6"+2A;KJ\K;(=bf=smH>TeQ\,
%7'dRG+DnD%gDj.3,b5XDVM`]kQIN8VO>A%;R_b_S6rnE,':(KY0._K1H/+'XF6(]X9iEe%-IJ(#k!03hlT,`!@[eYF0nWq]>tU5R
%bXF%Y8:B*,=/.\(cr4f#1l5aa5J:P>-1k.[!ZPa1F$a#nbo/cXSgT5jf<FoK_h+k?W=A-sPuffsP%6IUd0u_;Bb!nt!:u]]>6^9Z
%P+RCQd@?HB6$2t)PGs/>Yf\=*:,F>"2g(47aM&'u:9Hckmf(a2d'Y$ta3@0h%(Vq+)e5A$5bU^X3eLsaEY@SF>D%";bpgj@iU4Sl
%&hOYMXWOl;EtTloLEp9C(KeI99Egj9)S!9Uk#?87^d[lQ-S_hZ2)P.U!s-dYWUc')d$X/\Lg_A7Cj`b+_b5XKK@2Ob>R5h<A?-&_
%VIaI^#mZiS9q#oiJ#f%k)g'7-j2$C-+E,iI!'sQ%$ptl.A/f'Y)PiTd*Z[+JJo*4hE@[D,Ec9<8j4SJ3T1n(82DED(]fDaZ&gCCW
%UaJ!8bg$66`KZ*O'c9P;6m%:MM$Cj'h3"iTS-KS5"PM.+].Ur&WOZV/cJCH>]gPa::*^/n>'O_e%93m>EV$Xb-Y+/+[k[VVeT=m^
%KXrX71,Q5XOHW%@WC4NP2TH!JCl6VJBcW+Yg5<,K=B%RRSS/[)0Cn&"<H)ViT\4@!\-7g+lr@jI#Hhl!N[d5N;V*0ZL;P/H1trdH
%b%rVaW7!RQQ=Vj9>Tt?EdM,?;__lQcKdKiEYRQ0tWTdNI^o#2tK<VqA)\EbXl5"EBktH<E'VhM+&(-8,_SlWS*"duDU^9A!>ZHhg
%?'V9a%$iV]Jtke]C=-'j4k*3Nl0i@H]%&a7l"Z'?`E6>A,kX0B_`#Q$D76-?eE2:r&oBmF>n2'Y>>AqE"qPo0aWu`VM0=b"]91R&
%8/`(-ZY4>lZV3Aa2+3WK_4t[Y/DZ>BMKFq`_+qt7B#1p_^)"(27B%,%q^o^*=>lAFTXLpRMBaqu+rs>7@d1<X*E\Ef'+`G*17*s.
%-JO'"/lN",9@7?e[OV[K3/UZn8D,!!#=jM0TScEJbDN&B__pOp1L;*M*pO&t7n.%#M:J>rSIfXIFL3lK6n("Ri!\^8];*>jP?ceX
%:u8ET5[%-OE`:%E)q[ZU+)eN*Y2Q0IKPb<X-'JtrFC"@53]=#iqN=)(I^Be*;bb3uU@_Af68J92)bGRYL$9G2)7H5=l''0kOA^6.
%QUi&t`!L'^l;FDe80M8Y;i63E1+SXdL")BB.%uO:LhJ*c>&9+&-YrI,!NHQbPAT[R%&E2I&B]kc`@(r,hQB#oCgr[]'(HDK;JLrB
%7;.+L[iGiSZIpC^/a![]ZB<hk5`FcS)VBZsP)\gK#9k.T3\iS7AinFd9S.*MO905u>*<Fb5t]+)')ZrpbP-'r?DkPrC'bZo*=E"u
%J1m@b3$:_aMCp<<8RETU\+#LIC+=ZeCramk70Vf/-0&I'.`VbFl"3UID39M`qt]<qW+OCpELoLn*1;c8W+JS[9N,$S,V"/WOj,(G
%l(;KS1C,sp/J:=k1e4oFeG"\rUb?0\LTG33^*?(Q7!"5F31hoj8khUTXsTXC%:V6K<Q.RaWi7Ct\nH_`MiB;FMZQ%")n(Huq]Peq
%,Gs/hp^V*rD+7F$'0#9^2,3?S2B/<PcrC=/BPX?ed4m-"nDk$9@G/LofZ$1WcH[;s*Gi_R_kQMC`57:d7Prd&_3AGLI%>)^+Nh)p
%/s=Hrj^LhX.oG9L`)BL$D)+d3;pGro?2u:g:LpbKj7sHW;g1X!KAt2k+Z2/PKn0jNd4EGgZ.UrkQ"]V'ZDW>P)Oki6oG?9GA57ih
%BtL5V)T\D8RulE/8MNM>!+4_4gPWlp.Tt+q_>Qq`JG`ku.Sal4V0A*I6JtO)cpop&S&kN,bs7VK-_kcF)NL(%JVpJ]P)eb/#SkU)
%A60&$9kk>q;51NKEYT&,8J4u6Hl`a'8G,neQUb8_-/0j+Q?;1;+S++6FdK[kLdh527nmi\0&(22NS*0(VJJ.r&kltk-sa1tRO6a)
%>Da0bdu&mlI(g=@d'Yaj\&(E:2VGNSM)I(,";QVcW$I%1[V,jXMrC+=M)GfY>H'N="7;g&/t*qt#!c9@'$VmreD-o\U<V1^;ZJ+I
%FMh&_&-B*n0kD]e=jXF0Ak@=4L*PDgcojDEEMI-p2OSQH&P/*nBUI*hf.:V]<&\9_j_/ZT9f7/9cs0k`JXGt\#3Sq;VW^Xj$QUHH
%[ROXiD:U,&;d(S!&#'cmQ6Y,m?6&(_M+4hqTO)RDNSKXHF?kc];-PcWE3ab-\/l,1%r*5`H=REm<A@'N2,*F@&7mZM>KERVBd5#0
%`AV!V,9*=I'4^-Tq/SHJ*2j&Q"K?2<cpHDfe:9H:1OErE1m-X/&6;o71!m#V#'MjY_NS9qZk52fIpn.BW#.+$fqd1Wg(\5L\/NY9
%QiJm%8JfO(@BLHMRZ8g3b9YT29f&WO)5t!C2F(=G"&TcM7<?V*_D&-cNbZS6.D!1.B&+WbJ9i]H'kjn(GltJ]JV#f#FG)V`O[T]!
%`@U/CWEIYQ@C_8aS;8SdagrI/l*7pBaHbD&ra'bjD.^I+=HAbG($W,\jckQMRRr5?JC'!b8+$j49T>"7@1."5WL&_]>&5t)UdJBf
%aY(M0/)+_o7Ldaad5BLDGY63(gjukAL`S,nTQDn7EmrZKVJ+ZcLnj)?\Ig+8Q.X5O8n+9C0gTnp<coY/*Bc;'`'gssf]K-\_E4'>
%OKdCqX@P0%R"@4j;.C1nec%Ii[NZ6Kbt6U<+o'DhF%ip)qu13,,1'rkaei1*YYB0DZjrOI9:+.<"bejKKH`j>2FYc)6K`JkQBNNY
%TW9g]N/`XR[Z&,DUqM=kePKg>`MQ4f8eJ<7dhS;)VQHC.H1KTA](&CT!?JPTQ+f&T=@cHJA<1MDeu^@skK.h=IGC^c=GVSf8R%/?
%>Z8ubbc,@r&f&VkY`2::KJ=6+YY"!b#Xt#]\5Wm*'jHOYLcV@O;3YPt2i)=Fi(].bKiUIFi<[h!*]i(V[hNP6*9N1\C?e9N&%YRl
%>Z55#UJRonRM%YhJki2t+A?cK/p\h5269'QndK`lXGTQ<(6VBQ<l1iXeReA<;B\<R/R-3p(c*@rihASp$6X!rjC$BU'6T$Za#[J:
%`E%*,8b.J!5pC-B3.]26,#15?4Ms"u13g1L-U"[C1*T4ZJXfQe7<jOW@Yu]DUl9%?-s%`C#hZ#b\YK@c-5m;Y8g](o,FC[4Q-^pI
%6aXD$1`36n3:c^>+p'4;$8#4PUmr%M(5V;Om(Y+c65N"7H1'2\s6REnb:^u$*B"_t5FdS("n&Fkr(_SaD%AQBClE[P`%`*[Nb"UP
%5l]]KiaYDf4jSI0Gj=%&fY-.AHE&_F,9nF66sP0fX;<,^k2GTC7L`J<&t`0rPuqg=P:&V4F#bW+_<d;/&tE;^Ct>TfPi8A5ej?S7
%gj]QW*W^<D#C8N`c%_7Ul8+J^SAp^'WHucqQ/KW&%kLB,<8_,r*LcY-K#t:9Yj:S'\&DGTb65$G'<D#Gr`$9]lg!q3qhST4.RfCl
%dk73R)LPqV65[+Wb(Y'4?P2H<TW8ed?M@dNL%X-FHpujHD5-O.O3hAu<5n:[8$\H2rH@p0LnK=A!USO#orZT.'TNM"MVUG^/DT=a
%Ti\fsKY=,G1)k-2629I%Hak3O+pD$F=>]*SI:CN#Yo-4(1TXD`^L-I3lejrk#UGY:A+Z99?/%R7mk^YT4?XtM'SJJ^\(`T(ej,B"
%a)(/#f,EhKbGYqdB3eFYF2!R'2=5&[c#Le?]o&DsMOu`?etj!AiBB0$`/h*[-CN-t[Yu8.J]Y[SUu]/bjH&b("6+&i(Z4fp+#[8,
%a5U=g,PolTmPS^m@7:Rd7NrUW?acP]?O(eOh`Y`9S;FP,1+7U\4BsVPP4g["K"uh#Is1\Y7ogpln'3lA\F0S^i-*f7pp`*V!Ij`p
%DkOTnDKV6?#EbUS_-S"QHep$kg_?/HHBaRk0"S^F#mcMml"lKAfQ@+u*>Vs7=YEU9m\%E?*8;a)r,QIQGQmr<ghmEjA/F8\=)hI/
%&S@;\C?br1gtaDugHMp4F5g5uV0fl!r;*eM?FCi0>3!Njg:F;FIlr^*1#(l=__AUg0K@nU$X7;P\(_]0l.mZ_#*[=M1R!TUJD6jS
%bNGWbhE!amSnIR)$2(doULp%!%5nPh]9_d"a,[e1L#*@9k*bGPM$1j!-5a?#4K:;;V<kr)kAbqBjSXrGA2lg7Z.`qPS%laa"M_VD
%Rj59OnbDl5UA:(oV;AbTiT%C3T)9r*N9;)QEKZDsr$)V/:G=9WUHU02o$i2B.^6t/F!lpY^W(?e)q1.#+4/FH<bA1'gsDT09?5?e
%(Z!_n^Yi>o[",0'=0]2B8Np7G[r:8KRtprn/[d!I2HQ/:+3V]A&n+Y[(MUf_@Lh3R3VAM>>-d)Va`-V60p&smb)-i6/R*Ml5A`4n
%NUj-c-m+LA5>?mVJkgBL9^RDKo6m"[A*J3jcYVRY+A?&<qlY9"\D1_naX14-_Ok>Ki<0M;!SNQ=I$emD7\0#g\&VHr,HG><n+`"M
%]BE^W\C\oHI"QZY%"#L\+U5=EJVp'jb@<OmSOe?"VW>_m^j,W7)GYCjSm@3``u>e]%;'H>&3p'#%f>UJir6A9%K]:YLq.bsBuDqj
%NR?[8Zi,GUAMh;22P-JAW\KGfG$N^c3tVuCLj#-_drmOQVgM1M#kq0q\=#s!FW$FE1[$%>.iT4L34E%s%q_%n0pSoB.[HU%:+DDm
%F^&r9[B)iJUCFiE>rO@d(&*T&Vm$:6'\d_E$1$lpL)n;iHE3+cpBOrsP6Eat&?LgnL:q5>os)Loha/O-Z":hXifN&`hC^Dq`Iun%
%UNmS=K@hgd3j<V*WB.X4/b4^o9kE5M-C@M^F3r+K@oq4rl%Ja9gg%O`QZe,5ifQA6qYA/nbu)2e&!MrZe"$)WIe^8LFagi[dA-Oh
%+<=tF,2s5fhRK^uI]s45c()fVP:?On)ceCZ5(8!S-;"!+H_1r&(eZiAZajZR0uiqrReuI_rG&p>@Snu7RZ%hbG-gMu=D'e/W+/D.
%-7TNe\p?G;KI[mDjWCMd/!o?8WBtGm$R<L@QC-2?_'bc&d3DQ^'0`RJ7Vp>qLBO.7PW>6GJ&9ab/O6?J4oBnmX$=AiAaQS<J7uB7
%((U-"FJl8OY,WGTC@+.9F)H01YZj2i4TdsW0?2:ho8oYN20La@N1CA)@jf0+li:5].]TcF@+8r5fYK)GiTjU*SOHtaXb6*,Y%uhB
%H,)q>]5]!kcAGF;9q>q@MB*M=WUmp3`,S7?SMb]hEsj<h6o&m#,eY06m`YE:@Hq[qn]eh/VU!1@"d);KSHiBE1,)WS6cmj"E&)Q2
%=A>><hE8ei`7B4<&Zu/DFWQdUW7sB1%L.aD3r#Gsgj`('BB'\Q0fgII_1VRCUogs]mE9>4XA*Jp`m.a_G"n_1\LOnmZ`nN!O\^&]
%JXq\Xf#\Pf_-u'YLM([@OXtrdg0,N;'B)i_j+-h5^1(!&W[<*I@4#TGM0/2:#T^'Q!H58.<"CXl85=42j&^0EWG?[mD@5SC!4a]+
%[h%:CJ2KB7<npmaXWZGIJBci$@_,.%R%$/T:$0_-lSc:E+H>bf?B\SRGMXSlgnKAqDX:Rf7]8@dMOXT;mPD<_A1G[T&i0SFG-J;h
%)LH>.<l?bE@-k*uY*XZN@gD!oaI]V/iUtq'HmCZXpW&=ZB%gP:Q]0sRI*4d0s2S2*C2UM$NmBt\@%?6_TBtAtL4!rKa6X3^d\g51
%0H*"j%V+Zi9oa1!T[2$HD*Y/j&()BH$mEQA$kF.sI!DKO\\u`cZS^,$)-#(iasOu6*sW@F$ZZAdm7o(Ho1\aE'n%l^2EA@(\Wbrf
%P&(9a5<Ws'hF]+1\5QE-!.t84N24'e/Bo9pr^`;o3qG_Q_qEi@ns-,`K5(_S^>Ae?%&XUgaEoYU<JGF.8E%2]>YpU"*3sOQK%ZMG
%&#0&[gCmgLT**_'Mum%PUVrp;nMAE74AAE>\Gb-$ZL*J?5JI[tr"qUk's;Mgr+^EM2XD5t+0g;4r;2/rd!Zk:jQnuM-Aag6l)7U+
%HjD,26?8=(NIXG1"1f]t'GFl\RhC:o]lh9_Gtuqi:jdb#'\k-k,[f!^%LbhLnF9+ah,CNLE"AJpV("7"bZuk.XI41)_Q(?Fm`Tg0
%p)K"po;FO2@TU^0Hqt(A$"91hmQ=;iB,QeB%]FC$H+.@"$%2!5\io#'6lk`Ad'[3oS`ne";te28>``ON``l_ZpfJ'_dn`^UL\,_Z
%GC])+V1[%!g^!5IoLhFJ(,h,h.an'c(Bm+2h?B?;:drm7'O,(7o^0il!co'CAX/(bhb+ce:G1CM/+F<m0HeEe$[JV_`"5/+>7"DT
%0B&X1CjDTk&!HU2$eG7>>;[U>\!Lj4In^`q2m-V5jeE*#JcJiAFk+tKa.sMG&9okgH]l$e^uH</Me%5%CGqfNAbHdb4QKFAZAQ^6
%X3Z7k9`ABG1EIGmfO^qO<s'[UfJ3d&6$HV;4QK",BUX"8bHn]hjsGp&?5VV9DC3+?n>2h%(!g"L@#3"0n&<qkSS^d);qts+gl2S7
%(_r`8:>n7t$,=cJEqhd:0iB)d(0&Q(J<qA=9<$,DE4D-FBSrj:3QD6%k*D!JHpOm-:*uCqe\G(=;\&@'('jX;Ne@61lTlRgG8?hl
%jFKJVSI`"JjQ2pJ=0*D&nb-F"rF;AYJMBrQ7sUajdPPp-QdKc\LE5J2C6mnPO7IgFW'=F?j]R]-5ILZ?Sr#GK5Di$RhXZ@VOu_kS
%s#^tB>^@OZ,S,.n&N5r63^/J)g1qa#SDuCDa7p;_rIH'DX-3L?;`lb&Yrp"KleM-OaXJ95gLRP2.3;SGInDc@j28@R@JgfmK4-;:
%5K*_GZ@"^P@jiq@SYp]@qDPcOaSG"^8>g]+*DZo[M?ge11U](u*^kVZp@jQ%Vc,_9kNF_YQb)3.4`N?N\(tl@QX+eur0b>kKsHn-
%&Q3k!]1;tSFs#lT@*Z(MF,451E)MTIpLdaS8nT)/bb4YCOC4"5&3h_FHl)>bENTp*W&etuH=:uW5L;C1^L0&&b3t,Q2FYjZRdJ"9
%960%4:]5B:juB0ZTZuR'=$P$R&21?6pcE"5kQ+iIc7%l?-k1FH:?/Cs@#Bl0JW/n@U?NX.);OC0*mh!NIA]ko;mUlNGb_0hY6d:>
%gum:r@-?\`Di_llgGq_\])c^nCCYX.TNA;`R%G:R-_/0Yo7QrAo-"'"9os+okUCH]<Z#EVfrS-_+ia;Qjmm/]H("-_=;?fB<@je4
%/KG3.RCmuO/BR$cPg\i6o_?HVs&;HpcLD(N>h_]?ddVn9=g]BY@:ZlumiD=]X$W9`\[t]\G:P7I-0(3jBN3jiek)E"0JaqCPl7HQ
%3XUnbdKrS1EtZ*g/[pp"G\_C9fUNalSsN>QjaG^?@hTQ(]f?O_:d8mT"KV-7>MpPq[qX4Cm?bVV"5sJ0oSf93;-JU+!Btt/'>IMK
%HrXomQlXq/K`jW-oC75&#0H[NQO!QCPVoW`oEsV[OOm]%o*gM?aKsYb\ZOj1_+QAs6locd@cu&Sbb<j7.M?Q`mVdM$]!6^7c-H3>
%)^;KV<LZamkE'[62AoB+OL4-Pi8OH(pGg"QA0%F'Jbn[((='qYF8%%]''q_gDF"YI\`a^m+Sk]9$k^9dP.7Q!PhMP8+Nu+`Yg:gE
%^7aYArMb]jC#+<DeNm(Dnr'MWbl"Pt,.H<F)l7q]a,5QY>Xan.NaFM=?I:O5eE'Tp(K/;CQfsG78t3o)NH[0TE+u.!?o>qE$06]'
%4mAju2PS!q\\Qe97KVp_QS1\I!#Ef><\aq6Xr+`PO=")=>^F?t5Gr\<h)X,L)>@eFDENp7>GeMhA[rXYPp9[ITSj0=H=]^FS1=+K
%(0=>G:TS4>_QS$kKA;;)5/1IoA!7]N&gL-YQh.L[%\h6+=8/'H&`dYCW"N5\9,R6IJsAtZZ6CKBL5862#Arlm7@te:0,4/"IGVY(
%&37S4Zn@s3Uir@]bU_+_djgmC/PUZenF!LC5ts)7d3kE#iGU@^TnGK9BOAZFZ;RmcKuokbd^oh'3H<esP#>h>J/_&RVV+6-T77Bs
%rX7rQqnloAiJ:lZke7;0UEB$fPYuWD4LH^uhp6`Igs1ft?MB4&3l0L9el%*LL+<r;k[K1rBFWj'`5VF8IK7JB2@s`M.mt1XlT%7"
%>\pP6=I<B1+@p^R3N.j1aJt26WJ_5*K#NYSM[`6KmaH;+)pY@>0dPF81R+DG)0RAHT'4k"mUS\A4=:R`-Q?a._jtH"@mceN9A6&"
%XeB!'GJ>)FCsWfKa%o;9$35Mf2D@Q@oh<(VSBpBrn@U(B&B7LKaY(%"YiK8GbZHo)G-OWgjh)N#Ia-lR&p:IeQ30!dYsF[<;!0I>
%QB'2W@`qkoZ";QnCj>%'m\;DCf"CFqiF9]Hc#AMtM[^>8l]9dY"Q8:EN%VOq;VB%_AH9KUfL3or(G'S/^T>Y>8f&SNl=ZT4`9];(
%nm(Qbpb0-4rog`]!c-XjQ4E\a1-FXdrR+hhJ9cQt+KOOH4ln*>cV$b;<LSY;<r_lTDkko3RE<MEJW]uK1Oi/p/BVqIG=59VAj*Z1
%*Z#?!-b`t!4QV+qO6n-&,f<@s6ID!rHcc'JoZ$2O=[16mNarZ"TsL+gO0k55lHb$-75:Whi((a)^n[6W@@2#);5FL+"6]ZfHY1IT
%5-@B3bOmSaW6]"=Jc#iG0`jP5L-S80lSXn?,l5i,7gVDd/e/_dIlub1.-JPXNak7:#O4121G[\U:aS/Om^f*t4sF8=52Pu(frnai
%NCu;3H@h3M_3+$s?'3JL,fC,SX#H'io4&gTSA,(%R/8,$?Im36>UL\,ppg1l,@A?m8*!>hYJtHdA2=Xp#BLD)]c+Ltb2,@S?B+o"
%:\T_Z#4QBo&gD",N=7,J7Y[+:,K&s&fI1*0>q`3jj2&C$;tb%cS_On?SrI%I#us,-pnU710g-JfnsARnf\rHsBB-h><g5d1)]R")
%"ru.!Z/lrYO?"k`fs"(jfs@q2/,\nRPo#:'2E&hrdslt@NK',SR>BkUW7Md)54`S1=El_634U`7GOdQ]:N5l@S?R;tJ@3ZS9fsB1
%SE,tu)h=>EUQ,eBM4*)iD!^u,TFoPUYn:,LR2pEd!4uCE7i`NfF<3K<l.FXP4>f/Xp<;q/F_kjs9S+>DNf>'5&836Si'GapZ%lAV
%8=86$bf"n.+7J$j!E)Z#43S]a)gfCu\jp:K7?J[3Cckf1Z3)*d45&Q[fDp*DENP7\SW:A)Z15V@E>bcd"'B-=;&pUf;f&dM"7RG$
%=</?rJgVak%7'Z^ceJC:=DjT\1A,D_Mo`7$2$>GtcD+`6<\*E%lISQWR!t$R-,2p(e,GqIpM9+`X`qMa#'>r\:VR+2a[7ZJf>,<p
%jY?F/5a3#tB^"+$8FbX*Ft"8I,k7pFj2$Thdn,RZ/c?."BQ]a3XE1.c%BRB3_g/.Kk](f-2YR('@]#1^2#s&DPPc=<hMgkG#^'q`
%F)HLi2GT3kN=70F`^Yd,gg!(ZiPC$_FB6QqE8Gd\p"W&_)aAjO(-4StGeqYa;<lie5raf4piEY<o4r&5DuT:nK>L3FMIR"t/$CC^
%79Rq*OWaa*$I5=FRJgXRJ!3;Q4YI'uTSq@D9CT`jF_T.cIF/;i",n!q?KgIQ0LYZmKC(%9It*[>T>`'M`_`%K(9]%KP[LJ"4g^R.
%N%5,K,-[qeJ;JgcH?X;TOY2XCg3@.<\C>t4mV],m#GW3nQ[fgO-1G:GFm+B^[R[#>p,:&VlJ%cgU.k?^\@jY*1f:O'1%Uu4*.oSV
%[j2>1!=]qu+PU:$\bJYJ`ecDT+i/'>s*hd_M\O;%S%AboI:,f@[8A/.+]$HXqdDlDWrcp%<9TF4VtuuU,a4BOBf6t.djENF3cXC,
%JOQ/4"`dUuhaVTJ\U2aCQIj'?PBC@(2;2as@J8ZpoPTG4R!sP#2PL^_FB=<]T6*:;EtfNPVK4GU)Ugm;l?,WgUgSp2%2SjJU&.q2
%J**buL[8A-*r`"?o*QJ'V,Oj]hd4a'Xcmo5bjoE7+::p/IA<uSbSPYoPdD,K>k82X)o+Y]$;;S)8nt1oBho4=>=0dQ=>`j<M0B.`
%@*9"M?EFh;[T`j*QkWX\MCG;$"i$NA6B_>#\cH;9iT:`rEdr$>`WWrYdX1L&U^g%<[+/;CiOetcm?c2OTTA]@L/bG<45&pe;Pc`I
%qFkFamadF260]l>M`r=CGXr,]<Ia4m<@bI1dqg."['a"[3c@RWmAN77VH8pNpF-B`MWH32R?<`m>?.oN(9i+OpS&JJDDtX%^@F1c
%3\[X"@+V^C*ST5`'TT(OaueFZE6LTbYMNC[%%lao&ZFK%;0!NbR5<oDqF"T-3Y[V=d%,9Lk?oNEpFa%$Gh`PQ;b[:9/Y"KC\?%G#
%i'B@7kFQ'^GnVbcUuR&7I^a]lhegXpFN9Kk2Kt6`L)"KP@3Vefr-!d"["!S@Xk3PBr[#sBX64\qep>BoWH1RUCiLI,s2o&p=S%&N
%q4_)YO68qH.\XU>`_[#m[N:nIW759^[:7i82=o7IpXp;;1YX&YU3mbah.7q?=brC-4_,oe.0PA495[4d^eSB5-FqFUorX%b:f1%P
%e`s%S<`t"r@D/p'bFB_UC@AnB:Mg>FE/fQ*XP3!u;JgP,B"_>Xdp8MEKDfJ@T;kpLfT1g?Z_bC.e1i"-@s7aR\9GZ/>!Zf;]X[^K
%#u)q)IDAbNppWE9HotNa9<6qgEF%.AeQT\Y)<0;@3Z9MT?8&uN9;l7+_s2RXVUV.4FcLIMA\ZIHbEbR'DY$Z9fdVVn$gX;0)D,b@
%,?qcRO-JD]mp>%[.`=:A0N\D_5QY``3gf&M3Nu0Rn,Cbi*?I2F't&QI4>g:h^N;'q63n>-)q?T_f`jL>>543-AlGkfrV">ESKshA
%`,A2:gJ8>2IQ*GoaXJ`o$(8.592I+D5q.e;YP,[e9-FKMfUBc<QeStr&CeqcKU99GRWn@H;=a9U'+e-M&0nBp"Z"fmVg&*57Ue.H
%VCDaX)gHl3.rli<gV%b1jD`4pdu)Q^('8@p&!44meu'%WAMV*id*gIhcf8]1ZpoO2@l16i*H`RHI\riS,.nW7msbkf:3'Xt?nEN+
%.f@Q)5`@"[i9BqY]+dm)q<juY>7#&oS'.<?(%XV4ak1Cco;/gjeVoc-^U`AuMr*>X@.aD/8h'[.&/rf7n])^'V.PIA?@lr5[YeNj
%Itia1a3*nR/QZKV/R_>SCFM4":lW]6o2/L%*H@.-cHs`+kc`E?B:*T4<($K:OCrt*nbfT^$Q]6F!Qu=._K%n?N/"Gl:hXsTMBq)D
%j@fCD!Ud)TVg(d9BHQ_h"Z%bMN3PL1Kt@1sHDS%KOla$J_K6%b0^m):0oIVr+miIOa?4cHb\-3#p<XI(R4;)oBX7?*^Z<r!C$qj4
%aG)G1]i$<4V8XsnaH']:K$9.'G@-8f/)7Bm=AV4Vk`k#DCQ>GArI11107dabQ#9f;2H1<Z/Wp`<^H]VPISu8_`+bB86`Dt'2"u\j
%PZ#X#.N+GR?`Y=bQgX3Gd,q/Qcu&,d3VjGr2)\b8]N!$\o2q]IXO59:s#Nb5ht2NQV)PB5rq4&h7o&@;GemT$VO)36'".kMXF-+G
%')dMYNJRM\gE"R?M7cgRIg;9,k%J+0M$=(RMGCHLW`BhCk+"2R_s1a]b8Z%hG6eQr/EK="d-\&DjD-hhGGgjl#bar6j:^M6q)Fdu
%gZ3W)(cd4+/Z%mKC8<i<r5=!X&tI"A7/_WXi&lB7XM]fM*ok4\prXf:2@gn*\q`aOAIU-gHC5F+&bbl=^Cl5,@f.QO?=Nuad`V_0
%nF<KMX8QV\Jl$8\/p,VH?fS=+gnZX*86E6+p]7cmr;Q\+A)!foA0$nQ8BM-tYI#[l_8k:)I.mGq&Y.3>R5h3]Hp,BfcRabA5;_:)
%%n*r;p-QVm6=MH;aL[lGD;F0+8@G]ugI=1UQ"ns2(bF'=1/nV<FkZ7.)(P:0'QcBu%`h[ERteOCn*$h:rF4Mi:F;;XdE8DjamWKU
%(RGch[F!'=^Uu8Q#1p*/hNa0Wf6*GJO2*f)0]FCFgY'G?]d'T>p;g^8D!Sj+YWf0#EeY/\Q0Cg^%,J1jL9+B;SC.d^=Sq:Df<GI7
%KJ2TH]VTeT[$@?&<3!+E+Dj1:qm+*-JBR>'nrii1;R=#kf>/A'du!WtK\]ju?\d*4Rtb;$<Eb>L;2HmY5!\$Zmgk!7fY"h+'XXt/
%E$\pBIXAjaa&jg,\\s2[L)#0LGbNmh[+Tr"Mo/WKn*^W;dI6RocLMN2FuQP-R<@\s/0EW5UgpCjXP<W=C[B2=,smQLOB/c/fZ%6Z
%1W7XHg.nonTr&W$Jno=!D7<*@hPoMmOr?nYbA<.3eB6O(S,\hWAnMXq)/Io?p5qeFDm>IRRIlM4e5rp6D?.'U'*cQsQNfr8D!U0V
%$cYq@lj7d+[]AV=HBCP!_IGEHD#Pp4)#1K.M'![XC%Y:CZeMZ;T'XlodYSh-d^CE8=4Ei.j$Tte/T]lC<u^;e'OT+bG1Z;NR^[fq
%F6,t:LiT#sr_iN>n3Z[*'X_bP/(OoWM73io(,l+RlWU<FSsSBg>5K;D@CXC63NX3KOAV#-=Jn3H,p/2U[k;!$npE!K(gne+.36n;
%ZnJGDD)H2rd'hB-4GACkC^,)IYbO%5'haT\fbFTbXA,D"GV3V*/VNK>HBXN]TKYm(WTn):@!)"Q@.>8P0I`<:@R>_IA[d"+c'Fm4
%BOg*ob/:V*+UHG;#,d*)(9%Go3?;.DE%Gd5+A=?@C6qs#CQXR:o38IX![8i+DqC`DTWft.m7_=+9XY5=4i(<)&&2(W^5aA*$8&:f
%BpWsJJ^fACIuDJ\iaGEG@>l=G?lc\7bsjHfmF(.QCt2!@.gdO3>Wh`f$.3Xg,@I283Wu_Jlq]RUQ8\luW;7maRGB4=Wt'qX;\lH,
%=IAoa59$X/%>tjWbZ[Fi%k-+(\X"&@?dm?!jl=C.%#O(IAl!q.Uc%%rhE+IBig]S78#H8h\U?f78<9+S)+:]J%qrcJ`2$n&h]D83
%l7+a9C<L&XFHd11+:RMVmdKT:e3jphQka>Fl&52qiGE3=Q3V]Tk(E2!e;5.!kG-kf(R#'>Aa16J;3n%mPqGl?3^dMu1F4@Wb]t",
%S`"UH-s?KUCkfRSieYaIoC@0fKHI_um\O$j%ONk>05i>h\RMIZrWD<.)JEmUYmWHqWHi"F(G&dqr-D1VG+\IobH35Hgg*j)kcIrX
%=jibiBqTn-\'F@MAbS?>?^)o^)]P:qj+)]+U8JinZEXkG=`UV=\bCZGClW?tK!/R#/]R[B0&?\?A3Rj*I"df^lglZp?m"<&=A$@8
%f"'s8cQ%=^^Z[bfJm-T^^tONO.b(JYEn%H<RY6e5b\m0HPB#jXIe3D/6SUNAjQ&"31HFfopeoc+oA_g!i-ah7ci*sb$"OZt(8[KP
%<QG9@Hd]EnRhU7kb=eN)'bm$WOABhEpO7VjU_BU]Z/=6a'PAUN-%q=II<<QU)>!@P@8\0A0pC2c;C='E6eE>RK@u[FS!o\aV*2KN
%Ht:RG5CU<GmH&KWK7,'09'h?q<W<ZB')Tba!Hf^^OnfoAi5o*lKdA^:K"TP1+ZKeR^9A8O?PkJtSO-[cmn@B<^9HJ#Iot6"n%jHl
%?W[P/\Rju#*IM`smL&8o1Nuo&LC5TQ*:=.9Ch_Sp,mqWlYo]EB(rn;fA"X=Lp`"U>hZ;L,eJuT<nZ/>'m>pe<fbnYe#:$t7F8SXR
%2oPb40=W+aLNCH$kP1m-QcJRoWa`]Dop90*gb]N4_.h]]6U(4DJ]brU3"q0YT&_<&&[-;:?Bl=:Ha)FZH$+HFa(-S3QB/j"?5i_:
%r;ei@@?D"Bq(LPi%[,t>r_h9@bK'D5HDSZ\;,DEb<n_`kQh^"8mWuo&>$?mFlRu"pnu'LH%_.ls[mi&rQ#QtM5n/K'#IPjUBRqHo
%s6VFuEN@F2e.Xt:^c]Aj#5eaA6FQPW@5=gt>C3ApeKFcNH6WH[&`jV&fIsq/E$?Rfhj/cd".WpW4lg68g6!(fqa<=H4sHRKf`^3N
%2b-n=7!Q"a$;]Zl?8m@UR'B94fQF#:<.;4oOiR,L)Bc2MP:#-g]I_=aGS!g*$!rH>>rl-.c%M1+ARah:9:%_r&r8=\d1ScU<o3=@
%_W/d)X4>c-U"#JN`=b;LBHLJr$!,BXr")AtgfOI7:_i-NEJY-KT/q5dQ0%WFI[QmJrZ)F>Hum_+Pi<s>HjidT$b_8eG-.*i8@ORV
%?7HFRnOGa7fL_#sP]Z0EE4IaRK+[rA=K_e3Ls[8Qe!_N?(_%er:D_/J7f':b$(\u()I$a`o0D?`j_((M>qDM=70`FA715c=1FG?'
%c:OA:*eX)CiM<6^7Ar1ddRWpP)obIiGXg?;<)cQ3TqWg0hTnimVSr9D[H5V7[(j[RQ\06%S(*lS?/]3g:3snm-U#;6PCCA,U5RQD
%A)o"qnJm`LRHYa`#oX"nNAg6EMt#40+u1%C%V\N_*(o%6BcIKLOF:$TU"jQ-44Of(4.*4iV(HRsYiWQD(&GZ9)jJ6sfc,c)e+@4T
%;Z20BU]XqFJ1;oehb\_Y-m`03-+p=V^-q]BEF(*Y@L2dg#U*IbAeU8f0)^j.4)1%B%a5au,c%%LO1bkFK_,pY6@/JS'%56%,sjY"
%SojVsM56oEdE$G%(cOLBddWE[Sn;FW3dR7%iI(8S\\h"p+U'+<d?D3OVkYWMU''dfn+=#Ebs@L!0>7)&S3l[S&kkhd7h`%"G+d40
%a*FbSeuL=A.G0t8.Y##':p@5bDW2:[lAr3_PG7[29-g;8$iZA'da?*Jdukt"?/#2F;C/+@ZNP4[dKQD:5t3nC5>sNd?*HX-'LqqU
%Occ6nbXas,AYc52+sT7a<2QIhpEq7MI4$K.Bh1!*4cLL3l"QAR8P^"_3U(8G84l[!9N$0LLJ1<9OqS0S"H9/K,`A(T*`>X+H4oYI
%?f.mYX/,o!brE@&J":Pe[G_t1.SW.CLTUONm+65r,'\.=$0-aUH8Ak!2QBn:EAG8GpB:'o"Z`a^&X^SQhbc@L?[KI-=`Ump/M6M"
%(4U&So@,up\#/MOi\=tsQeNqLjQ>OgN]X(GpouP@lt1=Tj<!_n:YtO0pZ,ElZf&c8BI,VW=rDKN973D%qF:rG$2j>?84-#QP($Fd
%Zt*^m(f-`_ChR64gI^A<B?LSd@V@odQOh8oeneJ8MP2o&+WClmN$UhA_:d0r@2mUmp_>"a#/YM49G5G'$qo<%U9GQrZo7;G4h,D:
%BjiPhR%!),*&@8n1pWftMEVKO=]o@%M?#/^VNTY9Za/[o1:/A<dej="9:.k<OEEnufHfO$(95eNMP8a,^t(IS/UUW/Mn>Yd33j.H
%d$d8XVl9hNNeoU#"Pu8#LoCR%=EHC-:5l&NK!VG!_J3h^?_XNb?7M@Hl1Jb,V9bsBPt!#<>A<S?D5BOq[2%/QNNG$W1q(g8dpu%E
%OKGVr)B)gO[V.stCS&Ps6l7YW*I;F.n:9(*e8qCoS^nQ5F<d>NX=^,@7/0hj*BKb]:KgtQK3tb3()C(M9%DVs(1TpO9@dX8-cOf&
%S`46f9JmR+?tZdRK[7J-e_1(J1L3t^/]$X<TsY'VHGIq^'!+*jf%,]*g.H=m[SBr,Xn58n[aIf[CFd(_Xf_5d['nDEA8<]T*j)P$
%b-\V*KOejKboNpg1rlu3OuQuf.nNKL[1G#q>=fU:[?\[rk#N,`XC^8rq4"pK3a_bF*9VgBE"74h0EAsOq[H:\J.q"e_%RG.AC<h%
%49lF?aljs[$K-kLn\\9*B/CVGT%>ofPT`\]gqD]<R]^1eZXj,#&6#B'#2feD!tZ!Q(s\6P^q#IrSE0?;Xf[g1qjta>jd#I1HNrCg
%Pfs,$E&MCEbhgO9>ppkA3rf1W\@0k270tf/@$)86DL1[`05TI4)P@5*Fd%&;?5To9`hW.BQ6d:!3d4o_\oY`io"slgNC>=](UbUh
%Lh@akL#IZeEUpsfbW.Rd()RSYb=N(G?d+`>X$P>O>1c0..jbso(:G^Y%[%S3bfU]`(3X/_KtUmA-SJ/,@4+NJ(uV&l.P2&^b%r`m
%]r\Rs-<_7@e)N3?(5CKjh%.h($\L,m^!^V'&&rH?dDA:<g.;ZV+Ae$$8PEk37U"FN>JjI"@OMn`L#J"^_]UUKh.I!"6k5$.d@+eA
%Y7gP&3Zfo;8j/4?$ao">D,Y+VX(L'IBjn((F<W"^Tul\\lnDk64IBKA=CIT?_?p9RKo(=W.4?\Tn!"Ju[_=-&.#AZC8[a;liN+_(
%r,m=^A8R"VU[a"K1h,PEdQ/Se<*3S0A<.L/@B2(G17T(+jVI<K'm=%sKq5HR_XPXfiNkg&R="+u0VBKFFB7%OoMDj1n;S`oe2Sre
%"'QlbeQH<_?GYCJj,m$++\E)oKNJ8k6jd-U%^/V7>LBp3UbE(;],),0%'jDTpdbaE/9P\--&&%LZBaCoUbKS/:7=KV"1B)7<`5;m
%oG!E%G/?iY_ll"b:/Fh*5)9>iP/:6_f_BL<J8AgAf/>Ye$s4O^)Vf"l[ZM2Q1*!8W$RJTmqthC.#s_jhCjc9TQY\,4)j3dGa'YIO
%T`jP,r6)G(qtSI%+/CKpr&Vns]4P/L%SnEVJ<(rrBGWHT,\csJ^&>A@$=Z\d@Tfe[O56nlm8r6Yqqf>0:U!?+j_H2Iiqs5*O;nf,
%$=bNP&ba"HZMl425@h*Mo$;9fi:2nIYj]o1E,/1'hDYUsh3cd2g&6-Z(k<[FKq.lhD7!l;0.s*+[;0e=UXq64S[M8(oJtLl'Hr.1
%[<%nBNFHh@oQJ+8Te\V^,9jXG2/E'$K2JNjp*l!)'tP>/>06-d;+f%Kq`[pA<HC?kf+*J@Jsq7/7d8I>:R8m#MR5:1IJjhj\"/.-
%Hm)h,ohsP`VWEr^O'FMFl#YWG3gLFpdFXVhNgX&0MaAlF+R'8jl;.BJi]B-,q/14%9/0QY9c8rMO>KkC]6bda(bC+R8Tuk+G^-]*
%Rl>]+4dcUlBS/GVm\,X*BpWJiBGY.mSFn_*Xf6,[pC%Qb>_>q'Ek#iYfKDYW,;u416Sh'gJ_nS9C-ngV6q<rn)4<:J0jnFD;<h$@
%ZI'ASD<f/dm7K*/VEeJ=efai(<Whh!UN3a^>YBKT@P.O6d1,lU7'2Mi@EDJ'48/LPl]*T"-^T6fbHS3]&=iQ-[sL]-WJ+nPZJqYA
%2,o7m1`'W`G'QY.$b(B(+9pqmVMT;MJcN0.1%suqNF`fOD62T8n#BKiE'XF/l:XU\KcYC2aRS23iJ<`'7m?:_"*DQUmgn'j/er4R
%=uTEb9h[HCPJkBci3j"j9K>QcT\e"$<9C"YmTC+\<5M3@Jeq!W'pL.S0fA0%8::WlJuN7;mmBHSIl`nZ:<-/ZT1<LToQT2+Gsmt7
%l9j1/B=5<0b#])_25*[c[mms,18eT46@\!FrE@G"/&)I:1%4)S(=p$b++5B:YT7uo^ehZ;f5!CAjYh]u:bO@,,J?5$F7(`bZ!M7>
%=$3jh:2Pbi7(k&"Cti;&/2k-;d>EDII+F\M7B:V8Cee7\hF.uZ\kN)_In!V/Wh/U\B5N!1C^LYeR?\L&76To-(]L:>2hTA$C>EmL
%P]0K9#IHUT)*.(^k@7dW%]IC7N(FD>aHZkf(%@4bn`F6=OT@BSfSo;g++CEfM2i%O14p"ULOCAUjpV(2!EW\8mPs]&-JMFV?s,$V
%V"a#-?aPeLIXiSKi?G\kn6.d.]Ul&g>gCb4J":O:(\c'?`#iCL!2-4c*Au)09lHKR_o_Q^k(>jLKjQHCa@;^U^qdTff.^YuYd):b
%nJm("h0FX[9CH+W`ZA:8n`0E;igi+$Q(D^M+()1>$ZpV+!8nJI\?l\D<HI+*Yt5HW8F.3h8m:-:j2dJD6t1Y^@Xe\"i>]'"J[NS"
%E"Y6?GARg7YlhT_$8$pRN%(_j:14Bp.bk>c>pa+/B0C\2]Tdm)YR<Qr&m')R'Ve_s]-P'D%U[#l3(4dP+5gZ(%TmcP*_B(oNp9g(
%Rn**-I"5iUM:)%-SVoLA%`!_IA3"lE^g</>iCO$JJK6@d9`iBd0-pWEpt4[m(]/Kf0%UB3?(=s<e^<"rUOZ5_B*hs.-\T5dSs_2<
%"*P^QXQ!ppk.TcO(!/PA.$BqU<$^p_X[o&];M5XX805"Zjt].[i)FA^WoO2UWG9C1j>1uojY3D0i"cK_Zsi:N6^Z,#PjqEca6ZF6
%SrB!h*L$/'03qi1lsN5H]Z61[ZjtCb;C)j@=2>qY,nHC;:`c^$#;d-i/`Ol9>/Q6Y!D?uF]gs2Pmm8q.8=gqi$l1Li?s]]ZWoO1U
%M64(L"ERq&Q-"A]?7/NWMhjkh4:Jl8!<)tr3dEA\lJqtm%MWHEiAY;))`(R.:7a"ji)iOg("g*"83g]Z=47&-YN2+tQ]A!s+RM]P
%.F18^P'=IK"r5Ll8pMThQ);0:0$.3pb'Us2&had]c`gKn4(,+R-e!L+%jsXp&MpV9)3sam-e0K-o'fd8B?3##PR[l;PXhF[r.1i)
%g'dU@GqW8,jXF586D^!,@"ei.09dh<klam3:Zf]slW,B/Yg29La\u=dG6EWjACdM(VA.1rOt`V,Sd\b3>rjF!-ZTnX&4r/hp)MIN
%O1eeJNNi5\:`ck;$@:cI8:_<apd-m@?/!sIAltll=[Q$qe19YFEpGo^Z>1I:Wg3-]PAHNT^.nQm8pTO4Z8^%a`.1u)aP_*\WJB>T
%\;>d!EuJq*^bmUTM45>!:YOqX<fAj>G8"UKq,PVGEk^fLYZokcLO=fn+,g_B2!>0(4ljUCp\K..$1e>HLO=`<S+m/FRolo79P\V]
%""U)AbY'L#N2UuXAWEOMWVFJ`7BL<KQN;5[bu^cQ%5l5sTf%_OR$7;q_auCT9r%mD54\SOaH-Js72F4U=Lk+KNOLI(0hkj?8>`=(
%YPN*;4.F9J2ukI0rbE]0'as48/gs7E3*lQ`\$nhunubW(pZ1ZiBrUcb\I/^_imZ87cEOPY%Gp'OrsG7kp^,,(*n^%"I!eB3=.?Vo
%#aBc/bNK\@l3NNU\;LlLGko&_pTN2%9K&$VL@>XBD9jW'.-f=pi!4@*R`9]D":q\p3pi149d\t&rS#=7a0n"0`@RHuK\d=c!&4.m
%_A&-G$=+)ZWr`URcu(L6=6MZ3kV!Zpce[m.'C;HI+J!T?p,a\4"+Ft#bd<X)L:t8T0^4)?h/3?[ef5%%rVh=c]7"bt1a*i!$!3KI
%r^!#"rhVD)5(,04\7X8=p7'g/f*.@(DTj-M-Em0b1&j"?;*A-2j,*.]M@JKC^e^mQ+rTe/=K<!u&*s7%&^][:/"ZotJ-@KhY.h#i
%"(3cd26?][YT4$o-s0@7bs$2hRP@7@=`4f$^GLeYGP5&Cs0G8HH>YL!md,Bah4,6-&?JCid1URG9aZ/tpXXVgI"/DfL1D#,k.BEu
%U1=M;FF\kom/bgQ]j1/Zr!5BXkCB1K-rWXnGtUmUH&]O:8-$+Y,YCl9=J:SKf$HQ_<%o7dOHL5<VI/V:h8Fr=OS<M=N322cH_EgZ
%9aaE4[)uhmGWCR#(eUH-\$&/SV4Q]9AXLi(A:FJ#B&(I`au`#oRG)P.V+S&Wg9qL4GgHPQ$jHg34:BudWat7n?+QE@BZ,99h-bSH
%:h8t]`(EsT!$CNFX_eO9<(-F\[ufG$2aa?MY9B6Y+'aYq_Ku9!0gS3&/%u/H\-Pm?5`K*1HZf:,0CUZt_'^%<NNO9KJ6n-$MYB[Z
%54$lM^@!<CI4gMO@<Rnu@<),/g140m03d+l3cP[35WeR\[G<jIS#NIRnUh=.7RZ:6%OdNQTH&qZ.kMZ;2gBtL^BU`@(,U?E_'9W!
%W5hoXA2-^U*,K`h]Eb36.2QpKKg;H=3b5D>O'V^ts1_79;Y*Js&u5k<-#=nqB`gVb&5QpKGs8em/94G_q#u0n3ia:RV'nr>?]RS]
%UAaA;"uPZV+_-dXK`u0>/\od@hQpPh-h=,[aqX(j;G$ehL*a\??"/>tMNan$!,HI]><:(<o)u$$VZ`t$[KJ%)W@P@sK?D(jKlc+m
%$8Nf,E2p2#?o\%o:T)=Uq_ZI3a!oUmXXq1C1d;=D5.t*J'OZ)FdekLY9Nn_!VuqtUW!oU%W#'7PMC?kikJ5^5glU]tVCZVS:"[CH
%YIt?S;kbfcLp<RP%:hT6j;MUt@qB3&bpiI[*sJ$dX)A1j[(f]J6/2^NR%gCWGP!IWJIY6td&"fX9G4.38k7ABZOA:uWBm%b8-p&C
%AgKf:^?fUT)92q.<M,Nb.D\(*L6<]+Ql!i"$n6`TX3-<p9efDC6mZ0,B1QSnAOsLBacOZ[j;CkkV'88V^V4>Ojj3Q-WB;@R6RiV<
%dou>cH\PLkNtEg=H0U-\8ED9AQ=lG9@75uPQCD;C;H^_IH(F8m7bRsV>nWJJKR01IEk.SC3$Lj"n;LgbLmJ,\M63QAIckC+k=>n!
%-PeEuJU(*rc]JjAKHEB,]ZLnPUe'`V6$4V*;M%pFk<27+i,Hn3MNhN8*$Q7uJ66kK18GU2"^Ws["C%?YqN)ln_E:18_^Rt<"\XSL
%r[#mPatK#8UseRUJlM_A:QW^$OqOS]fQi'J)Ih$Rb*.tYU[l'CIT2nGB;B'8a=aYA25/Md\3)u*b@/PSas-0I;-C94Q@1:E02-pp
%84Q6>JV7Wb@Hjkar\H+_.IbCgc(_7+l5ZA2Znc^'e(CP\d9asKV61^$odnP:JYi"*F`Bn2LH*K3N[ioJ#^qte@Q;ch2B?K)KfqZH
%o#T]s*'LFenI(Yk"%=,#YgBkD@Zp1U%Z[g+Im:P`i'^c@FtX)0N`h<SaqaYs;h2RM;nfVDo2&0%g`_VRc"md_psK[]Gm0Yag#SlW
%Sc1LR-eZ>q(Aeo]8I.mG<[g*Lr0E<G[&p:^KtJ=32(CXX2AWMP8:\*a/>0V[GcYOf$+tPd'E15QLt#JK`WB0V/S38JOq.m7TSs9N
%Y^'70QLSY4.H_9\4`"SPH"g$96p;Bj<(,R6YlH.m8+Np8m5R'u51U*OSG<>Hrd&#4h``d@`tGm9N>:\[J5Wp-aZ'=``RRmNQ4E-L
%W%QmbR#aZgXlNuK3-7r5O`W->/9Mut==PN=DNT#l_/;;<-oMD'FK?:[?J)QS)_il_$W-,:lKMD#2EZp(Yta:hcK"*hCq!2'=-(LC
%G3L#q_^ut2e.NqKaN"?e;L]7R$3=qi$=q<fV<1g@O!Tt-4D@U3'"#!ZU82;`/!7K>^,/N13>91+Mh:&b^9i2Vq.Ve%0Hd]OfP+GX
%;1=^q14@9mZ%1BS"i\op7)5P#TVQ)>'R@!dgT;jcku]T@d]ipZ,c0-19=G^iN.r^`<7qIEZE[@CGS7BkEB3hK-"Dc9E76P)Z"2oY
%f@Q1jA;33,cdK(/>tu_GooP4b*\'Z)?t@#S3Ynsbh8LTZ91=]*Q8\,amTr]0'$T/mOcBTi6mB7+KRe>"=%gRHXL%2GVdmDJ8]T7d
%Vbnf*=L&315)&*.ab\_oZ09:6K7'9p\\IN80<\4>&HU#N>0@5^p95=Cqp(k7caga:m6h<3"-^.['WMB_PJenL)+t[D"D8'AL7LYb
%?b2VDWYDH<)t`U>el;Yb=eA<ZH6@8'SNqn4N2l^G6r]8.KCgSqWd=;l2?h]R<]a;ich%BI3T<Z)2*FcNIh^WUrZ3UgeIgh[,k`[4
%WfClu3dI`cXKn'R<FJ4J"(1E(3qA,gm&<&F(0/;=>aCVNEi81FJN7eL!.-M2k=u%n^<%gHl@?sG!pYH=7$4LJp!6V$DfB;`SZjlI
%*mBQ$OuXh09=HXD;cj-c(6T`XC?"U/^?M'^'Clo[ShDAtgR(p,o:(L^18ek_),j.tJf'.]V8T?l-0!D\P9H2\ok0Z1W=1k.$M/b0
%]VWOqLff>n8Xuf5h%3/JW]_O4<%FRZ.(eC-PUGTmqSLIH3ajeA:0<o_^nOu!7\bML-G,@""o.4_8uY`HQ1o@bPY;uU;C0Y#Ed\49
%8sVNuRS',CU6)?Q(prLOUsphj*g'>Ge>_.XfppP@aC00[;<h-JOl]A3UhAt*(bP,o)HBuF4`q)Gl4b"2Zn`qM$L98a_h:(9VpqYD
%k:A];lH@t4UJ@LqQWH)iHe=?&0GLtg]NS-"`1BFc-a*l@kRVe>%G:IeBF/gd>`04;C's\]!^p>AK#n<1&&o0C'-QSaV>3Z4W&&dF
%PlOZoc;@RC"L-1Q71p^CQQ7\^\;YsoX<FSHL_Fh26p`[1ie26^^!ZNhrWAg!8Pa7f^8E^P/,Y16ZJD_^#E2iJm`Bs?0of!m_LK@+
%$keA]s%j=,Uu>&I"(j]rSLa^@4m1Dn+G2B.pcQXaaJAH$dA\]!j2uk5`b%a#3:97G]dSf8oEV`pS9-;2s.P;7%6!tJG>$7KgV8IB
%J>RiuO<MSb"W"4-aa]CQK;>%drrH4oZk34(];*#7i]dF'b#HN5!9U@Wk<EK.nK1Mn7#*lK5JfNJBA!"jd[4uBY)&'&3Z\$Y:&8!J
%1Ye",aOuQ%#HH4\dcB9=DmOe8>ai2R6@X4k3r]ik6)9Vp+-ca)/Em%)J&k`d59r59+&5f"&&:(tCSa8RSK^:[r!0l^UGj$m"'Gp,
%A^]oNW+D.sR89VLo2;cW5m@Jgp-lB2-U:5K6b\[<+OKoPmX-%K5QG<",8h'@atUP"(^Ii7rQr];J7q?-,;LAANu0(75QE%L9GnCl
%U@K*<&<O_d^,BCb,dATsil%>fEMB6iUrDj[9ErEA.g)NBb"YW^!#C888V$khdE5Dq7#P[%Ud.2)//Cu*#6JiupQPd-&k1>2&El'A
%NiUHVJ@Z,+K5r*g`<tkj5[ZcsPML#.i.Q;X3"QW_dKFB)s"jgaLYYuEI?>4ZoG*8p;$JRtOqjj).E*2Gc%>7HMDb8"mDtA#MKQ8g
%R':bGI3b,`;lgY&3QVa(!MaKr^^O24&,?P[/p45RR/6p0%m`A,lgrd7*%tDYg-NC09X-ciV-!ic@1Waa\lB2;R94dN#sH@=855kP
%:^*WXb+(pG]g\bfOu:s^dJ[ra2B!Lp=A'GpWXa'N1RpGUGeum=Y]?i8q_O6q/n$D9Hjf8]eUqSd5-XcVU#`\Sq.f2_BrSC[o$!ae
%>c/cBcOBZp7B6Xcb[`8MAeLUs1DtA^%'V-@Wh,U`bPl24='Fd16f6+?V5UctAm3N0<Vg=]aDHpd2q+kWoO5'82C?]2*?)5KQR.HB
%CcupCJ_L;:fn'E$mnA?CbeoNgB@*Gk8*j"K1Mu5/%dorTF0s4g=8ts/k=5KqK=1:/SnXPo#.rie!>9Bmn]q2=]SQQT[b(hRrY]*]
%#.fHL`9<lqliE%*MJ4;oqX8Csd%%=dBRg9:;*?`k_b:lELSg'dpJ*k.R.rXaM2?h0%glW6?-IY#RZbJ16.9GC?ID-'44q*!VFA'=
%4Z"$L*h!b>.jg8@cS.L=)0QN""=8/\H>"F3;(%eR)JLM]8jiM4pf@,.;7V)>U$SDn';#+Xl2.c9k(Muk3FVU,Zuk#DrsZ+c[-=4!
%>\lHPeNX.PZJgoAB7NFAhNFf-ie^/'1Ka"77n30t,Y?)V)8OWN:AluC5Np3hs%Gf>"o1FOSq.U,W+[LFR5U*gV0\c_O:Nbf3qF9Y
%9C&C9T^E]!TZVl2FO-U%k!d^j\nCSmRX=1eA9Z@IRJLjiR=8eLNb2A-U@*_RMZ!gYX4c#V<<=h[X'^Y6<QqV+_]EUhWn@Pl10KlS
%=+UrEAOiug8!l3]q2he!ZENc6?LI[q3'ZKL%JYC&q1@cs^;8Lh3ajnXqW0$%BQ`u0B1UG8!ZWGb<gV$M*;RO=l8X7C_\0<1F'hk\
%F:QaMea2Q[CWBtl/&TKq_G_hA0sS=Zqr*&a!W/,#QeBoM;MX,;(9gl2E#9F="^9Ya?rpb?6uQ<,D"5%iU,(`T:2qOS5HLFi,@rXH
%LG2[_Xabk6[&nbmlHhrZd`<MpqHkuZ6.thC[=D<uXJKhe0TXFQl[`)_C).e;d/`o3B_3gIZWs$m@HX:RB-]ZegY*&X?TQtos,L]K
%:O_jFE&=]9]<.b#9%-sO[>agFJ[`/%"U_BI\Bg=oQJgfZ@1T[$iE&#(F9D6XeW;iJ5Z5]@4UUfr/]OM]pS7%qUf.VC")H:d8]krR
%S&mk&9&0R;no8BD_g'9YhQ.%ENm_9\GCmM+[lcKNN/FC,n'&b4U1Eh`_*[Zih=@7J[G.N.%K]\2q_agKW]S+RKR?PQM]=WOTC2%e
%K..j!a?si>NQM<Odu#IR97_4=ReWBfSs*,%5ab5dE9tDss+J%"iW3967);!N`JQq&Y?]I)c?Zt\.(Ug,'7oOiA4b<>]Xp+@:K8)$
%PD[s@PcBSUU@8q5-H]^qQ3[#UM1?JKd\;RRP_EWY.@LNY`SFiX;'poq^T^soPf[s*;X+Wlo7#"_1_Hr.L<uZO5dobgH-sQ^(5gsW
%-E8E,?n\!o^fiZ/:hh0tEs=1,3c_i#bJL3K,)$^#:+J[0LaW;hB8K"qa[C*p$`gSn?'CNL`k69M$hhGo+r[!a*\X&YJsC[-(oc:W
%Q;EP':+r+c0F:r]2c4*9^.IT:MT?L#>[B?d?8X2K8e=`#Tq59$AXM$db-=83aDaSg/oosICa,MiN<i(EQ<U)7Wi-rn'5T0JRs8=I
%2DKh?asOi1)nD``Lm1Ubic7$E&"=uYG\:"\;2bQn,6ZNJa0`./1*Y+*94Nqm]?,F=0:Q(>q.<S@5RJMcY;.0!mo)mAK-Y?FkkDQt
%M)&Kc>^TPDj#">]FVA>O?Ap,uE.u9;kR<]mM=S':7P;@=]L6C3:-;Q09.()3or"p6ij#/YFJAb2FVWr5'9<<6V%_t`b?6o(7_>n+
%X4L+2YE,SraT0OMdZ18:V@%5<)d2Pr).[*%<]a1.,Mu!`-N^k2d$%'L$LG1hXa$S>>LMhZQ`BIULsh-SXqr>-0LQ'oXQ$8`dubP3
%7HHpg>9mG:>Ll?>ZHA#u#UV8ZSLAGgO[Xp["c@W@;EGIm?\o)!_/$jXX>VW^@,u_&'8b_*03F)ZlK^i(caM=YQr3FiM^QYLVP4B+
%LgnRGV"$>4>!.:`3JgC%nrF\$E5Y/k`n'F6H;<$G*LP<qAop^"R\LN^37reRb@APIYfIKD3i4!<FA.2#NDCrJS6l,i0]frW]"jLE
%H_k;b]P+!G6X$>p[ct<qQK^iZ_9lVs?2"(Cb=Z6hYTAG"5]WgiFnF7"]b>4I2_,P58_bLs&a_2%A<$CU[)*u\^7mdl2lO\*bK!on
%';pRH>O7??;a/1;"NLFLd4tTMUG$,F;'tE1pt06=+[<m$0jW[sS!BRJn.hoR9bD1#6[Xsn@o8$X$1ffu3)BI$nAGhqR`s28rHPeb
%R=5Q7ZqSfL4KN2,r6g!/*PtH@\llmdML1umI;(b%Y"NE;KO`H"VMj*.aC3R=Cdk+(D45o=d54#(1Rb2U?tl(45K"g'BpsKaMeJP3
%D]^uFdPP7D1,PU4rT>_[do8X[0KVDN6l[m"6Bm>p-RR[,dHCi*mE'[CbC@V=omB+fOlPt5qf'Y&3(s7;B>;`RZdJ];As&.!rcQ)u
%ca9@`rs4['dQ2aCTq_ou&*Cj6WDVf?7n&Cm7kPt%96iE4W]5Rki:JiB24A)24GHNO+Esa4>%;o##1q11GBU=5/*.0>Ys_*b-t^"8
%,Nuu?`E&S>f-^P<ahkGQBqmt^RC5Fs_WD4WZ6"[=A[dj<^%@O;=<@r[C`"oT-?T5oG.YYrNH?oW'O&i6O&+U"3u"Gtd6URf+9"\Z
%.^ahs-Wh&ldJX9%PY*Sq^&*&/lW;bD)#>7!:aG^`k2,INA5,h\TGpi*O3aoj>QjR)U?Pg?is-'^-:fSd5T9.mA&bNQ+*4BaqUG-]
%Z>nI#9+S4t#!C?anA*naF)gs^qu(s%rD)+iloC\ugBq8l*iQ03c>kQ&`0RU%;($W[^7oqRKOk85>9qbmTi`KuO:DRV3m>cNOWine
%VVRTAa&L@G3K*Cp\_,%#Z<&EUrA*OEYX1]^dc'Q\6l+Ag.UY)o22DrC2YIbubN/DS8eiP`I<tH#NmG[Dc=C_?qhhXP'dHGI7oZVb
%r=ou+l`oWA;!#]jId(@?;o&`B/?@@$#NE3hflh$I2\h>"m1@#H%<,$R5,IT2G.<,UT!uT?Vi>W\alR.lDhjr\p?aR5EbpL]'A$aW
%Goj`7Ce+RKgYq>%?eZaXHG-VPr_iO&cA(+ch,.Uu'5gn:C)mVilX729k2ZT[2DXD@iH@XQn!%dLNd9#cSdDlVULf')ge,II/pg=&
%?$G?0VhA8r8W2.ZEm?s4[]%k.]EAX54&^+ueDXe/L6pIr$VSrcd2=U[NA013V7Q&cDMuMK/_WM5k'CKI^:[iF[s_ZtF?;4SgB+O"
%*G`A@RbL7s50YO(5*BJd;nfAUUMPCN,[D89Yt.dEHs9-o(Q@s=>I:mk5sk9u>7hIYHSsatfZc6$MG:sTE-oIEqHnH2-Lm%!oL+X'
%#r?HB2pm1A*?l&V<DVprQ&g;J'*l+2G\I?QR-(G[gnG0_%6D18gnMtr7!(7)'M\$G]t0YQ$Z+2@@`kg[h./T_k1kiU;8):MJX;h,
%(81SB9RYk#R07DT;hTI]^lA>SOif&A#E23J,>pp&k'$:C.p2e>Ef7)gPO34TEXNbCgGS(.Ethr#9t<DAVVIcIVVD7E'NIr>`Qpq@
%EmM;84-=``.CUK/9F'bO\?4grcFJWILe``L\])X:GtQDnQ&2:1;.EL+S;V:)*YOXi-YgpYg0+9li]4J]T]eh;;pMLe:is*[Zek[n
%(%@W2$Re,QFK2"9U3ATgN*B]+J6(O#@*um11N#uj1N$939VMj&=9DE)R0g>>NgguR-JW'`_a_)Jk]>L)KnJ!MbNRU2#$BPkbCVTl
%>YpWL<X7Z:p9#bn/XXQ*MbR[X&&qP!)s_0=Ga$@jA>RhOArS/g/T_Vu\YB!P?mQ(:Suf:[Rmq_,&thd-f(d'rPhqq2"LtdmX6(l4
%CHNkVY0r/PY#7T-Y0mX6G'fHudUXZ:AQ297Z4c*;ZN$)hKJ+FC?YQeY7P2JC[*E6ABd%2r''=dn:sE!DSL)TOb#MX*Lg!BQP'"@,
%Y:TahfKZiqOUK:`V3@su6h%lhGpt'jXeRAI-7c2ifc$H`Zt?J"j2jo/k!BWJX<^Lh\_!e7'[8/'YQU/T<ceK=a<\?(7U'0C<<Ca8
%qoa#F;PQqJ.KS9UNqG@NA1ZglSM67jnppWDL[gL7cW+.)<s1@^GDq";FYhQZ[B4=7'4#K`EVqol\l<,u?(.P/6eCgf7O1Z.&of2Q
%;NmB=<BBGXBsLXV;R02P;mOi.C9eJ$-k_7k=UFQHYD>i?UD%Q1)6O[[.r,'=_&MRS__rRPYYCI]Nh2]@[%]S&9\E$?1aBSU$HinM
%dt0(qfh.XSlSDfQn;K#`oH6[kpc^Q@$!?BTJa#dW2d]P5Pos<j?W?W^J/)*)AA/]7BUg5&RO"?G=#r(^=#s2*-D^n:1X(6C'@oG/
%8suuVY9]$ohrKQ5T]*90F<tUUi0A#fP'"O"L1?gX"J(a:5a&8Qh%YkH1gLDkX>6HoF<r=t#;oWj6Xp"fR&krYNY",ii?C2mOI%()
%`3.sP<Ue6CGZtNEr5j?McYslmpD!_mmq=cSIsJ=?qU8gBTg.Fr:A9#2r(K1EE'EoDH1pRN^[GPTVI*-gnM;IM-2IXSd5EiDN5Qtn
%g*SsecU)G]k-n)m2eEfLl%0\K=12f0l6Y2\M.&4unsXFZG=Zb3Q>Da#P\7tD"@^/8!:s%TQ7DrbK1DrnG/EPD#8Yu7>-BOSoSlhQ
%%3lK_8hJXAh13i*CdhO`NWZWB'?e`T/Q!G)la>hg9D.!OI!k1VUqC7F$1rBEgq&j+fm<o0emMm76j=tP_**'7S5"nYbL_]OAhArl
%I*Ef,C,W1g$*6%?`/.rIHY=2!6k+@iOdJZ['1qCbbSg&1XZP5=:Og]*%,;k3S-b&UG-hnrG(JNlE'`cir)0A`9JtoQ\[:*V#u#\k
%DLRDi0)\IePqPaLOWiG@4$9Fp<u@cqA2-1,p0`:V%3<1r?8<S?pIU.?Z?fq"7$/WArcquO^3G!V,r-cFAC2mn;#\Pd8/!G]m>/8/
%8k>pG3/s)?K5g%rR-\VYl\u3Q6HIV7@V&aqq7=UL\8+oU,-Y)GeYC`i'Ng[+V#+YU^q%W+7hHQ^<3'&\g`l.H#o;]q?sukH$E&=p
%r;]M':9o*SQ+?nf^2QY5Q2QLq<88ThV;.J3^$:-#5bTeKkr_KqR`<FqTeJGDA-8QoiCuh.`3t1JHHa<PWb@e[fKhk+$I=b8IWQjM
%)`H5bKj.0b\TEapX(TrMD9p;HK-N$[(:[cBqb]@UbRT!Me=ClCA[+0m\=f=&kb=?S31]L*j2?/1RL:cY&ikLsl3(kD@;#!Fl0l]0
%bUj'"]['TK@j@s^0C1DA#%'OONK\n*clgH.gV!?]DQD2@kt$NE9aXrICg9I#h34ZA*AbfJJ2(>uP2s2b"RVV8\$or"q48iQ9+^Di
%dIuGM@`XFURo*qodb*\8^&=NR*T+fS%ZL42>5oMAC63<b!<ZPjHT-FM%;G:IPHuse\uGk9=sDM+6PZaq(:H]IJ^l_m4mGEi])437
%\\CX00Y(J'c:4?T.8hgXWH'AfBb>]fC(IH?II=$>O4<UX`\%8#8]Qe7'25o5%YZ+#CYunDCEWHp<qHStMIFgSDPdY3bn7uMLF=FN
%12&_(M/+FCPu_`"7!!Bf-sW\&3leL5gLAjp9p<`Q)61hh[_!3S):$ZN[CV37Q!s"69Dgp'^mMe5\i7kDC%&Z4ViYH2]T&LVOi!a(
%>8?M[B9<,@O`=.(_napb&[mF]D+at1Ao#UZ4lDlhnSQN?VRW0rI5)bp4fjrtL5Smrn\E+KX!qbiGm'"*cuq9UUiT*E>iQfk@e?UY
%b"Fk48a:m6,hIFk?/`80RsQ5I]54M^4]*T&C+W^q+b9th>Ra(WZE!HIZ&nmB<&LUcMWqEeL)BV></9#sR[qc]e9T@9;CEo@q\4C8
%",CGNH)f5D?+6ilD!BGAD,&$p,IO0qA!@oirKp5HdbC0UqbKl.!UNfUYs4WJk1ZGMkp/"I%hZ<3`Kc1Djp'#90*_6Llr#?k-SF3q
%r-$ZA'cs:rRfO1r)kL/6D@*bE^OCEPI>'VmNuA"MfkdN8D7h]Lhl,9VR)tihZ<HZ-cHaS<>(hAIY$<Q`%[i02fTPL:D2&KLYLQY%
%1D=RC%i"mD%tYE(p0FONOP.U"-9DRH?U%V\*3Z<8GK#W,!=QrkV>D/-%7?Cfqi,0FR4pJWeG]1QP5Fs$jt5t-kS*]=du+W1A'qX@
%NRik3XptR*702R_I:hcYYW?lI?Cag>!W*a6@LGo5Cc:FV.C]>m&4KLGm=;=na6sO@RTKXW`k#??Fp+$O2fI?$$(9K'M:Elf];\^m
%M+p6Sf<b>VA#^Kjk%OT)i3mKLQ]ru1P%B*NFqg&.oUX105BW@*k6n1\B=d`?e-,AhL^tinEk*3.3K*?6'HSb>(gT^;]kP9R1R^OK
%`ng9?$>4S+Q,>r2$h`69'Pps$Q3E#ZDLT4`j/&nT5Ych2+lmgJo.oLp#cpW&<!*7N"PPb"Lc<WY`h]0I0>#t2jt06!q5ok>T&lU&
%Wl+I`S#RsSX?Z/?MTE+Q!qYHgK.WmffZ\]Q(kfISW\X75/HiV>N9O5<=/KK2WR$o+7g`Fj!*N?i!$SeJc>J$E8)`r0aIa*h83IL7
%lY^Y-RX/'u@&+*(>tK<@ItTaU"E1f$FLP4K/1VaEMhmOPR4TbBo1a\N1V,bL&mU[)]pGc/;_Oc3-lH^%.DJ,Iq<R^-#60.g[uSi`
%>TX@)L5oH6?7MUS/3u\7:m<U`9aGJJ_YJeO591(:h?Ca>U3Nof\Vs_Jcq@Slr78c^/\+A;SYC(sMrsN`4WAN8Bt.Sle/`lo+<AK7
%\mfU0?T3>K62OBi]?]e98O?7!(*'Y<i0@5cj[F?cr:XE="l2?Z`R<dhXUWl>Z=+g'H0GY2^hu`cr:PKt^Qd/k9Kj3rd<M5(8&4%\
%G%INO-J/5YljrpjrRp?agh9gTOZV4JAa$<FG`)#AO2H7qLrS=LHc5CA:Gr]#qTJEJkm$c>BIt:_IR]CerI"2%HctMF6#Zi]V>Tst
%!tpB-kn.$Gm,V[[m'[gO_Skr'B(;ZMquMrB`Fa)+>EIV"A@!ggq3Ts`"4(#2nSa+7X7>g<*!:4Dj=<@CXmoU[Qpn'*JC?m4Q-ZL$
%r!:=N*Y8&Nj5]U?It;8";hk*&P+%FPJr5.SC0ko!rMd8IoBoe89'4c$qnNb/"BNaWjOg+$$$D7%Q!Q<^(qf=Q]H/1Lo-(m,<L!@h
%fF%i`SkuokI7nOUKRM#&T.aWd<AENkWU\6J'_^S,)S.[%<qn\B'SE$QpnOt<QH?GT(YTER`QVnOaSXI3qi.aPQ_QucjOC+7;0rGc
%%a7u+070NmhhpQH&V[b)/hCE1'5Vjg)b(jQEm&5Xk=Ij(L:Ap"NGl4"j+,sjLXC^3>)".@.DE3.KDk*n*Ku_YI,pAI;>]#GJMhML
%M!Zl1iu\2e).f3AG&gn4fVilsCu!b]J/"(Hp8EAZN%0O:qLK7^]rg6Z^m5ms1CNnKGpUYuOG*m3*fZMp6S]("lHOe)'>dkhQ&$c/
%SsRA4`->AbS8:-Y(RC\ed\U9u=tE16=%`6@nDREm&FaNACqLHe(r2$>-nuc9<mQ?e`:8GQAmSTqT=7HB_d@T!l\UMA,?8(,l)MV+
%X^*X03`WWlRuACHSIdMm1;$O*Ln4:B,C^0O4L^&<0uI%p8N=U[>Z:I.gs2+)ZX@[Uh]Xeo/g[4fm/^:m#_73*AC8aZ7OaA.R3o%6
%ZeX&F?o<dgX>j)"RBT)Z=$Ag68NSRX>qFll7tNjN9+Nh.U/XUd\b,Y@/2d3oJ5'g-LI9mtqF#OX_^:#tBQNDUn$%o*1juZ3rttnB
%s+J*":"RrarCo%0?kceENI6mD?K;*$?iR3)mY#%]8kUu^Z>#D0+k:U:Ua;2jVGV,[%@W^2]&hB4HFRF_b'OVA9>\:chYY1&/`[:G
%i%tgRnQs;"%e=!ZEu]X%ot-!u1.;gk1KbQD[iB(4D56F#Rp:!]!LB'(PhNNn3ioatOokL2p$0h3d)$sKZ7o#:O<Lm-/8@:G3h2)W
%ph<k*k>a3#>HDf1W\E8CNc!Jdh(:TrhNnT%njBktlDrh14)%]-&WfbiU95PF(-ckOlo,/#DEn):DPQ44OO(J(X3PT^3#RdoKBu!/
%:Dr+FIr-S0gpCBg#!--0Kf<pcojUR$4q-hPW5[;LL3?Kb7*1HGZl`MZIV!1h%Huq.L`\3YacDbHj@;:?)r+0-/cBA27F*mLj@;QJ
%5B$PZIP`n$l@-6B2]B8O\[t&9dEq)-.6&^bFCGSM>a8NQ<0aNid2'nsPNbtW0"Do1c*$4&(ZM<HITM^?6JZ<g/QI&-]$[;W<Hi9!
%h6+$H7]TWY`D=/37]TpT%+bu2UK+\V]r5r01'86U;Vc"$je4:KFh5s#=*cLKNs<fjhXmS6)#\,u?0<Jg)(*I75<m!+O-X5KUS4`V
%q[qYF-?ItuoUm98.q-hTXF@MpbnXpQ81V7@@1T3Fc^/t;,!BYJYaBD'UnM)HZj#ffZs$QWQ_(PtUF.Y2a^pdYogbC@ZjaPo%5JK@
%8NgdLZq_"\*GMpc![o('kk&J/r6R'gMC:R7c8hdI/Uq/KUh)MGdS<mbBttYC2sNs:<p=4n-Om;*cKRoaAonN^,7S^+n^$Pm")OZF
%3mqbb^83&+91!Zp@E\ore`o]+LMop.C!pq'KK8!0//@5f:KkHFXW!1]1^huSJ\Y?%-G't7@.(iQLF3OHBQREPmRkB;o+Qtmddi(&
%.kP8i9)CC:hcsmD6)i[CJGrI!1L*8t:iM;-p!Kn!\aC4lcE]*A-qd>(3_g$tma*"AY;ic/g/&#*51cN\Qsc#tEQA2nA%XAW7PORt
%4B$37fd;8%jU?_H5G5ZfT3[DF!mH;3&@l4]4^cHm'D&N^kBi\#bO<0A?Q+o+)EtS!XGhR+>Rf+\MGbg!EfBobhed.@6"<)Zj.QGV
%*.U1FoK4O03^4ieF[T/TeCqM'4!9FNmLJA00X>.afW*VZP2PCdXY[O-IYY7:,<b+#\DlTZDW)WnZROObO@cCnDrQ--5O^_E5=j)F
%?i"lJF6Be*U=D<ANeR<7a3-=l3qXC%m-`Kn+7FS+O%t/'n<>8[4aF$=*Bl`X@e\R:9:_HT1tPB%-?Z3l]SVuAg)$OP<pB8U^7qFt
%)\Q2]/NCVn3o#o,0#:b.delI,dh31.d58VZ^<!:ZOth1H(U[7L6iT/>hnmts)M;X%eKeA\1qMGd_Eq4%mES`q<>F6&\5^#=C=dGN
%&QP+$UoH2?<)nZY<Cq,/qp8;m/87:`Wck^p1,TfNn^:Cbjb?&J=&]^qjcZR@J9buF=&]^]S62*l'unOX'Ip,+7sumh<76CFHkNT]
%>%*U[C8t=/Dh2](L)L4O6[&3-ldSo$)=G<SLMA;\6J8!".`4h(TgsrPMggGf8kKWi)5a:JgP+fd2:_:54!(JllAP:H9naWG@t&)@
%4=TVY>qYokc1%uQWr-m/;e7q&Wr1/FWEPg&W.+56NUoV6eR6(=>a`I*U8VU.IOZh'NNqiKW7oL<!`r>K6q*C"Uo7$j'ijN26q*A`
%78d+Up+JjgO%b"VBeoRWUp#X_/A"Z>(epn`aAEL!'UJjOj%@d+1P]7@:i8*R\6clQF?PG9Sj%.)RDs1"c*WkMH&U+YJ?L3ST,S5]
%im];la5uaQ]I@hG33:J.B@&Lg\Z:<fgQ,W^"/)cUAJQoJfIZklhT6$:G/7C4@f=a)QNK\_I&Tao_l,JE_^Jia2jZjf,Qlepjn=+H
%Nee?1Q(]e)l'3s%V.)1i23h?Ao$S75R<W0SW$h>][I(Gu-_7oI?Klahnhl6FA^!@9QekHhL?\F;Ca6Mn1c%W#q=10XNan4f9,5Bm
%Y$eEbX=jcBZ@#%Jaq1E1H_eT.XG]FJ*c`oHITn^QdoKCKJ@$44N&Tb3FA#i4`V!E;gLn\*94;Cm9,F-Xl]tKEW.I$n'[F2TRVml+
%5t^J.TO-3L*^Ls6?kob!p2o3@a2Mgi/F0DHN8a9'6R\=K>+7!`]DXA</IlbO#j,d:W\i*>-JWU)'>fRSp$Hd_?tjq,r6h\VV2gm/
%]O^N&r:M_f<B<>81:M!:OJo%*%%Y#do+59kj34iLBr7K*\eYd)lqD\R`E2kuKM0I&fZc$)Z>13R*LA?!d*EHQZb5q)\^l&jLdDS.
%W^%fBGTrYf]=ODOF+9Ff#jc:YH$f2rEPRL/:]^<pr?SHg=:gPY]bPnVNnaM<W;Z[n#=ei?>ImW&c5DeE(l[fSjeq3aHZ^T29j?L<
%\V.+<MfKdi+Y1@30LKiVkZ<)\+"pRb_F.RWg"d.-D#aKb+7$-1Oaj=0Y!$*jKmPMg4X(A9a+IaP["hU%&"N5EhT_0ug,nC5@<bB+
%4t!+>"X]kbS$;6La8@jg4rpAZa;\8sW6g]HJSG3UH]ga(]n[>bm)a[VmW6e$)YU:l^KEU2Hr:hZiK<JXI4M+qK%;T=bY#:,HXV?,
%*!kfNO_Bl=#:`#X;([p8'FDm#MM.M(7RF\oVK#fS7l("P1E]UAUa'tX:.?tld<IZ+%u'YnN99j1N//kVGpifDBIlV<)a_PcI@Q1@
%Mdj$*Zpd%d%u'Wkjh4S@"AN,.bn(><oMi'@6QnT-]8ocZn'TV*6QtY/A'Lqh$@+<i:?G@Yi'ji=KL1"2&QoQs!"3g+6QpsreUiNB
%H=o*+L-eXoTb-!#liP0hH?AKJ#u71U%!sB*=Ek9SIEEOj%n\PlK9):Q6@)U/kE>/4$C)hZC$Oa$VA2:YW<4\sh5KUbA*#=466Hc)
%^UaV9%Z#+dKViua*n)3>L-[T]@1\75#l>!,&.$r`mi0.eOOBeUBc*X9.tg_OT6_oTQKNWO%$J=X76qQTJfk;u0bB;GAIpX%!c3uN
%^_d>bbF2oL"IRa.@1Yi(bP16XLYg:H+V7f@1kdahP!pLI5QHS5THOkD*Z%s'&d"3(:;O7*&-rF.:+kt6\$I3c)ae<HZJ>XTpR]Fi
%dV?b>)$@_7\S9,>#1AR2WQ%3oCjHL8@hAh=1@O+0+?bj.&tq8%6/Cq,@&JdI+4*F>rUOJDoVTC)7-O"C:PcC*NeTP+j8K*m:XteE
%^F6d/410?9g8HOqQbkn4f\tNJ40,Pt?A`,sPo^1EDYsk6S_E^+W(@?_+tZS+`!bnPao,e[?TaLl8++TVq?B#Mj:e+$LhFLcWMO<m
%/K',]!1-gFJ*QF[itKE/Qrl?_VN.<hZ"QIE"9J37J8shEUUJUj!*CJl=_`NHqZG+#3=sA?j6sd/lI1rH6LX*AVWc!f=u`7OB,.X?
%57n(W/LrJ4b\5\.U_S^:.hT!e76RBD+\A9hp_!<J,^E#Z.n[&Zp-r$O,fp^%]A4NPOsg*[=:0!oGlf&IA9m1*@P:fKV_j$oA5kV7
%';&6l\"Y]TFIhs+U@6HBDA,-,DW[lQ[-<S.V>]O$Q0((<e`+.ec#\!(q2sf"3m3PIk':Dm"(/:&4AJRaShJ<%Sq&tEm5.VOW"j+r
%bnD[mW`oqnH"'#D<AAcjQk/B+36r9/:e>G"SgTtD0QDk1:D"38/X5FTc<(Ko;/.TZ!G$HsW00:5.j`L?iY=k&Sh%Z$:@a(b/4N$l
%j9b)?Z>+9S@r6I_c=G=tH.&ER[nD(F9.@srPrCf55I!>IKg9lG@+C6)T6?Bq'E]L!P9`rF;5ZpL,Yo"*)YH_n`&fh;Eg5qrM2e/0
%8Y5.R'eW0+H0-GP^AEtql*@!*b:*:qIOXUJ36;gcIN"1c-[A=^-N:N<4Fn5ZG,_t8`(9G]@3p1#)`7A,OB\qdK&hbiEo3j[4@L$K
%);4Z47kYr0c]S.cM<'Me^R`-5%TJk+lQgab=aEU`8=h%5*g5T@i\#l_6m[+FOK:3@-@&3<b>(s&:AY<sOcqn)J]8?f'$51t8)?e.
%aRP8rZ(AZ5)]p?O'3:9oP\2=_8kGUP^P:JI8Y./a7Zlc"g;)g@ke1]D[l&C=,K%VtZihHi1+N6bY4rIGWW49a@->trp^M/RPUDIn
%4mLMu>?:r+06:m'<(s&aXd;e(@+Z,i-Q/<Dn?Bl`g2%<[<&,?SKm.VXir][7_T-R>EL;T9]JQHG6.TWt@#cA8<[7`O-afY4Ns4*d
%Nht%a'>qrVQekFn=Z:RM:ZD0N[VfZKYjCMf]Z[jUS?T,ji^MUl34En(mbnm!%H0sEdKnR<H:Ulf/+s4arm[V`ggHENa"\NqEd_re
%gf\70SmOPICPC(MVb!q*aV4ra=C7GVhN\mH$kp#3B,Y<8oB74!NSYDt;]e/e+n1Ri)SOp3b!utR1G%X<UF5`DCO;*`$=C`^;ho9Z
%<=KGq\`c##):$h'k;n)5QdG240biaN>u1hsUp<Se'jWfY9%>cH&EW;K\C'laO5R[VPD^DVlu?!cJF;dW/Yp"rK6`mg_f4h_ERE1P
%Lttc(#`nAH;U0#i"Al,]0X6GjbaCR&*`iKq)26N6j,#LbS)G(/c*0][nH',HBL!B+'Rg7Ik=uTLaI<jd%AOfr/%)Wk0![>mV1$cS
%YFJb98iRXcKf42e*mL8)ldL27G>@U<_,tT,;CFJt.?]%N2NXl(GKk3EB1`trWL725E>Hr/Q3TRBm?rl]KOE#:VrS08A-f#[RB1&,
%p9>gI^[7,-7WQoD-PETToHRXWW0B-%.h-C[$Y1MaHJt)Enf^YfC^1F2U(L>#]9]-q^md&^%HZS"XMcbZ\MMCLjB+#Q6!Y'2C3I42
%fWnYB@-j+El#[\f//PN4_*+)7mD!n=R_1d;`c<l*@_!kfZ/#7M*m;e]'sZQlqB!i)TBWW94<c5ARg79alTE60bg#aAK"60l4IDV9
%fL)B9)BtW>jG)(;,[WZ"*:'/.%;DmYCi@)ZMQ/6Hbaib7c,&0??IVmdbFN(Bo=[5T?K=rN9E>S5jT;KaYbHS&W;XuZ&r(E-8%sh7
%Ee0@sV4i]j`*sS+773t,$oF1VCbe8VTj1th2^stAE-"X%`c;6p."W)T4Yars1Rqpb-`jT.r(A*TbqG?6\bZ1eR%(k>K=Q7u;D^<A
%Sd0?.(jdqq:IbcSk*bgKDOt8Ik%8$m_;$:oe7^"0*m.2TQp\DU?l@*]Jt5p.9,W5;jGKLmN=jRj4'8Sk;0M"8342ecRe1T_>!"Z[
%?rCbf;Y[8QN`'XKQDh2/:=Ru+41,jVlo]h,[hc`-7I$@`CB9b-`<`pgR/:Qf><>^-09UjV>W\^m.ESuH%Q[Po:."\F(4`W%X'6K7
%Y/NU0o7`H7$hLe]@dDfQnZ.b)U>/r",1gP@BV>%9bYcsrD\mFGp5$g\._/U6G**&#Ec$OEM\[n"]^as)3#gW:+[<jif?2jqbH7Q@
%d9M('P&!:X2d7L>g*`)9eCkWhY3;sRIVD(a'5DB5[7%.AE2(qG2g/pfIVFlkTS-I\PkG%"eCkW@E:TjWjRs_O>59,H!HMu=%L97[
%CM+!'(q93laK<^+ims^*Ebk7W3O^msMo;aJ6Q*f!_QB)/DS:f(F-aQ*WQB$l.oi?I;<?,4?n!"heS%e@U6$kBC,F@^.'-jV7Y@-N
%P89ckUCjTV$M8'i$2.L8=m0\AqD1f@dJ8m-E%3rU_>sTBc4=&7'Rtkt"cnFdK6&o='@pnTW!6/0.;LdZF:GbtbNBoP30'_:NFkm<
%*kK#&baL*$lBpD@Y5*)%[]Z@JX3jInN0n"V7WZGJ7Y@U.E)<U_i!!:kVhBI*j3*4f0:kK$`k$4/)r4R3p=9+>FdoLL1-]M^$Ob(H
%qL,>\Ri:-$9Dk^s-[sPOX+tjA21J(n&[p4)5+'QT_Q2NNp-@9<k]CfAa!j5fD&,O\r2>;lA)sr3lp:N-Ec,>AS3_,R`jRP/(QV4-
%nm':tg,Bs9B7A@EUKa/XUX3.P`pmF2;>V^!,OqQ&buRd8?gY]_ioET1gHjM3IafuI]>aPB]0r1kk=5R=FBanM"k`eJcAr$=\N](E
%SJ_0"!ad!t,8"Zn;nKdH-[o$LSKA$Z'/H("-$.;72u-<Q$c2"'IMCpnSFKOGqthq^pmV)ioFC;p';ROVhMef3por-lQtLXi8-'*"
%JMO#rN"i6"-SeXBf,nFAUb_9V.>UDgSrKK5Y\cO7Oq^<lKniJq;Y\uC1l8s2U;KYc-ClE]r.TtRQ/P,p3aq,A!OJL0j@KBAbk<AZ
%$8=VU8s@sf]<7>E-'LfIGY`CKC(Ddk8sVTq$qcc,U6(1/J1hg@8sFoQ7:8rK;@dr)\fajb,I<kn,a9^bEVL$]TTjL9Z;3f5']&_9
%l".i18X*DJq(.p^L"VBK/gX-O)0MZQ`e#W3Aa[;FV07i>Fc(u$3*R3_Xj]I,i$C?Q`6_"f7R@U_QFjI[-UUV?7mZh_PsWfYc(LA.
%3g_)/5Sm%]O3!=QL_u"!hliCaW`I_B7FXg[ei,a@*SkfTf&3ATQY(ms^Z4[KULO+Vr+T+=(%<`1DsG>(0otX21nCT+SNb6?AN7YO
%:0?O;^rR,;YRV#5Vs4F,f"nTWn=<-Q#A)F9Ku1:;ae!i>X<Y-g3Dg^GOYYNnbEl"r(Ji7`*Pa+Z?c$:#TReOm)A[[.5("S:a((W#
%gC=/ckM\L1)nm^p`o66onkKU#kN[ualf_ICZ7;IEND>$A]p:\=2L:A%fjjZ7FVgh)E\;`ekiYi.28Wk&ZdLZ]mdaI/J":O^p!4D4
%lLs]9p^<CZ5R*8`c&i3n([S'Kp&jIQPK=jK]Z;e3.k;S*DJO0><RueidZ[E&CKtQ&]L!4(<rQ)t6!Z3U!KBnnP1aPnc^S?fD64'p
%_NBnb?%R>D*(Z$*`di8AgiW0]?_*]En*UR"Obe%)V>[I"h<_G,:GCt+ToB?S(S-q4/:Q:>%Th;U3Z/1V_+)lq@ML@IS)g-77-._'
%-[AjJVX9o7lSj5AiW^'t>V+T=75e`H)KQC,Bc`8=%sMc>F%rM[EWTIWVr(8HXt(5)=AIP(EY/&&e(;$_%p+Sj8fRuqb/3:aDFOY"
%b_46o9\!d#koF3`Y/Ylr"`D6W3Z!RTYi"=ShXAtMj?dQ%OpBh!-*J0H>]!hpPpl1RFd(5!UJKT*BOO=unHA6G""Z!ABrrT^k&LEu
%0dW:m3aJ4-(;V3AVTl6I,]Ch_d/<;)<(j3Z['2h^;r>,n5."EJeuVBmq=7pFG.b@0*sXQLgPSan]:fbff#mFlpg3qtND+b?:!70=
%.BmQb*gNf\6r^7Gp@J:(n@QbX<q8f::FMBKKppC^EFc1N1[%MYL_0?.lEE<Wo@:D*V20r.%a^gA>AE!rp;Ks3Y*f_1,>A/Lk+5Ei
%J6d/k/JDscFPauo)A0q[QemiRB9/"QmtaaA9l!NKft]WZ:D3.$jGi(rC`K\2lgukl0Q3$<iHE$]`ReB8J0RQd6MLWXZER1*$ZjV3
%!=*8sJ;l?.^Y`1L7bl,$=ur/jCI/6$PB87EW%a[&k\?T"9ZF?^:57WbdRcl9[#&fTp6SFb$,B4I<8n%RFOh,f`.8)7idcYCnUbUG
%(XC1b*;P:2_`J64@&H&)3gY&cN`gkGBR^VU)<E:r9/DHR;WL#B`h-C`+-Q*Z$,Fh`EEF!:P@9G6!UL<%^U#9f7hj>",oA7n8V0#)
%W24<ih>(KYpp=ufj<JOPQ#J)R@oU7C'7qjR6Ce,=q(b^9&Bp]M6(JRseAH!pfQ-Rno(Kkh3cVr$STqt;SN))_p?aQI'WDbdlPk!+
%pe7GXj8fSL`%cARS2c8UQkRMV"EPd5Rh7%=ll,o^O9>&#ZG\_@,"n5K*aUARSJ6T;RkJ.&,*Q!#T>9`&8CND/J6A49R1l<42S[7<
%I7/pDTM>K!q$<`j#SssY6Ce\D5D_CC6K$dq#^&JC$(fni9aT%5fE?=`d)"-S6Ce\3l.AIr&1m)o)fn?n47)O4MV_Q13HO263HO21
%K/rIRKfO/NOte?T3sBW`G^CZ1*+*EuM*)iqRlEm_L_If7)fal)N$(k8o4Gpt@t'CsEJQpaN=Mq]3_R>$e;5`3M)pbfeu9<cZpVTW
%WoC4JcH_GMGDg#l+*m<*(Z,#n6b;6X2`O5g@#=tgSa1Em?$j-NkQ&Am:G]Sr6oBi+cN:<_<QcIqE!s+,XWX"em^.k]1qFA-2A@>c
%(Y1TW2F)Xb0srMpE9Q8GG&#IkL?Tu;>Rp3^9$<U8Nu)&^9<ZDP\hjTQ23sCRp$4KRiR@Q[IGsJdh_<0u*;jfus8CDrPQ1ZDJ,2D/
%otMDpr56;Fj.H;QJH,H@%ur&o=$a+a8*f@Z;M/`8k9%<XYW`!\VuMQ7mdrbIlWA82U7o)M#a$e:Cu-"pej8>gJ#K%c.16U,!pK")
%d2c$;*]0B^Q7T4Z9C$j38jhKVKEMK/?)o:"i.p(5A3P$aHHK5AQq$?Nc*4n/mk8UYKCn("n,N+=rU[f%:]K\*J,)n?otUFFJ,XA9
%r"$UB!J..]\W212a1qR[s5fmQdsq0Xs7hA!s6p!DT7?jtJ,M&#oj@\CY5L;/r:d_lJ&Hj9otNhtoT+LrJ)S-jU-6lj&q8.79c_&r
%kkDDb?/bp32IYhL?#KS8c./g)l_E+]^c%FHf(-[NMY]8;R?ECVS*b#)1K]/)B>A16.qh?u.ss"sejCXS'?*!?']O^>P'G!2o!6tX
%YqB`UJP4%J7%]'der<%hp_O/rGp@=/8rI"q:]]n7I+r_hRS'Itd`YNO3ZU(roVD136o]K?T%^dubF[`FS-\Ek5cr5HHn7nN#s8iQ
%C*=K:S7kpT1m,""$,o[ZQ4$BLrsZC[qm$S<1]A9KL)Q*;(g/7AIm4ml[o*+qn&`F2_I6==hZ%MJi=\_,/J>Sb(N#$;*Ph]l'Z492
%[$.p6I$PtDXeIG0XS$4=IE([-eF5%oo<a$>Up6Tnm#^`@2GJN)4T3D/Y)5=Ur0QF46<@iULMS=>f8ea?f5"@++JFCdI46#YB_X/n
%X0HfP?5bc2Vq._`]9*jEW(8PV7u4T9[OhB&@+[CA)p9sPS+rgQC8O;8d!c;GN:Fss`Hl*'+#Sk!eMG1K$#_OC7[4h]*t@&C1qRb#
%OtJTHo?8gi^@IuDGetpG?%KX``ASQ+ih>Y"4>P;#!V(Vi$RuQ!JK[e7R9l>u0);bTbWd=(J(6rYkWq%j[PZp&\91/j%R\\5DnsF2
%[4MM%&"]!C\8M"aLFX(ZRr;d/98"/l+!jGC69X30<V)TUn4KHWdLGM2)AI>i8+V3=r,7HRqYs"Xs1?A/&5Irn$Ab=!-=X3SWA&5N
%%1f"OoZiId<(jQVa)ri;&T@b4pJHq6Z9':hF[)YrpLN5Cf*q$1n/oM*6V-B0T(=8P<8%#<P6uK`97.!]rmW%]r#&ZQ#0;Pij.o\"
%'B\![+06Lf2_%kn"9Dic!s%'OZ'=_q].f#OrBKY^>H]X3ELlnX5lY7Wg&d/#pC#ls,GQjK[+fH*gCbXE-l8q$UA#f7R\X0f^@R6p
%OaF4cMhcG4X%3hq#_JnO[52I@9?ao)(dS<Zp]$b%Bss_^1"O7"#k=Xdr8ZfL7,Z_im?^p/rO@iU;VUfq%>XJI]q%^\Rh7mMP^?lK
%i9>FqDNs1$Fe^q?jr?J`8#qdZ'?XmZ9\>?[=2iN5[PR-[@[E@Z.c5#h(T4)037>6?:sC"^*8>3W^rPoT=8Xfi/)l"Wnh,:STb?5Y
%%["/uRc<H$QTP;aPjO^g@k&E*aA_??/DhFYGaRI`:^YFX*Gh2p&u^3iruEjQkY$sdH8)0[be:%VAG_G]-5?KXdlY(p9i:QpgG,mS
%`ITXU/>)(8ZeGUcetpKKD9?n[3M^380&-"4GqCgoO<-jrC'Gk7km.8u=Bt;1Y$3%@rPDS%D9i='_At,P(TtD&gl-r&D[WK7Ea?3C
%f,0LTI-'Q<G3fiW=.Qt+.hqC@YIdeXcfQa%r.RA#b,H6dIk3NC-(gTGgieIBo?sb4\+n,i.C0P=<`(l_h:7)-5*Y]9U:UU?3G+F-
%R?<=\2@Ocmq^)2[F4bi[S^n6C6U7:OG(/U/.CLn?jTi!n:)cc%)4*^M)R`eM.8:gjmrd4pBJqXi#H\KBP'DtCncV]3"=SV\G!9B(
%DY1NdG.H.5T$$c55&;;]MF8L55>.$i<CoK5=@IdeJA\gS#?>hr94-'3^q-oaaC?7B$$2Hp?89j<.>5l2p22M60m;8q/Y-:TiKfsD
%Z6iX[LBON8fJ8jDGr2MH4i+moGP(&Es-$].=5#&>Cg2M/`bV^"R2XU9bXNV'7h^,\Er9*\QnDs+e!h'j+'\7=1Xbn1:HQ%)"GRn#
%N;hK?NQ^UQD8D?c#,LiQ4/7elI)Ro#1G]A@.0\hSq%J;U.'Wdq&R3lRlF2JNDOG,8Q/J$IS&A.FEEP,Ph[se^KP#G'Jm'U]cH(4a
%]%Lr_n(?22Dd-/4Bq)WiDrSrPhoP.hXP7gdiB0R-D8FKhm%#Ut70Q:]Ges)HYqodnENDPM(fY4[/BORIQ`[@<[fLcl':08]a>1$F
%7gg5=rV'+sn5_"35XaWLLi&?9AK=M_)!J-ej2X4LD1dDE=Zm`UXAnd.gJkR]?"DtH3/+HnE7Ep";R1If8@4&F/OXTjR1D)>;;.;\
%S(??;VL\"`p>/53Du2"(XbgTk83GTTQI=cCA&KAAOU-\iE$dhEnt$3ZR<@F8$2phDB_ZBOMNHRDiE'Fkf^6=b>)g5C)D!5416<g)
%DiW0DO`KR]Fj<QJ9IGg:Vs66QfW9t7*P:7^"?*>N5ehKs08H*,hqBV^,hZjsl(@*2(3d`9QI3Yn+0Y+Q-[E5(;ho/9f4!XY/M@)n
%>*3V0aq#X1AWP=UPqTW+5Jb<o;Gi"N`#5PlDQLBc@jA=Q=JJ*9GrUU@4:E;QcWR?ipX&F6DLf<-p(A*sTDhj7hX/DTU9\"LHp?JK
%cZ6<S1i5`:)5K.5OZ>5hSBQpACDQ!VZ!b`bX#XS<Q[<sbj\7e@.VS)Dna9Dl7=:-RHTTo)q[\tJHu3`7m9X5b1uf^-4\:>El>r+"
%"uB@hQWXZ'KBubeO=6>0%!Cp=R#hKU:X*.(%mHKGI\Xepo.uCMh!03[iY55H?43%2[8O_D@RE;2VfaRcDI#Ph@iih3+3Z,jap8]r
%V?[kV>do$b)Pd4.r&U)-iUoG[W9EoDp,*95^ah8o/bKJ]b:S_>SGn)Pm+\_;aS"1aTC0Gu+OnaqHi#g(6<*D<-X!>6k%jbXl!ErJ
%M)6?*OFu#tWSNVAV:LYO^9j3'-O^ReacZEtc3,q,o(,PaFFtJ#k632^IQEY,Lk`jVkAFUDgN1#+VEXNg2sJR*NL0BT\R42FHG873
%g*&Oqdab\B6Qf&\=:la,&sB'ML:bhV()DXu'&(U8/H_Ck'>u$0R6J4Mgd\UBjjACs)#O"#eE)tp1sKWW&Bt<$oSIqD%[g3f(*PWO
%Vcq"tD\q#R-kg.!<Mc#&[uWmE8%IWB_ksXoFSlDbHW(!!,dtR)[=JlCAV[eBVlVeWQPqL"e0c@X]&<DM,`"oI7WaPrOi//nj(8gU
%girR,OVg':&X2;l"$Q:nnPDd-]B,N!n4SHqN6+`RL=P,ITqRVdYk8t?U"nrN(1CjfSP7Uq^Nq`9cTUcVHY\)O%<f#@1.<]D@7!i9
%U$OXQOLE,Hs%*b;dBQ'U,09PJaL:B-LK,kG"g5'dpCV2T8_;W(6TEf3M`VjOp_cMt1M"NL7b#u*(6JciH0F5QNhm*aO?oF`W0*__
%+2Mrf*$^.O;8`UTZDGT.)JQ(Gf)fuE$8EaJ&SY,Ukk\A?^TA,ie_$m<Kr3)$aY4eX9^.bm$sq7kW;=EbUHm)TXIfnX6`HKQ;'5'U
%bA\c3ghjAaSL>kS3oFS=H@U.A0$DA7pK1btQ4)TUBHKLp\GD[4GT>d*X?FH.fl;ok1;f1gs78Smg;R5Ia/lUV-/r''S]2fldlo1i
%7Wt.;,=]Y+ae()7K?+OnNHC7TWBMbceb>b`C)Ja&^M<\4"pYt\?t$sdT@,*j)+b^b1`:H#b5tdg;UO2T'spC&SAPL-dc10Vi(1pm
%pWZ<!mI=$g,<,Lk[Pk?q'>/f?JG+Ll.k*$&e.UdS2`u]';A>fLX-d,ALd75)Kmnp[e2M8>h(17:HS_u&YdZLP@c4.gN>%CJWXt<C
%i^s5lh;V5LaK+J*'2u?;=uB9\1!qb25K\jXgO])`RaidhS)joe)fA<lRT3[&-7qrM_<%8915K34H9a<9Qjd!j/jFh+X=E@I=tO82
%#qfC5b#^GhUo?up(rd9GkHH.\Jf1%dKa89a_9/pI\]S8$k,O[!@<&Xqa$52kIT7X='gM(Y>qYp6(929)U@rFZ:Fb%Add#7%ap+(3
%fd+)95(?dK3kO%5\5Z+.=P+>@#+>L);P1R;I,EcfTCH'\>?IgZ.RaZc97WFXQ*_;Ya+c.E1Mk8d.3kkB8@FWR97C!P'j$md?pV>/
%V0Oa)A^^a=l*>9:7C/:K,c<-P9ZBi4n6Pau+FGO*9EXeGa+\?)mRj9Za8i"d+3'Yh'H:ZVQ1%(`B[Z1O3L&Ra?,rZmT9XP$>T0W-
%U7#A9bZgc`+N)f:D'F#e&#T!@M[%$nBll/Z#o7tfCj3Gc8lW/N%D!/-[:!O>0-d1?6[%5eeRcc2A_<4b[.oeO_'q#F`_Qa_j)><+
%P$s)iC:f[=UBmu54HC5_6]^=F9C4C)$fXV('*jqE>"muYaRC\L<o/aCA_K0g'@R_kaf.d0Wa_9AB<$8kL23fDlU%G"%@!;9H1o$<
%kuc3gHhE.4*+6EARaWXf=t'SCC`sVq.1B6/T8`5`<t1)O<FVjr5b-N'aD1AjRVDJ3ZL&eX0EcF<aekt>-)P'AQ5S\U!1$%\NZCBF
%IB40I3H=gt_+F:03$'@-+ago%ZXWp2KAR5YpZ[O3'?s"Tj>o!ieAkPf2jNkVSaMA:AJLE^Ud0@dRK'En(;u,U-%kYq,t;L^oLF!!
%jAi78Y^TGsCP1;Qd0`C;8'pV,-@L?`O2R/mBr9](2,<q.%(-ROiK.n@W,,8@5C]Gi@hRW:T=R$n&b-]e=?p%!62!cT4_,,bj(+LN
%\N",bHd`$FoHs.i'h5^6"[Z_Y[R.X*B1:tM<%Sf?pP^Z(O:p6bA,f">IJ/&3[_01iL46uYZFQ:WYY<)/54]ZETatc.aii6`0AVbB
%0=^`t,b.g1lHg`1MY&@[k\*6h&Tb+0HBK$e/"J2D(o*_RCoh>3)%D<AKb?Ai^clUmC"2PO=(D"Or!;oi)D8(0\HCC+Ju'\J*Qh<#
%"9$%)1(_7)&hfsG/S.<d7$FJ&>]sf&D6h&7>4JR`0edsB#;kf6:#?F?C43\Gb0h0BLBUD\;">.ZouS`9WFX@1#F9UZWf!I#\T$KN
%"=iJR%!pr%C1KZ9aGMB8^`[e5D90.-fOBt;WLr3^]BRT`gY7+5X\3KsP!_qb44a8t81,T+aOId%5-k32lA@VZ3[4?].Dm-a=%Sb)
%3t<t@*;Y-qllC^S<9YRLfp?o?B#"V^W(W$k<_mV)G4M!^+X15p^Pon+kRJIBs$q/,jAd.L8Ti+T'eINRTe2>Bd)=rM$G9!"eStY)
%K.mR6$*Y,tSSQ.^q"-g[#6t\+g,X[CD7UaE%m<Q.WtLY"a!Nd)ZPDDg6pM>dIBK#sK);aU6R,aqa+XrU)L<lTL\XWF/OH5RVIF*D
%1*1<n13%F]R\ZWoUk`i*Xo#1>f6l.GmCe';0C07)?R&agLrgW?rkYBoH.h[kQ]?:mEggO&ctG]3aC_b`MGJt(k3-kK-XebNMe^Bt
%RqVUp4[*FO_=<tV=gs3i/ola@csr'(k6-THnc2e0[S(F;R\G94d\#O<!3]T(Yj`uI`NKnMOchJu%-*!@ZT/5ig`<bFJuRF9qDE)#
%CVko?Q,G)XEPaDAOUoC$cj+&FVL+#5UZ!:gl*F[_Xq7*CfE-E=-cI+34%L,'Pu1g=0&TS66DGL7Rc8u@_*Fb0j3Po5>7@fZMR\D-
%<C]S^YW4_rPL*m%cu,nM0\XuCOf[9*<Wo,iGDNoUc6+O["3=+Sr)LQ*i^"C3%%Eb:B,r&tL!df[S@fkLWH(X<e-$,eLqrMIhR5%N
%bJbKW_XOJX6RIdsXh6cbd3l+8ObU9h:fI%c5K)6UC!p[OjACEMh?f<36OYG+9bmd'@]HdR&%K[3kulsW5%['`1.C6.8<GZL(T0YP
%E`mOYc-IM\8h?.pCsmd+RDSMs,k2,5e;(Vikc))g&T,O9+;Tf-W?k#@i9.I$6''0T0tSJ6-YKU<B4V-<HM'%_Y+X0Q;\Si5?=8Y*
%+bKshdA/rf)MrquoEK\DjdI\;c`.9L+=<1,);T@\&f2ZUaKg\M`h9i!alqXg4>-f'D"ece$Vt_`'Uq3NMp.'dE?&'WnWh@NaI43&
%feDP"6;D9,`#n1/\HE;Il(hN"U!b1b[T.?-X?@-1C]^PM)24#S!M\SCUB'ob7aYk,fD1XrV#75pF\cS\G`['O'9?u=QQ7t^H[.HC
%cTZ*>aF0i$ARh#sjX>B-$@ijV@@Q%$&=gZFa;_GH.ZZKbBQa<e\\9<SO^fkeY$)&1hQ!j?Uh6=@^crj'WKX@GJr.!cWcid*Uq@2p
%@[k++0e\AH7VoF+300cKk_a1uh\a?o`Zd`?jEh0.r62DTG5!"ILRg83)gJh+`)$kH:cmp3%qG+.0+V[efhog&d$.sId&Na'\Bs?"
%Cc6[*gF]'Ye]!7n2;-^3o\G/V`+5>B]d[q74#elDCIBr$MG7G(hQ=ik3MAM9*k7\pnrr))!%WEipcK;Ml7,@FAiS_cYYIV5%%.T+
%b*P@r"CB8^\OGL.!@m9YrD)EHX6L.`BItFjBcP@#6M&L:,%PEg6A@]>4%$HU@XL#7c]1E!Y=h7gK-6,WC?ck`k,sS<jKTpECU3"5
%c.nEF]8^;X2oT;PcqCL%%NDVBG)_fGUGpGu`7rTqjrB?2NL3%58D-[!N:spGF@fN"b/Bc0Lq6TG_btG`YbnsX<1=j;0ah5C^T/r+
%Q7\3Ib*`^.;q2l#X/Zu(`D!>!ZN-)ML9uhE9]_3Cn>mSd2qlHM3IQ&r'&L>8dD80D`D6iUVW-?FMji/X!r`O6%miF9%gS8oqZC:m
%_VPD5r30(`0q/FCW,\Dt8`EE(0]G_8L?1k6.01$a'gGZB*b_e0,ArDlbCZgk1Io*Wkk8kJB[Y.7fPeVAJLH[tP.]_Vc]#i_K(Ohq
%j//=YoZY3/#sauha,5`()%mg'[G26B6%!r7UX+rfDWLp7h6RG7$YUQY7YmICAqFV=$N_el[ePPF%?dHAc"#V<-j1lb24OH^?aUnM
%7YIb_qnqOe]IN+b9(Q5];TH*sgV`WB\,0F'#K4kQ"K(Ld(uU4OfW1*28R3@7RJ,0-5\DEqdcDe-hO1VkQF?^b0Q#$iGod0G[R0$.
%h%;DJ(2Q!cmoA5$XGl*uhp:PnK3?!,4j"+rA'2Q(:oJ),6&e]'f[,Ms_^'+8_Ot:`$Lh[7/1qKCZAp3V`f2KepitKNq#ougOd^`a
%Gkji>CFsL-%q+*9-_g*XkM>=IWaIhT@+ocL-lkgUa0Hh1<GWAH$8UN:FRL:.<39WR)G>GHRma=_2U1OV3E_HcgFsctPM_m]@W8FF
%)[I?"=oUujqWq<"[TnZ^@):L'=;J+fO(74$Gd*k\Q_YD7S<+OT`tiJD;T,&Rl8klaQWR5Q)nd`QH0.,+Y[/WIl;<--QiVe)'[1kC
%^Na^h!g_f]H!jdL/g:;Er35[r+qsqMIt!XIQp.V,/QtHbJk*0q->#&:9tn2sY_\l3C=FN01<,U(!'KF5&_9a?+=7PFCK.ogZMons
%p"@0_@XLNMlree.AYTR1_uC'8)<'*W<tG3A0]6C?n)BF"E_R><VTX%6GU\L)1.DD8NnCuJ1LDH:C-TtuA7F:M-peH4`T@JgLdd(`
%[ht>uSheB<mOubZ]e,`X&YR1Nal&i;@<hORAg,pC9iP)LBcgO/CR'+/\g$!F5+2qg_SmMRdUi<AI[D08UPOi8s+<mknuCZ;X;YN`
%m=ctum$`RZWtd@&/c\0aXTuiHD2:k4'FcoN(@WXj>>KDDM_Ece")OT,lUa)"<RU,G<N%\"^s1S<GVlsXB\rN8,'-Xr8BEZmAGrkL
%ZYssim35:VM&2RuPBde8-E13[OfYL#;&)6:S]r6.=BaN5[4'T9!-KI,c1$']f!/E<p>s\l5'b[H3MXr8(5@E@4.MYf4SLNEV0S?9
%GRCYb"_s-!TkKN:i/P,c:gMZ0CVpH,[2F\J.si1C6Rf%qK#L*?ZPh)p8!C:"k(0g6T8foh'sMf\-%90F=`N.1j0BD%RO%($i=VW+
%#l(BukJbZ'Hj(rV1&URE4I&Z[emcO@6Ou4;X71\+KAlR!FK\^CT]@1glZ3lFBBuI5?O[^Y#cD6U6#q2u9Bst<0ABa.jl->''XHkT
%d"cTrXCr<#gL9-%Fqr_Mh.S9$s+)8b>#*_iEb%%.UUW?&[,dGtWhPGuo#un0f88e]O38b'O;+B?A\pKsYt8:ZP%'215c3`lU5bY_
%?dJ)dGr$mDT67ejO\mnbXU(hYf[4&^<sBqAgQ1-%6j-9Od@<CGeLY.'/_muYPNk:dOhS*"kZL(a)=(hCf[OIKB')2X>^bG$2<d4R
%e192TU\]21<%S)d:YcAYHt<W.j%;H]\/O*gYe=0;HEZD[Q)V][hTE3KEZnaj9*2"A!eo9p_5njAfF#kA%##0.'_`hn2BmeM=2i;l
%(P5hBlEcXmds,IFkJh4-fRjZYIn<3iB)e6i8!Edc8"7@[+l4"!,Bqis>l$Nk7E#qYAq03`-#NuiOKBePR^"'?DUApW!_`g;MgK<R
%9*$_V@!/Bl'$qlO.c%7L$Z;4(BsXk4in@;V/<LSq2C$-YJY1]tfH'*OpC%%6Bi`Lg!nm`29IpGNK<C_!1%1jQ]8!(!Bdkl6m*$M4
%OJ2i52;dK1$BnU)hLdh:G#6B'VY(.D9O;*2YGT?:-cTHK&N=NA7,G"R1a)D@V3[LQ#TrOe&TJbiGg7;-[Gmj.B[!O;(RlaUi^>YX
%+hc<a%*YSe4/#'bBDct]GQ>n1=%.iQ_-D;ZWi/F/nH?%G/3-h)CaN_"W)<e)ps.r,>K/2cpaEC"G:GkZ'T]+l<F[`Z=]5<?1LA8"
%8UYan\YrHb=&sT=]&JndPq-VX5sc<KD_cdD7N,_p6eddhCluT5)"PgjHE@W&h]qWaaX^kWckR)7P1`I``SFWl89PI`+Cq]/>Gb>h
%SsF&h.0n;,2Sk8r<V9`Q=?!/BU<jFiNbm5dM3UNC&$ihl&U3Ru4k*B.b!eu[_Ie<bO)r'AN9NdIs-hC_1M%.#>\<W]R;D*2>>ufK
%Q'<$&b+0uE<c^`6&:C"VOB!g,WYFC`F9U$eY-d,g8ql6PD$B\C$8+hs:_HeRK?8PF(cu/cD@ge_JBeZ\5d/9&<\f"ueZR=*JXU3[
%i,JQdTUNpjbXqt>g]\GLd`%H/^aO#,@=OEem%)8L,uc8`17+p02^Xo0"(2of>7=pm2JcnM)jL:!Zp$Pia`_W&0W(&S[0l2(.Z2T$
%J7oFN@ef+_7SC?RMkSE]GRm]n7dX/uUbHQSYh&?Ik#7*Y;*D!\Xa<`H0$@(FQ8%&:1@M14mWp4<!YbqH?pk3q1mO8TJo`D49:.tW
%KWK!nUrB\A@V*VE+2*rHC7mQ-/)]rGHdO=iSX?BNk*n$Xc/IauE"UZI0VcsK7)CD?n5:Zj4KR(l0I"pX4"rLE9?3&8Hf%<W#"a\O
%&S8&>]D2!_[LCA4eH9%.i74UuO=b`cX+AJ5OVl7'o2l.*7M7#:DZoAoT['\.L5.!FElGZe;DAJ#\6A'`0]<9[/#1-d2/6_,lgrYt
%5imDIlk:X6-Nm+M+6q,m0K1Mn)cC`iLR8mgYE,RRfg0.Hf7K>eJ(m,je[(;5=,PjYcXRSDXZQ(ja5,K%B'NV1a=;H:rk.NtcK*qt
%#9#K(*ls^N\ABD9C&!6&OABE1U;4&PBc=s=Jnt^;DTSX>7tWXFSH1k1!OO+$0:EYLRfEdck$Bc[GK.6OBV,O<!Vq(QCQO3Q!Kf%Q
%,?ru'??NNlO85dU\M*eH[$O:hqWp0s<$,,&C.$Z)Z8K.j;oI2_njFfZe)XqWnAa,,_iPQNpK$;crk)9-q9XrA6X.USl<G\QKL\$M
%P]"qtDNX6^'NdXbA>GQSNVFLuK86mGr^G+c10+Xs3=30+9d\R6=n7*NnMg(V!W,!fbt<7l$T;7FIKQ#0^t(?b[fFor:-"rR]%7-_
%qmp)T:$K"%O\$P7?Q%/@]`1b7Q^VO_b!PCJo1T9\k8Dh=S%F5dq(>K^7_*Sq@%7$j-.:^/\\+t$#D6Z_='l[H:2(I[bC$`8E,?aS
%1E2q/=jM3;;I%Dtp&)1-TFbF+U3eLXlJ"9Z!Lj5>LUf-%Q'NI4g)e6mUo0Y"%Z%cKLO?2(Uju'=b$k+I<?19t>QH/N?s90COeaZk
%_@Di!jX14*F%JYQ>IqGc(,J[IbLj>_c+8/^@/d2(lXl,,FB5M'8ROO7<?:`>rZJ`Z$\VsR]O^lp.D39jQ\8&_4VQoB%Q_YFcQ8)l
%f/7%bG?.:lnS.*1VG2S.)C8EGq07m<T0IPsh*+fU[$]J`aVg[j2<r^+:jQnSfW=Q/)7:?t,9G(mPG;;\DondZ2*FM+Io<L-D;S8r
%ConcHmD[ZYd&P&*Rnhd@QC\rCC@gW-O"(.u,h*2T/'G3U`1fB4a*#mDClehM=Wu]AF(p?S:lb2g=esgUd-6YEqdD4n>UPgn?S#UJ
%I6uqR.$+/%$sbrEh>3'M6*D>[_`@<*AHcD5Uar4/_ZT&.@=olKWjk1,$L2Z6QUeCYr"sGqm>SXl"\?3^G=W<Bh^,H3pGTFn7GP`9
%,4f]@(A>Yfm)CuYUIs=?:(PTMXn>b]+Gn/ri[ngXi_4.1Y,FqQ;DM7KKQ(.gcI5@p8fYA<EIm@gH"bp[DX0ud!#S4lQ:EQQfMEDF
%M?Vr*P\8dXQ^*#2)"U*b.WVP.aS+ku3:dQ.3Z0A%5SB-TouRT^eeLXB`7=,;)gA6-qNiX-:;LuF.E:mMOiuCs7EdVjhe;\nanbPp
%kI"G'>"*g!AWG"_?EABiJb)56VUE*LYVZi"Jc'$UZ4UX4+KKfM1IbM2I-3WeM;_H&3F3FAcg(.4BbLK;a?3^_bV#l4jVh</4u=Q]
%.2_+%n7a>Hq.:b9P[-=hf,=Qr29h4'GP@jmI<I`9K)QA3.YlCr2+bWZLMVabk+sCRAF4DhZ'Lb//)i,^M@\3I;7pSTTu<-3&U;nY
%%e[3InHo\l2]33('_G5,[L+Tsft@/$1nFPiDPBNQg;olFAL.tm7N:T3*qU_,Ybc,ZHr]<:(g9TLQ@3I!rmZ=IO2tpODfJ&=A(M!c
%DKFfs_fA3m6@tE[dBl)!,.V[)o[tM<e0!"G6Y[[_`0Jm!OAW#u:LT8Ae=t#;"))RTDC_(r1Jm3_\_22>9O+IQ^N]AAB-<P9Kt'M5
%@3tNV85+c7_6,LFFNG;1`])%>A@5>:WP4i(3<:n6?IFAle"DX-cYp=0R2_3,1]o[AWYa<<A#^$&T+n4#`hfAcK'"nqT\>Ca(T2Aj
%KsZZRK3<VG=;$"1O0;;OBcFro43%FK0]Yr7K8h&[52Qq)-M+/LY]:"AX0Gh9Q.e<QpbbZFNm0.dGnsWAX+QpH5g'NA2=SgQYj,>E
%34?r@QqQ#"kA;d'TNi,uC2WiMV`G!(\coMo/MTD+%!)uF6HXBu?H7g:ceB9QL)/V/(&[Z_XLe4<eHoW2HYQQd7OI0CUcoam5B-P.
%4q3MoAH4,!;B`5Pn!B7%m-"Rj,c-1eW]XK)@^A93S&uL+"IT9\]lM):&J7s,?d<,]#_,Ybgmuf'W26oDXDil[9:Zu$P`lA=S)BgM
%]W6;Y#T2R#Zjh#[Bb>(mk%BZ>JWgOGDI/>gO[3scJTCD2Ku:&k\V<u\SM^mk;W@bY\u41$3?'Ejq`0)u@09sc=>^uljHWSaIn5GS
%Ouc?E)$P#99GKT*/J-ORS<=$B#,GYCH:rg)H)qD>MR[tR@!4>]]1!<1DF+IbF1@M1M8T]UV$3gC<oUJt-/Q@5ib<[MYF3;a,9:;;
%+c3\9eM.[M*T?/R>l=Ee]OE[P]>SEa7<)H;RZf*b2EO1XYBe@p;`LZ(EC1,?`?%_=Zcs-K&K=mTDtfG.:;rXR$q\jlK[UKc#'$Bk
%"kaU<`cP;@`_[>tl*>\OZRH4`4-r%s[e1lKT7Jq_c32CJ%s3SIK'ZqJmb<0;\%8ej4[F+7]3\oeR$!(E<HX*sd)1fo00aP^3<KD<
%abK4/4/n^]H?,,>WEH,-]6[0%S<X[YG$1(t&Qt-PN5=KON'82A!,-)=GI3u"'r:K#3LW7N61i6V;@&SolW!$+CGl>ojj/kZ",V>G
%[iIr:W$+@l=':o%k[<.&BR0TQXH:W:.L_Vf[I'uOZW<qYUUl+VS2EYl\t&hl\CD7SNDJ_cAL?`%JpY,1ihul,BPuoO%WuaG@-fPG
%Kn0a?FLohV<6KI+XOY^n=abJ)N?nH4"$"OcK8%889uCG;/V"O$rCYBC:70.hVjo>K\ci1M4Y".bc80;0k1+7bRBe@cF>e:t95k`\
%,K"pN=8sm?FTu?fEJlL7H"b@,`DAkG]64^2<t;45S,#uLj]<h9`&o#BRCs4)P_?,1NmqI]^2QoJH*Y;+6R-u79#F4d;-_P4"P5Y^
%G/=[r?jA]%mAanG+1P9@D@-9*7gH,\'/Y"K+=gIVm^<ZWSskP$IG#+T2S?&l=auRm;_a.Ke]k8EZ^TKTI5ph,Q7nBk:hJ(pN0uL=
%hfE;F)u'urY4X=p..&PihP2L>Pii?Al'6^,Ut1-hdc*,sDn<Sb&6p8,>U0."]msa)Zr5JpKmH@W1U(5!p"<bF?JZoH;$h)A=E:Cj
%i[Z`O/^G)n1^td:.VuTPONHf(XO6gJ7?PiZ,KGsFo<;a8MDt*3A)oH444]@rUB3?Y>OQg_gu(qQW6u"7X;#@SQ-ciP1Bgk/QqHXe
%X!!fr)8+)5GAB)$FZE+((UC\:01Qg=Dl<e'qFkOZC+g)kc="pc4NKil0[BcnFRKA0qIj3-*LIhVZ]Vj:6aaZL-TD?NPVN*iYSRK5
%_o2cj%C5AT$eCpaR%Pb9Ehlj\P-IdOp:(]dJn`EG,0\fRYM7(SSefp>Y4p#sFVlrk$0G,]HLKEIAk'kt1C2R3/HD>_cer3:H?#,`
%:Yh,d,J6HWA]u85.b+W@GjEV@NRgWEWC<=XM<)u0g1HJ_(%\n#0KbfQB1F6WA?9`3d<PJ(*MYmL!_+op,+?)=,*,DH/tKG4XVt1j
%k-+=<Xnf8*jPp[Hc>e;B_4:88D_!UlmhbsCOhKdmO$q\)+,Xn')KV=)kcd*B6MCliVG`'V6p/JJ7Ne8'*O>)Z<CEi`G[P--oe]!9
%c29MPgfc?och"M/i\#MBT'Cl.ME0HT8ll?XcD,*%2CdBP5GR_bRB-Pl/jU)7SVU'Di>hY0lf[-T-S29"9Sr9%21#^%prH&1IRd]6
%0l=$1J`!33T%,)4"!H&>X@>M(E?MR/ei7rH%aCuCS(6JCcA_nsl(DS!^B3\JR%Z0hU8/-"-9>E$f.2-hNPJ0VLQZ7?Ok%Q[r(O#R
%.(UYCB`M['CSZ8.lq%uRrL?(+QD>-uYUSTj'puqnmlA[Ugl4[:/3+XCY=]K?m1qP.ee$,O"hPm>E#.%Zq?WJM^nugth$e+k_Q#>7
%gW0PfULTMCD.==ilC%;,DHh!H0M=qa_?Bqj]i,KmaPB<$rH^&<A(Ka>P03!n_ZbSGaVeKflb/=I<QL1=r7I=Q2lkOr@`orcmH)0[
%522BVAon4_Y'0?B)RnS%!Qqf(Ta_t=?k&-JD.jr*#:e=>NX$0f%8S+JUgBbPkZ)-&EJKnX<h!8j?pVDi)*ojA*F*KXhJ0U[<T'Us
%Er%NmL+28)B.(R5mIr:DeSEEK3CHmNQo"U"4j:A,L.]IV]Ubq-=Vnlhp6FUpC!'q$%GD'qIPQ:(ZnrX[q?KsqCuA@!`[/9K(9#E%
%>2e$'8@^Gq4#@H@ef"\0`NVDU\fQ;JZ=s#W/7LiC&/cbVC$h;N3H3V_*81f7&508o(,c&TU)%YTY_j[u@1WijKmGXPCZaoYi0#_;
%\Zd3iWBnMMnOa;5=d/o714]%[hhi6>.@d<$(eX9:E#2:,$OnT;J-HpPK$eq5-2%9ET%HPsqJ=q&Zo*jWU_MXA>-/NmF#d0kOhGYC
%M]c,2lUPcuJk6H4OWdl`npi_H\=AOBkSq3OUu74r9QiE2UC$0:0e1CL"oASVC#MnI'Qe@!=JsbRS@\[+!&[mh:H(2'*!?Z(>(9Il
%&<L*=iHXk@Qn3hdGn%f\F^f:jm+XDn:*=f:I&a2tMCcOsU\.="^O7r8:L5k[aQ<p/>O>288qtDA;T<euA;ilEAmZEGJJDW(/'E*m
%TUk!NrLh$g4?\1*9racVJ;&0<f'+Nj`1<WO@hgO<&df@qrLQ;8]`O<iH&Wm]hM(Fj.f<1C\C^MPXcXWh5hhEj7*/=_nBuD#L[Ro3
%dqV_Y&l*'WhP-/'f[do(*G#$aIVMWScpe!/BMtH3[j1N'!s1Eio<_DQdb]e?Q_PE)hpl[Q$RpF4'l6%CS-A9_Go1Ki;CYGj$8G@-
%J`n]1Bj/&.;E>,i3K;UGHdA@U(((c\_4Xk[/(A9:3?pR;()CS@dt9u%/I*02Td,mIPNm,N-8eoM!)0!.ZnJQ,dYbIDOot"UkIUcE
%FURqc""[pVaT5kHq#LsgRal&Gm0GJmnA;7g\A@Q/!\Ke!G8)+G0%^2)35^8hO=d:qO;YVC*>X/pXtqG>"m_^PTQ_W&\7p#H:4d;P
%1+P^41O,f$6RD0[^/aaL%,Z:Al:k*jPI\U`>0]FTY^%h+qSo.$MafcN3Flnb8Lo''V`6@he1FTC6r*]L!?IrG!NN=<c7P=ZO/DR&
%JM$1m&MBFSLcu,j=I/\.:(#\.Y]7$u27?#!Of][q:^u,maMSc6i:^+bAN)72&mX'NH(So=73r'@s!;tbJ0ieb[*sar75iU4nlXQq
%5!c"@EA<V(pFS0CQ;?6!2Ct#26>inM:pEhd5]cbJ'Z`r&m*c9S#nQF%@l;9KC*h!64-r94\GFUK5!,d`#+:$m)d=Si"JA@O)253Q
%]uTof3f/m5D]tS*=g,HQSVB<"P7!dFndqE.Q^3Fq=IX"8\n!H:+>Lb@!NAY'a?q*"6MPJjSC@I2F,k>2.i:1n_\ffE\&R0U1BC>W
%hNl;aC;[/Ye8`$lcP/;aSe;_B8^tsJd&e&uLpqNu2MuM;;BX[c]]?o!4uoeUMr5#8d`!5;%AQDZ+QDb-\+2#RD^%PYO]Fj#e-D;0
%LU"?g,3Sd?aL%8G-Wc5oR\Xt=F>U:Uo:eq&VX0%t9e3G(L,%uEd)Z`Yi(.0,8"1Gnh[sKC_He@/qJcnbmij*r-'Afi1*"l!L[7nF
%7r\6?=_A?^\Y`q!iCtUIe':ES$#GGq0"04@bh1PY-M@1rjP^4WIA%Dr7S^=5"n&QqLMSR&O:U\b3GDT[\"?\J7]sk%5:KXgli];s
%0H2eZMKu`QM'&Cf;.(@[_*EPI&Njij'A@kseV$5<Sp#0GnmMY\.0/cLI69VG4k):uE@:!\_.kioS)''IoYSl\ajJ/0YCIn%W?rfG
%aZI$g#hg_nfdR[<E,3B/qL2u+]`,aK5/0R%WXUdi%g>RMYEADNT(Oi-WgI[Oq"c^b<QKZOc#H';a&XTteTO8Mf3@'.$%01h5s@lF
%r#VNei=P+uRO<o6'J!pLW4)p1FpGM)<^SfQbO.Js7_$-`,,ACgP`d*N-R"U2]I]r"rZ[G)_KerJW2F4^]KV5<<HU>hgke$.;-+FP
%qN-]d`,:'qdO2(dLn9$u--NBgW?+UF?G\.^7<]=&ljSmn&#bjV.*d?XjFUm2D!.!<YZ:/7KjkD3![BI`N[2KlS[R"GfXn,crRM:4
%*gRP%iiNYhpR2/V<R*g&c,(lI(o:P+CeSNm=r&QcL<hiVJ\ZkX!T7%K%bJi;(O)L9m*uWtkfZVYXQ:#\l/l$gK4G'VN^n0elqerf
%j)q@R3ZWTG/q-AZ==<cLM?"T9ip=j'C/e*+)aOXFOY,%QdZ!1?>.hEbCu+e[$lJI$#;oWLA4=AJQn6k5;4LMWOf2JN2Vb+Jg=Y5n
%5%(:kW&1`mEi'V\p`7*^OV1Xr7Y!GZ;340/<]R_?Z:IKq<#&LHUhidT`Yi+1"U$)ZO/(NeVHG^5)8A!L[Ki#mCn+e+pMqNt>P?'_
%<'n.7Q)Xn=Y7`4d7O5/GN^hjWgfH)M$<Q95g//H/pguR('_4_k0YgoC6*2I(FGMMm%jl3i0+Q$72t.hm-XK;,K`q0?fWpoDE(-).
%.9SRc4[FH&1@WAT8W&DFA3d@od8r^q//mOKgjF,[<i7/C9\Ilt]kBN,eQA>^,e@VEP2Z/aqYZ%_N`0RGQ>h#cfgXl'L*j(Y>8%0s
%)p8?mmprYb-P+\HT3GTi;h#E*g<jo872gsqh+'.+9eZY0'?2Ht.SFu8r/J/5kVID7:3?a(o(#qe:C\u(LJN+D='>:g>MFD"3\ZhW
%8"W(UMf]dj\K"#dRl_20[%%.B]u;9u&E.2D`kdZP!WbO\YVdiRKm4.`1pT)0'Tl*G(o\Df=;k>C*Y5&o7J7X3`0bIsMr$L*=C=Z&
%E5T;H%*p>+h4klu:@+-"b(rB#0dh`r;^4JieYkdr*Uusb;[7YG'>Bb;BJ*6[lnC%W6Z!SU8Z/=Uf+8N/@`T3X>.NlkA4Dq^oU5'+
%F/Zt(Dq(uA?<5Vd[1W;;B_=P]:m]Ip$;1%lkDGg#`khM!l4UsW!m<nnX-YpL6Yp'FC:l[S(Y7+Em8`.Pgj8B4p33[YmWS;4eRsf[
%kON53Qdm=:gRT#g88[sEa>nl3!HG8CBKX8XjYB0;O/DR&$'Qg8H+?5_I3uTrkI^nWSigm\GAHYJ:KgQUj)CXS7YR/D8=&Kri:WPp
%TK(f+-O9B+I`uJsLB'o46b9C7Ln&H7iUL`GS/BD\[eS\&?AM;r9lX6LX7>,K%-ZR(ra09m40rXD;<(iaK)Qn[KAXQCh2HeP.%2s+
%Hg2biMpORI=\8XD=a%;k6H/G%:7iPP[mo?Pr&=ql'u:;96.W[D<T4;8g:YsN\nl\D>rQW,`+J88LqSZ(h&Y=^7NC;D*Pf@i(+d(B
%_U*gfC/lVh>]fN-]7mp@M&(cmo.2A$KC%^SMi;D-D$+qndI9spFYf[9q;],0Q1q(P:"K]hDg;%AH9/HO5,S`-M5=u-C5'aqMt]%(
%ga2jDJ,'m;R/_r6roILGQ[eUF?iK$!=<%,7ni-Tm^\L+X8=taOm2&qCFi)nu85E=%j.)7r_J79FM;I64$5F'1E`%8pHrS[2-c?#b
%g./]PiiMC?S`sqa;*hk_>](j_S$L!$+8t_NF4%O5NsC1/36fgG+"r/j&.J(VS[iF)DR%o`20R9;3I1+LJ7e]BiG`cY%tg,pIF<a<
%5BZ<aMfPmcNg68r4"5G^P+(renhOdgh`A/P1ai)InPiPlD^17iYX'\ja2$2*L.gDgq:QjB]8\,?DbAUXUp1)aP=,_Bp=d;VZZ0)E
%H5=NHGZtmVK<0-.b[cOkP@r$$Q^18QPP.qDO6m\1l[ti,JR<GnN1=J4hW\,a7!_)>.dot<ok';'>K7M,_?N!k>tM%Y.m2:-<?mrn
%O.Z=Pmn*XML\GPe*()GP-a+VdUH[H@ggoeE^d)?7l=Qkl%@^n8q>-Z1MW9aDIfJUrhPt^9m37cVZ(!;;53TpIGJpM&G*PR(U$a_j
%9b-`h*\om;^4lUh+!3`EWF'DM&eRk4AH[*]AO+tuCmW%+VW4B$UM^\'+U5eHD=C;oA^;KeZDBH$4Sl$es",%UY-RMn=NIK)U>'EW
%Q#qIQ<k`eLs1:lD]CE%KgN[8PHEUN()4)1UL,j?d-:U,h0^][,01q!>]9V0SM*tdmm#7Jt#u(9BN4Hk&US+p9<186I/1'l\?uT_6
%Ao`&?5"D:/DD7,#:@"Sh)>7gg#JC*%ce9;`\YBl:_($:@B7=l%(&=FA)\I`A$/q]jEnrdrS!1JE;WW+tH7Md9_c$#[>1'p,ii:Dm
%"AQ#FLnCY9Tn@bCO`.]u+k((4/Rq2Riq@H\d%j]9TdJ6sb]S81UPQM!pHpfQSJoU(hG.MIK+EJ"<.C%1b!p]\GoR/HHA06PNiNiN
%J5i4H2t:'W#+)o$C2BM\arcrt^j4@eLK5ri@q\^QgCD(HffW/?S7?")Lp@R9)<U.f[aigpQKK>RC"@fg0m_K])^XE%93&RMlo\7o
%Fk?sf*,I9H`k23KbFcK0^QTrG-%a/k'C]Hk:>cRN(;(E7L2OQ/P72o9U5EmLW)5OAht7]!#,7b:T"70?Mtps[2ua63-"KY+;Oo#,
%jMWjQMRIqNk('n[ar'][W*fm"o[72A"TAE_lKW!DYu)nLZ'l7NkO%*D%j$/p;chne%X)(Z\,ZAA^D4u;iV4$A@""']k8WcpPR.\U
%Ilqlf!?r;;1A<9>QX+E->3jgq5>i&p;qP8a6!#;*e3(NtJJVIgSQ<POA<[(UKHGdpFmB$Ur9aZ:DPS"'`5E3]-N4@9*Im^Br3?q]
%YSRm]gA^rG%$m])gT,X"_=liqK)[boKdoG#0EuCMi`.9/h+q;]`61rCfUOroR0F^t@_Z6dJ]JN+I8Du-b(%BaBN^?+\Z_\t($7LN
%[?$41eh"mnELj4n(=/P>2!GV'W&(6[((p:%`NPO;mqs?2!FYdLJbHoO2oH'Rl&5kImA&,49OCn;dOQAheG\gBHLge#BENXd4W@`!
%G<5Al$1#s;`?jK3@in_*-D=59QT3T3%3S:`4U@%-M2c=7C<dB)aMb:#Ea]2T]Gq,#AW=;6W>+GhRMC3]h]Bdi`C=T7d<:[S3)+3,
%n&&bPbK;)5'OFdUh#a5!Gp%Fo--ZiAKW5Nd/cuqd-XR:CmPj7+bI^@n0hQ4e92j->>+8s2A5!c>4_\9+q#e,_Bf,]p:7nW7I>'>?
%N6t:VUkl"Ke,(L+AfETSNg".SZ3R1e.3;H8<9rl*6=rnN<Ad-`HB7CiK8t$l>',FJ/s$Nf[jK"+H*h0*c8D)0CZ_PZZ=`pKP3mHd
%VDJ3hao%8t\a&ki)$Q?BbLjL%#P]*(/Zb_!j0iJD]NoOD^>kQFA.h[C?1&8kZ3"+8_.?diqF0GU&'ip-@\e_3U5u$H.I-`U%H?*"
%IAUN4q=;\>4BbIMnB2Q@!tQf[FA$%M+*Nbh=6o7=:'6]7CR%5=,ZBde5DDu$B8%Y;PT9uoRC(ia(mn^/\N-2NQLVkQAJ^:,:+369
%Kl=*5.jIF+W:=ScCJER/j-ho3/A8!KR!TEJN4k0u-oZa&28a]:(c@bo%*S(5pL!pLj&UrsI)EZk-rE?QSA!-?nR_$`Mdc'45)D+c
%>,hodLYFm/IA<CVk()]qPIdN(7*]i6bZ1\jg>]<AL$:e/h-f74c'Ajt770<\(<.9I18#W99sLWmXX*sp`g>=_W`?Y*L$IIFO$<Na
%F%^Sf'K8YA0t5M?lc-7hSDL6T`&rW)@rBCG`[$_@n@9iK3dUPdWsn,+&pkK>>HLJYbWTG:]/OijO0^k[S*u)k_0`c_3697dK'[?H
%DWYQOe3`l#6Ytsq^k#LFIG#C%&pa-2IfuO1"EqUB3)h-:X'E#hNAOt#.@rX+Id]]%a_!e>B_)f8,K4FV",T6&<^nn"ZYVQ[$>$Au
%rY>=GTO>`MSFL?B_\E!Ei,s6X?k]$-+YelUh5,@g9STs/nHmsE#eqd"Y(4rFIlXrcZ\g!.EMfWhZ$gV`Fpm:O;igH_"e`/M.ngs=
%aK5-nd%*_e$c!$b8<hfIqCU>&]Y;T%G:-@B+/Cu]]";IL[H;Z5jC-/Q-q9D)UkA6'0_7b['BZ\ighRGj&tokGBU[S9Xm/ieW3Zb$
%2UlH<P?0e]._F?5Q_F&C7'QSdd_fBk1`+dS2NnkMq-nQECEIDD459@"*<4`p(NsKfOi8VK6!Pds`?n6ne4RQiaO[rmiGbF,2=*\`
%\n>IngLW&<_HNMrCmGti9["OKQ"Nu)hd"qB!OKWI4g>[D@acZkS[>`H\=:)\)nN1f4#Z['_n4Z-LIp7INF(sOB0N@F%eF#oo!>E^
%4(8@_$\:qnk"1#G>5pt+QRGZEd_?aO1PYES&T^GrF$QW$BN"ja-7H[KR:7pT(<h=CkIGSB:JLXIRqjOO7AVlWZteA\1Lu\iF^'if
%isZa>L$[ecDH2&%a@]=pO95bnXe2KeE8`uC=u`()G7->O/DPKSE&.82/DN`Ig_<]%=`["%W_lI@==#I)W0W55cl\TPYG"IF-"#X9
%W?6)Nksj9EFV!5#:rg*q6o<fgD4toYW0PNJO2@urPiAaF'4Ec0TbLj@0kDFYlK9]qi4gcm$=VffeG\;FP1$PB0VG`LW[/t0>Z?fK
%4,5@E-i9[!?GnLE633t)2:>IBbP2J!&D?]H%ujgq1lX_$U6I<5(+auV\+r'`bm5:)e>+dFI!t9h$Y&=ci/i1\d=I3,99#<sm\T[8
%rENih5`48aP+YFj-Pd_mpSn13;CiC>PIMGk,o2p'^A?1PEl(=5/jempd+N8F\*d%&@!HKsE=uJ,?P(*uhS(]nE3JCZk,:.I>p^V(
%2*AIB+DV=`RDn4Y#q*9L[l]STTmK`4b=>q=go9\J:TWO:NoF!l9=0O$A3m=,%a=W\Zq;"$g)Z-kh(7]U>)6iS8!otb)Cfi+D1n;`
%X"0Rg98WlmeYe_8-L?%;;H'&gMchs)<@UbDR\4bpSEpqkN'54?!sWCQm6h]H(42M%nG^W2J9L.[DsieW'X0&ir9%G7BF`?W>c?>G
%+N)E2J>5"Qd5Euio<;[RU$(>&;n<+1k9<_R!!Uo!X:*uR71@`3aBB5QBfUGsdqZQfKV[:%IWd7b'pXg21Q4HTOQ5_2<R[/kdA9T&
%%+OQc&S%RUej:+pL^e$eR_g=AMHnJAfO=.Q,OQ.4&@<b*m`'R]WhcEH0UXe2W;bmAc73G:#RV,A0(im=s5e=&D_+^:XWJep<2103
%UVSPt!hXJq-:f9hVM>.q-=3EdB-E*gn:[cQ"OkF,,t]BLS4)M*(MoAt,b%=6%so99\k@7>ogCYFL1GJ;._Hj'9Q."MohP2R:p^6"
%c26q73okj,[ec_chm(/sK6U)W/LnL8F?fWscS!1<G'b>2pKcD1fAHOk;<1o6M]Pl/2(XD<!jiIp@,Wi>a&2V/ohlq/e:D9t%Tss-
%l/Zi/+Q/O-[[)+fQ4`=&1<3p"Rdt\BDT$!BSHRdUq!c3h`TfEd([,<]D_fk?dD7fu0YmZ:KV_-'#Z4_K;.F5^#e/E%:/Z83iD=Ni
%Ss>n&0pH?8b?ln-B7bTf/p$B[71A6cd"P%:*n*(u0chE1jra,PJP9gqIU]<hcQ&'Hbpu'8CHJ"BipNc9Bojl6anp#dj!h;fX@8+M
%YTL3/>Uk91+j)/Lqb]`28f`T+`[\rXXiW95+ff+`VR>P\DboISVCZ1#ac&T`>1XT5OEh*%T]!TSk1WiRL?&9kj.C\</64Mq4#RAG
%(5Zug*IRa(kj0B(]Kau8Nm_:GpaugeD/%(E-n`2-=3,S@r[2VgCA]PZn=GgibXd!F+*BG`Deqf+\d4L![Xm@:>>A]qaW/UYXtBG&
%/-/S':AO!@Y_6s!^T2gG;8o&J%rr_8;'Cg:i&dhq]^=NN:P3.I3oV!"m&`U@W+pP[JR">&dc9ODkD)<=Aj4te0>fMDm)V(WhHGR,
%aE5*f`Vo?d5t6MZ$m"?uD+%1;Wc/R)fJsDb4"V\o<Shr?EmI>A5HIrLk+dGKm)t%3qTVsJd]KcBI<-np]%:)Jm$!&#<OOYRY"lN'
%[0H6aA5&s0Nn(Tc=k/[VHko\BZG%cf8R$j/bi02RaP-P'IQ#/GcCX[Z#)hB8Y+(\g2`h^%k)9e<eTn0W3TB.s^@ZRPi,701cuGpP
%!%M\6,ko&JQ:_V(WI'O:ll6ilm;a6t1e%[VW'uN*?gMBsLZu-d%b%>MJWPkeCLShTGlK0:`6#Ki\2CZ0q6Js).hDt[%hA^fX!9[%
%NG8ccpP\_"Xmo]#EUsU0bb'BKV!E",[hF^a?X&gX-jh^JQTdA)5Phh[XP,G]GZmS2#m+Vd4,5b)Ap(S-A5J&SUgRXK:0p4O[VL"X
%&X>SO\U*qagc4&UE1)m=ZRqZ"^a9:X=_prlN'=.c:C,sr_`NfTD/#:4TEC^d\RJJb,q,t'n[ic,?`O%AP;u;P8CWig`,caI)BJS!
%[#8AV)ISQkhn3o>s22T"AX9WO,4/BoZR\9_+jpD(]t*5<pYdmn<ANpIUONRb!UD=dYsb'k9bf)D-.HoSal[LcE/s'O:)Db8<"s=1
%ii*:UTrQCMd=A[=ZN/HB95/p^h7Gd7Mmmo?YskJo_[)^1NML_s^*tW:1+YkT5$cA'=24`.^sO>H,pn0Y=.c:lMsA#O1&CaVFI10+
%/^<X"<S\J_[>Rfs8oI,\P/]%-L!p&Fh&*2HEY+'C,o&l(ON_Kup'0II9I3W7Zf?*S=ZDn#hkA)$kLn0G?]'3Zi1X@VNT8hDSI88P
%_(H-H5L.M)OFaNl9]'9L]'Qc8co4L]*A,Q8nR`HcUrugHG-;Md\?NkeogCKKX%/-]]<MZ\3c*'S#mJH1U9u+MA)UPLMV`4%=Km]!
%H:[9VEB0$Mc\nf_X;f5Uau-(<]hC<r>0m\sffuQc._m>u6dGB6am9Lh9:%g2DRW$nibrCBmEs7*-FrIIQkPj@P\F/1Y+:AX]3u<<
%N><M7]+o'4_Yg<cJ:_\&m1p`6f,QNO71I&C:7e\grS4a75LpR&j4H0hc0D?qm?$;ND&.69Xr25m8p#k;fJj:&H]Md+c'KN)2+u0b
%W1kB5#)N!X5[O4k9ef%?*p_t1eB`9GCcO'B*9Z2'EaEWlBj8n<U3XeQ$FH;fn1Gr%l9LoR(OqZoLp*,J5Etrm'ANq()aL.DgI8/i
%G$2()%@+A92>22V\taC>;<8tu,Y*b+o+kD$Lf)Vl9RK`HeU>TI4W\DbmBaP_AGG&2kp=1.g.BPJ37cQ&-JPc+36*$Z4$T8jFKTH9
%c:E#6?7_=?RM&`fZ2g>3N/4g3a45QQT/O;J?!ZJ+Qp$]3#(Y"OV@D+l;u<@HaGV@J"(0;Yd;c^GOZYA9\tt);g:FQUWf:Dqj>=k:
%Gb3C01&>0,T=<!#SX8U<iHW"_WWJcSgHAr.et_P.L.U05D9X+l5L8GI[J/#G>p\?W$q"J`s!Ht`'X*pRpr^2;W%+7=ieLIeeh&5"
%C:_.ULSq^Y4!Mug7g/mb-0V,&$ks9"9\S4".LjOYlt-Bg3JGZo;)]I[MPM(XG(U"?]VCD%d0dLUg;7`Lj_fi2BuBK(p2I-h6O`/F
%U[OK`&Vu5*mB/!BiE'&TQZ@'_"PQ\LLGa3b2X)6VUmfE@&H#!RdY.h1`CO7c`WdW&ai\]>"[o,ETo4G.AG+Mu1kt2]`%R$#J^!Vl
%*qm_OS<BQK'btV'=ct02aDGpLEu]Po2u9,/AQ*$fRoQJCQJEXOQ`W@r)>Y5%aKRL@+^J29%%'WOI*o`.A3^.GC=Qn9LiR%#HM4W(
%m@+,bN;5I<%dBEf/H3_")1kEPCc=>s(Ae/;E=5NMhe;4]^iS@p#V(\@W3I&;M]8`Cc!Fp-(c$Vp9nl`9k,RoeQIBkHc7rYa]HB9F
%q-!C("YkBin%@"$$XXj=;q@L5aTAh@/7b0[AIktf_Nr0d9O$Ue&C7o7#O3Y8CJ-Aq:%0!De%f#thYiH3lK,]70llZ_^Y^]:Fd0#[
%G"V-pr8]N@AMNPL(=>+U]*DKq`60'hkj7,`2a,]-adpGrOp)J`jU?)A#hk)f1oL?7/)ut!a^G8+O2BW2>gIrI>Dl.Pi&.mN7^/W=
%0.b3YWYgg>`>S9K59J>_$'odE>R$89EM7ZB!!G-jaT3r=0FOL)Nr-Ye(S.:\0IqM&4="%HAHNj,6NW7(9%/e>N@iZhcp`]=)d!H)
%Z!Zq5NZLH\8b!@tELM?/FS!t*msf5Vp^9_YkQTSN+/KR=b*^#cCsd;(LXJ#Dg+p!bM;l8,\0&Gu^C\D)Q%,'gpGZ46oXfM^l,_=q
%IP6.u33).J5aR`*pHpJi134XhJEjR%JYQeG#;,DaRK)J"=s\N'X?PuWJX*N\OTn\X!$b8:Z?R>k3aTYMN%ENZ\koBuJT*U[:!l2G
%eFc<8iH*.-p,fOm04J*(/QK8Qln$(H4M*4@l7ASt5"1=9ioEK=/`TE*Z;%G2OBG9?K4:V!`C?7@BN>l>WeB-R0r+qe%@Q2Xk^R4^
%_8*sio)aL.XGk_8Vsgr+W-LTH$M(&dJWdZSA-nmgDS`F;=jp=,Ma'C3hC!(iA"t-hp(n"&7!95lS#i#ji?([s5RJR:s23dpVPgjS
%Trd#X7CC<iE?nV/E(F,Dm%Z=KI@%#0:N7$_;.3TP),aMVVWS`9I+o\dWUFO,")nV=p0c%7]r^*YR1tN8*EHXKV/2%a?c+)C%LojG
%04&u^ioa&^Mjees/MIG<I?Ji?)@O1Dasg'8L+XtZ`/8R-a$+3fSj)@WS73n/EbqcI?&tgGK'.SmrbW82gRZZ5TS31/&s8N_iZBG`
%\q6u$>@L];=(ccRod^mprd<8!hf2E2#onfF"ib)n)W+jg6V6m]lO&ssE9HW52UptP>b<'*qdYO2h>Dl1,,(4jFHDdQ]@ihcp#Ss!
%>O8tlN^6nYFN[R_K=a4@X0^"*>m$'F*o;NPrE[O60-_M66=c6fG"'VH.9"JpAF^QpHKD9)/f_jSL9h1-cu0SC_A`)4`)%n)Ddl#>
%Z^j\Sjgj)U]TQG/S?o%#C]Y#<@Y)FhU2r]0&gZeNl]"2\-&96DanY:*kH#le<Ma;b$e]>:A3D1OE#='eSQ(L5lu[a^8%Eue2`S.n
%RKmiXhL*Q,W*+q`^#LLW)Ql2ke)r@RXmMLi7nAV\eO3`DF/<hF2NE[S7N\9dX\XSK6&U;Bi:*r;0JSIJc*jmpH8:R#D1NqSNmS9M
%m<3P/8JZ*mkZ"k'QeBar1]kS#Jqke<.`["^Zm0@8'mggP1Vb-i?88]s$Ba<#X<$3O32Lu'!gK4\!_1I>eLhOu?#qcI85u]lP))@`
%pS,bl'%!.]qY$hB%1kPk:&D52/IrO:AGUN?R9IhL1g>kVOEW5J>[NIb4[bN06f0o#!":E?;u"_qS"pn`:dVN7BnBec\nKF@'"`dR
%@IJFK?#ufI*dm\I_p.DD$F?nMZL2Z`QP40i"DqWS'/Y<_=q;`QU=^@:*+o\QNa-'M:0e/_5gJW]A7$_C\_c2HInp34<KjOuE&aiG
%rM1;OWkUpubUH)<?.%&Z#K#e,-,r:9+`9C^=c(/-918N;S]uNhoH57JkJa?@9r1tYW>;duE7)=DR:(4S>H/l0OAtao'CQgu<gEMc
%!)!hSK$9GMLbQ*X\C@di^SZXBS*8DUiKNr*gSa-I)TJKsMVnqt/ifUnZWuXB:/aT0Y)-0%%:j:K<Bd!`^V3pm:nSPu'DQ&WF@Rus
%22<sj&nE'_d&Zs%j5p6@Ob^=G#jDl`kL!&Iqm]IH<_hGOA!1L8PBr/K[)QD"H)8PVq,?$5j[[]Gb33]LJ!*-V7d=m-FEm;tNXI&)
%7m9&(YU?X<pN#fVh`e$,d;in!pa]_j/!U[tR6<1lI_8IJ`I6NDR)moO^gP7-AUlMbN@gRG=i!]CJfCdVZ@7PAT,)P;hG,'O5[31k
%k'l`_`p#D;;9mh(;1+j,2"G682:iKe-f(8,,3S_LI6YE9&N2=BP91kWiMk:jIug==^;SbeEFP6dmTA/=6c4MZ<ZSeFV2%S5JVY:-
%Yo!Z=LgS$,/!7<o['DV6G:Bn>")`rQj#+aVEEeDqa(rLd-kX.s4_@'%qiB*XHY-mU$)3/l*o83Y$m_Hd38.#lDc`3)\"?j[UWI,X
%MZZq2j#1-4BsI!47-R37q<SsEh/7/"EFg$6k+bNHS[D2X0LPkJ%`X-CO!RJ.m5WA^__I<-:hfgcNo<sV.=%`:G/Ol:CT;q*d4LB=
%RdOV2?@-oY18@V='fsTR@S)h'$OaXn>Nor-*^`B+dA"iG_Rr/n=,MG.en*3=D9'(f<j%<R/W3>(`7Ad:oAaXM:ga>nQIk@b-S+NM
%[&H&kA_\s=V!58+aYGgWB\6'!0n$E?X0sBOT*`r2he;N04]pk(Y_`R)O/<<,YV,PuDeG;X07Q&4GE6;Z/r%;jT@`t,`s_k,7/_>3
%T>OQ$!J7F&Hs2tlc@C3Yf7as^$&CaGiQi-O!EuPFpm<M#("@;H`_=7is$ds9Hh6'-9`t+4UB19idqV8t]!h`:Y^$O#FQ;X_Rd<M2
%\T(P>q#T7sk:fT16f<q'@hl2pB[(+0=H1r0Q[O,P2RpaS/b1-.>_TM,T6)+,Hi-k'8ElgXHC")(Xi[[H6Hr"0KG6ap>@"Oj\sm@B
%cQNO4k[6@m<@IKhGs$c+mf#O)pb>4p7h9qY3fl_n!/K?oP9;Ns`bJg2iL.$Xa,l_BiW6Q4hPcM>:.'u%2a8=EWil4hhT5W^%YQp_
%`q^k-^%7A?gU>tRh.<104U6<4o]CeO8&##scWtmIrGMVLrn3?^r9ms!J+h4go@o`\5l1"`^\RTls2Wakr9]Ppr9qE"q+kA4rT/P(
%qU;pf)Xe`3?N0dcIJ`^'bO#C]r8[hPZZ#m"c[YdM5QC2UnV?r%YQ+%R^Uj@0msb8B?iB?WfDkHo?iTbb?iU%*rmSoKN,<S3d,4]j
%^]2j9^\lXL01d0(k/a<is-KAVoN2(1Is.=tr0q3I+8tcJ[m0oC\%hirhu1WGs6\/3qu?HAgR%s$(Vb4hXOgg,oDefnTDd(Qi2.tJ
%O])&CDuRd:'(6V$5CWRSY<W!3ht!sVr-O_W61ZIQ%'-Z(oZp6<(;s#B5W/TnDi.BmDDVB3O6^(9-#-_N"E%s_2N=os_dh9O>?N,4
%^r=b;Z^pf&VRbDWs2J5dUaBd?,LXUIEU]8nc[-*"(l5Iq%4IpZ/1ee]fNc'46>0s9a^u[g!C_"g[cf61?^0X0.,o=m!+8uFNt+I?
%\B'hb<PUS:[^R0<XP-\MITE'[+92$&*H8@.oEH"4JCVh`>mWE?CgLGQH3!O](7`$*L'fD(?2U#]e3,G=U13h)Z7:#M4;K./MTG<e
%Wt$Xj_E@Z!naa+Qa4ZP9\?(=S7BB.u#bFoLD\UJ#JEtX8_j*W!V=]sRC-q:O(2fh>OLJQ(<nW6G>+ePg?dH9BY(Alfs6[R:]imTn
%JhLcmq(@ui4^,61$_;YMC\slL1%m(MTr7O(-k-Vm`7>7&mcdk6K2.P\P6Fo_f+^dP`f-q3!JM?]\4!FYQ0^DgTPa7YG#2G7Kclre
%>#kjB2sUfN@ZN#/[+2RL/[5(S>ee@TZNWs@-3s#gj@s^oOnYl.Xj]iT9.n@PC:-tU2]:UT<U'h:A/>il`-R6Xrp(IkC+q\"#b>g7
%7="f:<DZl'&]ImiHUCOeLe>'r36$'1mh\&!+psdi9!39*c/LH5Li09Y%LQHll8^qco_l"^fmu"r#=:FtSDFKdr)r'Cg<<N/q6KJo
%gUt_k+u2$%*:Ta5"$bXeiQS^3BEDTum.!CQ@rDsdX;?elL,/ZFViIU$.E(%Z%D<imJ`BBE*L6J,[8uXdU=dk$)eRAQrh^J>*t!`Z
%R[rd(Fm)27Y5C-dY0sjR$*>?(b#_;1LZOlsTDJ_]l&45DI;bV4EM!&GT4\f5_.PMG3G589VE$>*<oQZ?Pq=g&P]^!"2T4/3Dc)Oo
%f]Gu$<jC49F4fVN.LY3sJ?07rgq@PDA=873Q+\UY8m=_>iXff1:!?[W0---<;F#b%7T=+n/&t9TAV*fQd",0)e-Dt_juna7qm1#%
%&Ibm+cRcI/oDR?rrmJ]*_(c]M,*VFu<mE6]Jao,8PN;j23g\jsH/e.(-=AUtFUO`Wp';auJ*FYii<fRKr))HRHSFDp!'iY44OmID
%h/"a,cS+gpP)$4]j_D)1%WN[$;iIQt:Pq#\j3M/X)GuKb+l9[_9j/*m\7qi`c(u<:`6"=.Z\sh2\[].Wo5]:)`PbPdH%g']cd"mL
%jIoJH6IkBc`E&::J)5e-L!70B`1)*KCPLJ!dK(.npGF\"KTH!/25NL&Prg&5,]$Im*1Vo;Abp$,n`P2-RPERDY75G-LWVPY8jREZ
%iUhE&,CW^1i6,*EUTPm2)4>BRDEZH(UfOUU!cV#u!Ed;#/4GQ#(83PRJ03h'&f^kF?utfXm&Z!+fB_hUpWrhEi3+d:$f.0KBGb?B
%6D-/VMfQHI`c9g=j1WY":nkp=7Q1i$T/tN!ld<%'q^k#`mchR?cW-2(G3j.JG+<SfIcfB4Bef;HrgA%W.`CZMA7?U]ioQABf&a4o
%nUA_)muSWGD!c3j0FbXa(N>r5l%VMPB*4[*%&n7>]^CcH4A_"EQ$<LpV=VL:J+Rduo011g4N0_CYM<n1d["?O;Pk1n2g=L<a7?7o
%_b/e`'!iN<>SAP/:k\E0^K0Ck_^TFH@&8/!;D0cQ!(L)]dC\2hG19K("M2RZLd#e8^:6RN#3r^Z$1L/KeEof-+YK,<EhgHj.^/,W
%T#:bhRA5e4I)f:O6*chIF7M\O*e"WT[Ma"[^_7BJZ)Y4)M$"6QNb?^i]gQiOVUBJ;e'GQ8A`5pL<Q?:KCts'(ZJ4ld9W1.Zeq]0m
%N"<?"TVI>)6o#Y$+K`;uXi+jS$FeZZ=(EOglV$'PWE_SHfB=,ic<I>uq0@N$Y`Oq&cIrBB(bcL0d!`WTd$Q"*i_GXcHYc]Jr_RC'
%Xh(d:md^!I$Z>;B(YZ>sVCbW>amc!@MWMp[S4mo#7gnm5%:GLr@BKJnM&g2-Hm3*mM^plYd<ae'_:e[oQWsT5>Pn']9ZiFs[YCnV
%h_&.Sm-[kQ_N1STUQ55`fm>^%mh[8#.D!J3L?Vu>7BFp_:u!/ofaq:<I]VgjW/85fU!@2jk](K\`E\:5pLB8^EFS;EZT*n<b=#Y7
%Pp?^RVuftdn*pB:;Zu0GpZX463NTObnn:<QDr?*/#'jb;7f1gkff=-rE;57:8W.DC[[)[Q34Uf$9>%:NQh@-Qb!O]!^XC(!9UA]=
%"'OWa3a)tA$0l5_@+]S9WlY:!<7*03LSqd[#^t%Ug1FO3'`GNRflUuupS7_8MYYHAhm#HQdW;gl4^(sJn8'!cY*6q!ehes95D;ST
%)'i$m32NMfS=Xup<kO2E2skRq6+X^R'5SKm](@aHRD=bg+$]YE?i8_t-5NutH,CIqlmZjQ=k0Lq/gHbTI%aRpYq=+n>Sp$EJE3]S
%R#pR"8K-%[TmqLg_WQCDY9,Yt[74+F6%Eml0jJhXgIbo"6KkDVY\I@m+CTr=9"(UAqZM(/hB7q^q+r'Z9e@J/I\#I!\t5'e5IQ)A
%[g2!ZH3NBQ0r&%8]u+E@dX3n:ZrSp)c*ESj)V0q[c8ONP^p$>@n`/Y4Gj\"EB>o@_l>"nZ6$?nM;XZS^Zg5oS1tg@F)T[D>9bI_R
%<d=8XDIN!9!tuL*`T/AlCgdNn1(D1bqH[]0m-iuc/,%GX7bC0Gq"&Q'c?#(_0\B`nLC\..;Zj*P5d82eHjE+R+!2T%Nt:F?a`bl)
%K7q?0SC&2BZ[D1q6+kd)*(tmg`l1@ULj2Jb54K.)rERl\Dcg0eb9*jq_2iYTe#C]RQ-t.Dc66L8n3^lmn'kqcRf=]$"5A3il:-8^
%?o'p(kpgQRlWgETJQBOEVX)gq:Lu;,.H=gA&R)2rD`3kM\tYfTelGU4iY$EsO^b:YVWP"tC/V\.ZnC\WFIT,,%>0'pO3M+7GIFJb
%,r9!\/aG[V/8,n@a;$lVaeTLllVt9ZUseJBS;Ok6jC72l5j:tmMnOJ-$,"3o5A9ceEXL&Bm^eJMB8bKF:8/hlJK,`CRK7ft-,P)A
%m&Ud]F?nFLSc-+0.&tl$9C+PcPUar5j>'VHrs<1j<n)]!a'ZL(h9)E'`fg>*:USflVEn@V9h<mLU[9'W%3=1%U270Sjh+9s.J,l2
%L#"HBoB"BFqd&@R1"C&h#t!Zn?)ZZFUj"oZe%$.ckBB8kmQ7+iO.@u=A1,S\?^^d'=XrV&W6jbtp,lLm*Z!at+$A=&@&**#(lON9
%Us+Z=eQ7Q3ZIBEtTc+)<[;*f.5-q<1Q[tdpOL\;[ADT;"BS[%:f+SZkifr)d5UC59LT:.I&kgKKa<;s'dipcJkg"n(Q7=`5ArrKP
%$Qt:[Hf3>&Gn\l`1GYYn4<:W)d?FW*g>()PbLHsi,l?aD-Z0oU8A@Tq4S9>u*klr<=,m&sp@eBif.TY?Q%"3]qWB?j.*D9Z*OaL%
%LlC'=3ZYC=ZKZX5gVRGg4g!Zjb_Y*#`XG,cqKjk&\#99%Oqhec=)6f0*HM!92h@@BoDqTn]OOF2J*39700IR;hpfS9Bk$a+6G/6V
%p#14?=)c_8fCj`)V._73[+A%=i-TeM)CS5$1#nBMEB[R#kAGlA$LT6hog$Q/A&\!B2KSDP@\p,_Y`@Gd.`.O\NXbD(bqRI,a5u5A
%V=6jQ!p@CP5ANW<<bR9Yp-#b&Qej1;%#9$lflA[r0IWE<=mPHj^at::QX&35j$T(u0-Y(K?QgrZ-XB]7");V9[#$Sb#pX4\6#Z8G
%gOWQC2kre1DN.h?#mEf.KFZlrEtT]@Z4:-m>&biM"oNZ7U,/I5imsB+8]'`>oPNDnVhni=iMk=F(H]Zr23TZTc^W5-@5X1YR2W+T
%>8un4WpUa79ksX4L*><3ish"3ZogCT%*RS(Bmk:qrB<Q>?N/P`df+8[G:b9TLGs@2pF1VgcJE:X_e;go%P/XV])'Qc>'(&n$ZRDd
%V]aM52FFBecomcA&$Hf><3=6dMafW\h"#JA-MnfraB%p1!ip+j_cIN>"9iES*T)pY<IO%o!i&=eUN\K;"6!*p`![qO.p-sBDI<VX
%^&I^P&mg4gk+cWRT)+ZN```3us"m[RVo(S\r]C/EE&dm^d*]o6*rk$-rbJh;Er=kjLQRVsjhJisHI<o+UZ9WZI+Wpalac,n/>t/4
%T31PB9^N>iF:A!_.eUs)BE.&-gMSE4%0`m6"WL@XHcrk]>/I5cJJm1=J,!Q(P7E3]o;I')YB!ELU`agXaZ!T+Wh4[TX,N/>0U/KK
%abW'/nrkF@RldkNb?t:)?i91RIJ_8BIehH2J*QNCB)=@6f&,)`C84u\Y!\$a,5ZliqKUWla.L'CRh(#?GQ6DN^]*KD^A[l2ric@b
%(VfmDJ+j/^rgTPZikKp=?iT9Wp4#4hi9u0g0<a:4f=.HdLE1?GZ*DF^\$9t`aN&e;F-tpq&Gkj$'qOend<UiB<KSAMV*p;e>YI(u
%7Ae/LRL`/kXrc@Llk=+SF*3l_3Id,o?7IIHZ**?!@&?ns/2a/:qU'!7Tcn53!<kCG`fb5uU.(1KrP:^m,KTQMck5k=.Zgl+Qg(7Z
%*K)4:/o*=4["eFM^HV#'*TAUX7,i7d>.+W-.`p7F('j9*l;La?84>-ddrA[^3lS!dr-/gcnpI6D+"cLX-Z8nb@*,%tDSSNjlM&5&
%?E/p'h:,O0g@qT1+Y208H.(GNIFP+$7(ZonrM5maQhBp\?+q`3cd)(T5dYXCX2P^q7]t2BFs'?+ORk.CZ*"d+Ug'CgGsR'>>c5$3
%YN0s^1<;O[<]=<SM`3BFX%uSlh23#]\Asii]STcH=N/OXluub_HLhG!kau4)7$D]VjGfV>1JSAPR**+D!s`ZZK4UJJ,E0R3Qu7<k
%oBgqQ!k:c:m*W1(RA(%rH.^Z&Df0`21Ht0-`O"u#!Q.L:S-JdcRgKo\d@HFLXX/`DBS=cOAX!H2E<4sQnUuj`lLc?U-&RN2gRB`S
%NBr"L."7MO.X#\n_-6$;^!8ah;)DtdMKkk_e)Z0c`<,o'?8f??>&4K]j*Ol5kgt/9o*'p'c't$h\0#4+1p9-"$.fZ2epT5I.u>$f
%ki#`Xq@@tI<G/q)kTVHcg):U?g:/gSCcM*V%JYY/CSH5:6Pt$f:ar\7QDZ!CX1!S&YCHN$0i8L,;/BM\aG3+\-f9=?2uhr#^R:tS
%dm;6Cn?XSDD"IVaG2hsE"95HZriCtUXGQqXM>m:=kkBpXk!.U"IqVRM<(-cT)iA%Y<OJsP#VMF`[lZR3E4,:\#gbI5'Gu(qqdu+*
%lhW'_V6o]%nC'X^p-Dp'`BZt@&RkF)G_g&G=YrP#f#=2a3Fu/Q!2*hJ?>t6+QA`Qm?FJ=5ipb@@qf'%9c@,QZ?Mq7.+)QG\OSSU7
%HoO&q]3Y;pRdRP(Cl(Te8RgXJ'.;J+;bOTLO>g=YqM7W_EN-@9ihE!QPeogX0)!\eb$k9dh<,m14ahgVEdJ^EC?]\/1rC`@>#Za8
%.DSH[cF^*EL2.DMbfBTZB#L[#-f#hDb)+_t0.un*hJjlB$u3>8p@;m1R[Vu\1C1!//9!]7DIJlO*OOcXbBu5WYWRsE]+Ih()<JQ!
%K5(L9)t]fD/+N9;6[M&]#.J>m2q'V1!>Bl!1lWt)ic[6h!(u]lPl?p=h$5!-^9pkO*AUXM">_).m/<$BWo)&WnItD;QQ]jmbku>q
%Sb>G]8:%2Shhsk`h[J5AL42A50so7;3`/F$68d*lH!\N"B@c;43XU19&[_?Wa8?hMp\0W8h2d$(7If;?DoH)hfI#5+@u:&+;\78U
%^A.XffBZYK/*abFI9aYNr@pBo<-F<"8'cYa<]^k.?JfM<B>",m;,>c^gP<S*0_W+sNG$"UX)pkB^/^Wah7#^kM'78oRQrH:J+p)8
%m!!Aj2>cfG9e"ES[rPW;\uo8,`,SrEqQ8qe5JFabc6D$#pW?&pa<[q$VOf\/e[TOSLs@4,AimJnn?nim!*0^Ddh[`Q6VZH/kjg9'
%o2Z3cA]cF6("93mnUR+\:^:rAT=4nXI,YM1oc-0%+;2h7oO*Q^f5(ZH$Sm@>I\d)Rg>q)3RY]2%d@[&jj%0fa^0\arS5XdFHdejH
%TtWXXdq;0m`=TVIoZ_:)@Qp4%@[cMbg_-2T$JRF,-URU+lT@HPobOn8q5NsP^tS4qE6S9$hEh<$mB-'N@esSo%hH;/bHNdL&K^4,
%%#.`JkIkt6_P0JjEL/N`ROXmqi5ggTZ1rbbDu2iC6T_4%m@<JH>;)'2ieP]`eAhH3OW#r[I^sgOGn=kJjCdVmUD"u.@uc]0:M_"D
%&(!&BSJr"$3MIt4$!XZ%"oR?L8q$=I`/fa?mQhj]-<fup&#<(nQ0o?<7>D*5bPNdZn.$*c4MhShXN%,fLM+q[)3%.p%d=)clT9)l
%[]OH(AFuGgj_do!'oQknmLu\n\.5LW>gDmd\dru."(tT+MJT%sDIn@HQ9Y#Tq":2&68*``U.l*<G^2-HcTV'lo`&ths2_4Q\S-G-
%QJ2%4o33M]^->a[=O_lVas^J)r\)D9KG;/Q7JYPmnQP@Fruils+1`=(^FLa?[=<t]<qT+p3k</7b'Mt/mbXp))>>oaB/+8YM?f0P
%8DNXO=[A&%2[s85*A<K9ohS?[duM*0I+A3GFt.^)*\IM;fpura)uEY4X&j_]WdepC?07^SLBes^V;J6OC1K3pWrBCLb#SDTm@EPa
%]AL0(*A@7R2Xf`/couAl(P'fKSc6*^e$&%DgL4F=s"GM[47,6@&D?L$s0/*<o;_e"WP5S4mneCkHr^1tlZ>8HNDemC_kk%HhAcs.
%cPK_oVd.`d`;-G4n\r*,X.)&1l!NgQrUW)u$GZOmAp%;CUAel$g;$D=-uUNH7]TVDc=/,F,eg4,V@,oXk!^sE6_aNm<rXGp59S5$
%gK"2>(-5C/WrGA?j)K#4%naXd^$.beg-/fl^YuaEom/,0YhcECp"p'TkC'9-_<?,"n(UX*Y\C+>lrGQ&h?:Xn<d@nA-^B#rFA_<_
%Ft8<2Br^ak:(.k9Y'9/\Fg3hgRb'baom\O_i>9h@qB(qKUiiU#LM=?s.q)t>]IrIk,hDVagKQDn"0:4VJ$.gCL]:*IgC?g@WrBCL
%elD[`m@EPa]AL0(*A?\B2Xa*5gHNA2s)f=$SbeD2oAS(WX&o878;sGC$\/^.WU.5)?r]'\rU>':mOj#C!R^l>]4&PaOQZ:Si524K
%k]/Tj@sb2!pV<H0<uP.C?>3a7L(I_[L;O.`eMc7.RlE4u=2V6tU34-fN)e/!n=.FpO;Ug+>K%'e.A"XMB'_ICX!,EJX+Aru5KiGP
%@$a#OhP3[@;n*a322K?8H8Vcmm<ZHP%A4<Tr8/Q`7H:5fFTKr>"]Uhh@6jtBqXnTr_)?[/[r8!KTZh\*25%mSGZ&HU*A%q5RCHK2
%oN\bT_)K?IBO"QX]a-gBI^p;'+0L]9]O&OsCt1m%hn4_,?7Gj7dA6c`h$[\\l.:8jEQaAh(P)C%ja.SeT6XeIKgj1W26YU5RBGE7
%DM:YCV3SYsJ^'=Ad(IoEg'cqe/%f_glh7o+>2+noH7QqJ^"`tKip6#9cr"J#f0Z!r&!,"<^0D%^S.(bZc*b>_-OeTcf)g;=kNerU
%.s:@h^76>3<c^Q6<5%qe7eJC/8_r"aJ8;:THaeMEO:p!"/.Z`R4q_5*K1-mJ1%)2s6Y;Q;GCtL6e16Do5Jaklb2kfHUbM5m.e>e_
%[dtsfZ]FEp&E:lUYcU\u^V(+j]Suu>1oYs;f7D=FkA,r_WMf)?7=[AJEYiV!em2tGMb"A^b@P'<LoA\PMjSZ9r@UTjg?sCFh??OY
%`bUS7b/NW$I;X27Yq)W^*!(G\F,^"nTbr4/2+Om,orWA]&MRA.`HRXn5W12hp0^eue?/m/=k89&r]77dQ_iTsZoMp7TWu(lOa\h4
%*!&]V=BCjT!,5[)/k:GnEf+c&"'bO]XuQR@&(_f;gWm?IY`$a"ieP]`eAhH3OkL;[Et\BrguSge6hB9a&\I02&.cB_Df11p7cWgh
%b5a-pB@;.6;U>(L(/7ZH]VZ3U_&]:oUT3^aK;e9/V'F0#b^13bmc0a"35r)i`2/I*oRSlUB^%-t@)%>]kF9XBOQ0Q3oE!B<leS[n
%b[=Iq1+8"U219G$?f-]qD7Q,POl\3>l%=%XJ%/_Aq).&j0Fa<\hc.:[4k&t@4QMtKWn3qJS4<j@f>l3d[CLR9Bt1ejrERM<V<q(t
%iluh'Is?D>jS/*O7)S,W"9ltrpS@saL"3Af&,a=f0`LG5D[f+PjfK)XeTuZ.=spH$"8'Lsj!VTkBAaX[n"`^mY3VE,bI-d(Q_*Dr
%f>l3dI0XigrKS+&.,M3/jiT]8H7'c@DF'S0$JCk[WuYM:(>TeACE@r5^)>\%NU*kdbJ]8t`nO-kA9H)D]+`'s@4B=-8!7ELp[@6W
%X17Qe2U(1tKc9^?cRIEmY.d$pnn/mZhi6;#V?A8;WcZGs>4t^=h!]Cm^f/d-a9M99SX*eR'HkEImO8,ipnL9eVei52&[ecJFSHdI
%.a-WM&%?#(<,biTT1J3XXnOIR>4/5?\)U/41AAuR1HR%Y8"]cs0_:VFbej2pfegmUI(BtL@i7a4;KU]ogB*LC$#ReY/HOk.L@isK
%NFJV^=q0YVeS/X=NJrl3/,oB7C38?W:P;cjYWFcs00%P^kAS6h[(aX8GMcI-d_5\?5LL-g4,Y,PX]eoaM3#2NL+.F1hAq@8EN]\[
%Fc*\DTgP9t][oJ,,O&9$g5aUr'bdI`;nIH##b80g?_)b/Q`Cba,W:"!\U5[9"L#-0?2@_&TEjEB4Ef`SjddmdrHM_]=%+.th/TWU
%TRkh'>ZK2Ae7JP02[\]/eXZ&M&O];6#JQ#[Y4oM`ISO9jmbSH3_8@V/",.E0TF#i"=Tj;&s6WTH%%"p(g[TnfX-JU[+o.>mXhoWt
%$C8ih1Oo=;Fh]qTe:Zk(a;j$7&b8+Ah('H`Nob:]3%Qkfh<pkJ*CfK4%_iBQjCXe1-hpa$^d(7?S+g:fgc<)3:_VD#[7S"E)pd$F
%dj0^M;%7PmSG?G?mA`d=Vf&NODDfB)K(h@[0jEIHk$DjU^@*,b!?`A.qfY$N_u[@c."iB3jmnh)6BXj2r^Sn\-56k0'tk>80im-P
%c9molr@pM8HG_^j;'OBWf6VA^biqC1>8aPNB>,i-(:HSFI/Cu.3iTa#&'?u:3b5OI/\c`.Pt=6@pL!oTdijp8nfDVW'cn\k]2^&@
%4=Kmj*:pM@TANEAV"#>Bqi,3T`nkkRYqrREKLI6RGk].U-C&fD?LWi=M[m#k#.`W)%%<88gEG0%ro%r)2-iu+GnJB5b+0#nA45@B
%[o:N>WhZh;%f@L<l!f%U8(+'C\<g?ZM2Mks7[#auFNEES/fN3r]q*<,G#]^(fi,S.J2RG-HaOJnria3ZU"a2]hYcW/f_R8VS5<b&
%ZodFR)2t-\M?KnUhV;iN;P2GE?=`0[cVLgNeF#Ce!WucoGC&<]Xm2MJN?['J2RenBVDKF5.JM!Hr:4K=E^)sFGumZ7:2LR+/]Q"X
%*_6esO5$FF5O89J2\;m-V^$FZ)lm7UaUt1i@d)BaH+A92&ln5QbDk##h!5EFMZUQ'&$5(tPFS9C_s?IV4BY$%p^f[''9?r6nTdH`
%/c*QDS7Q5Z[XQULLatpd2sPsoR,dc+=4q"-m#*3qkc0emDiZ0T$9deDgTB4A>o-MX;ff!`HGeU2bX$LRm=/qnKO!(lebP1A8)2Vi
%Rhh\@JuS>\/]-sCS_p@X=Gu;"S[sA2F]7JtZ4uU%<ZEfdgIL71[X%mrr6'7\,=o;nq;#[A\#ul@ri[KXZ=qL-.e?S08pp;9Q"*No
%gARuuc+'t6%Sp?XjDT>Ig1k?m)jt9sqGlX]YgVSkO2S6gp[>9MeU"E=i0foU^\PSf21GM`k>)&\s7.iBl7!.L]p"ITAU#!0nY]S?
%;:DI'm/Yp^`):q^UPhJQe*TF]Lec[2?,W&$En3Cl?.>'oB6E/0qdDljmVhc:/X334@eMEp2e"OiF*eADY(rFWU*"]a!drdZ8[skr
%N&P+9X]PPQJ,ZQ$msuJSgF)XalsMS\MB6gP:.%3_J>tU;.h;5!ADr&Ef;h\!Q?6qBr]q":$s>PUgYKq3ea\)ohM=aujSf*[G;_U)
%gdW-p)t8?EMiJ"1hrHLo3'_utS3u_\6<P];]Q15K@eeiM:K=ZTltIu516.Qfn7njm(5o7<=]MYRFb2%QNu=KlJpeiIh+sT!rKu?(
%aEJ[,.12R+Z,$#Om4t'A",[?s'r4hGjA2Jm>;/Scm2Bnp,:>5m$!^jJ)Ha)?,m)jJo_(\U+'jP,)G9KFl-JkuN@0NIk*4/:,r!aV
%foWoP'Xod%5ItFq8$'RWqk1\F0\(B;"Vo?;<?J8t-KHrQ!B*O)JudQSXEU`M,oB)Z[\TbC1Cf_)UihBjc&W^j7d:Rf))$3'EjL=n
%>">1)2H!.&oPPF(hp%NJGf3HlonEdF7PRZh^r+i_d6=*NJLF/oQ"@g+Y9%l#.T\4O?#PIsps/2ZK^lI4B1&ZhbLr+DLq<QV(C6X2
%m2JAj/rRH2j?_]mi>gm.?/`Mm6Ckh"@a#C&=]VUl,nX6e63p6k(,S=`]JKc#8lKQpP8&;jV9$nIgr>e@KUim(ZHqPaiItUBI^#mh
%*&>Fr](<'Y#M,`BDC@3/B4C`$3gQgQf05Tbr:=/2DKh%s6Yk5Q1W+p3ZUJI/*_Ge-g)qI0&l#oGR;7;7cid9Db:N&i2\#+W>2mn"
%3pbWNlF3.Qdp[1E@;1DK'^E.X>8;W[H(+m_KU^Dh#qjR_l8"i;Eh"R)0ssF2=E^Jr8_nUI54K=`W-W;AL%]6.LK(&prIB1TiA*@\
%Ij\"d!`dOC&,K3l[7J%.(CM^\:K%p'VfUX^3l=V=Ar30c%[T4C,Vjg$Qtp-k9gr+J!UE6EV/r-a0'X$,]V8RKIVL8XHept!cu6J1
%G`/n1PUL`708dd1`l?s,hSDh:rt%Mp'rkE[`(Xhg7CChBF%%fB4:Foc,WOPI@\Z/tMH1+YOPQi\,<R\]*[;%O*Bk@LiTVp2'LQKK
%-5[B!2J-cV]85KYDFpd;.&Cl5UUs9'JrVJ8@3I//AR6''7^pS'[;eGF.ag.3^66%(SM@[G=3EG:4OYT$Y$,7nq3kLHOV"O\\PjMA
%amP34:)YBk_Tml`_X4C8`^RfbO-j\uE^.C&SQ/H,#?^PYVM:bEi+.'ZW-duQ8$@K,9u4?tUr7m\%2@B?N0W+hgc+=lCW^(8iXs@_
%87@,!c<GXG@iu=kDM^n1DBS(*ET5,afUr:4)K:d#,'Z5YD'Yl:WaRFq4Em*92T,N/IqI>AJ+O+q9?unMXe>)C2?06ikL6LG+cXWP
%7-Iq-PO47)m'?FVArHeP2L4tTUnGH)#s>gR:`O0=s'-LGf^^/s68@-<[_`sq[.F%E5]^(4L69I3guhEFVNT1S*/!3Jb9&DYp92/I
%jq]nIf@u:\*Rm^e8NWt[0TXg75O:\aNa)Ijb*D!o\\VO]Pr/a?9$O]DK.r4cD,V.fS]D_uHB^9E`/_.3Ol(L3HqG9lqhNaKW/L%Z
%#">Q@g'jQ7n'\Ss,@&ke;B*9u[L]-jUZ^G@9_`>;YS7eQV37Pm=`Xu9/\T]C]Xor'-OmKVpuQfcL+H[!0g4J``H^LL'R_q*S^8UX
%@]ep,ZEIrd(9K;_^#Q/4\HM#[k8oV,!jLbWW+!dsa]GO)3@\G%K8c/<(<rtTqPtp=H?""p$*/E%nNu\3G([E8T39A!9W7^"48r%A
%N38kU84I@Rkg\[dWAnP[isH04Y*P[K>YcU[3K38ul`SM("uB90U3uPHB47G+QWY&rhLU#hes\/>Q#baIHJ^)H/dnuU^l-h'M2k@l
%%_*p6a:.YSSgRVr)01j[,N/]iP`IIj#%9`dc-([_`G)L21sbAa(aHYm"?I8G8:B#.=\jGSPDVpt<O[h,Se[E!5qAjiQC"]VK0ASc
%9S5anB^[/J3L_b:6h).q]J<2QAp;TNNY87O#FrC^ijk&q$[T$NFMn.=1f/q]NR_@1XA%&$X^Wlp[,&9\"XDCqo$%h^4aoE1M<Fgd
%[^=4F.m!]S`AI7]o(6Xsp7uIb;?Z2Am7*9qE?,s]N'%;MmMerg+Wp4VF+aX@#q$`^KTk#V[hDpYqe[9n24F@FGk>Cf_IjjEB*BHT
%fP=O,/13DFZ_h0T7P6VOJMnIXI]`uR\'J*8.[F'P9]q+]F3X<n_90UW8.E"Q$P\$T4e?jjK\FIdZuWjbBVoi+EY,9LQ$>3-:n,=#
%4)ZU10QT3VXdjA-%"ir`X%5,q?uOoM.])E>]UVRdf+&.T#K"<^BHb`6+AmEK+4l(Z>i,Kp""At);VIFf7$9?J-_Ah?Kn5g[._I5'
%2DUWY\u`a]Cr6r*a.t4AqDM;"CXGJrUg/)taYf#.CaG?Zas>$t9K=3?<V^BMb&r0]j^oDa\+>#XEe\b)Q/>checU2'(Ze8,hlusE
%d*13a[W/mUFVKCJ#\3Xt;?^I2Q*IVQ#^F[-FMIJJ]N%^Y;(u$#-a,?[2e_;efb\h4UtY1CDE6?=fJ=@G:O9bE0Eum1]0n^Pd<Tnh
%@$Fch?,cut:YJOlDATfA8h'/hPFI=!/Zipo*dDOMl=^t<\'iHM8.^@ricaO0IA_^,,M1mfCtqk#*77)M0B(o(VI:F_2u=!sNa'QN
%\l5Pj.G\,ZW=<VW*0MK-_E5Xni\2-AkiV1*q1(Jq1&1R.h/%8plfQ3DZjaC4:>I1IP1i:pBOnZ^bK7!W/66fBni6G]IZ#]-"YO%O
%GQnj.!L<(!:,>"LQu5K'WE-b'4<"!^XOj&lk$Z'ED1C9l$s(T]3.AQ9<'0".AbdMN#98*Q`ppTk2*Q.=Esm.o7aqC#T]3;/hc6s(
%V3_-*#EB6oYKRhPlQ1pW'gX<uGCPh=AU5C^mD.2lqWq*&''<r."3pCH#Xut7<uA^0C/\C_opb"Qmf#R0cS^pdn($_28W<`f<lmuO
%88EsVUhO6kR5Uu8%DAkZ[&er,'WCMJ[s5Rjb?GfFZK&6_TBB7q^0`cmn=[$l#HCil>qafbED18+Eh;1H8Bln./VVB98:SM_/%X@t
%?d.;jU=[8lTI$EhR>"oDmhP7o1=!II%0GYIP,4$Hbcbg=on-57\(XkIFEnOH?X+p<]QN&4E9@K`#HPkV!>_G&ZanoQVQK3kO_Yr.
%I'UCl@-5h_[]+%=8rJ&bZ"j2?BU!V3(=FgP`EasmeBub1h113u:jT=kpPRMER8!Y4/j`=!n6"=W=86<J+i"_2C+rZ0"PYdWD-3NX
%Ab-nseBs^d2N_DDI'YA@>SK@_05X2t6<]_!p[+J??*H5&h&B"1JCA)21P`<%`mPVD@pSLb.,3$$D[[/V1rjIo;:kNQj6/P<fpQaP
%YQpHMEPm.QmIGF=4P<&>-L0Qb*%I!\@K#U)l-J8$s3'HO:X?6%I+*X*IscS:r28/E^O?.[qXmqY5!8f0q==1W4kfT,p\nNdGH]=7
%rpdnloB!ksJ+sV/+72:;oB+frIfK(B56ES:$W6~>
%AI9_PrivateDataEnd
